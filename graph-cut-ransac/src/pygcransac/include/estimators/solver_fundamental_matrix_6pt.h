// Copyright (C) 2025 Czech Technical University.
// All rights reserved.
//
// Redistribution and use in source and binary forms, with or without
// modification, are permitted provided that the following conditions are
// met:
//
//     * Redistributions of source code must retain the above copyright
//       notice, this list of conditions and the following disclaimer.
//
//     * Redistributions in binary form must reproduce the above
//       copyright notice, this list of conditions and the following
//       disclaimer in the documentation and/or other materials provided
//       with the distribution.
//
//     * Neither the name of Czech Technical University nor the
//       names of its contributors may be used to endorse or promote products
//       derived from this software without specific prior written permission.
//
// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
// AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
// IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
// ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDERS OR CONTRIBUTORS BE
// LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
// CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
// SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
// INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
// CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
// ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
// POSSIBILITY OF SUCH DAMAGE.
//
// 6-point equal focal length solver based on
// Z Kukelova, J Kileel, B Sturmfels, T Pajdla. A clever elimination strategy for efficient minimal solvers. cvpr 2017.
// elimination template 21x36
#pragma once

#include "solver_engine.h"
#include "fundamental_estimator.h"

namespace gcransac
{
	namespace estimator
	{
		namespace solver
		{
			// This is the estimator class for estimating a homography matrix between two images. A model estimation method and error calculation method are implemented
			class FundamentalMatrixPT6 : public SolverEngine
			{
			public:
				FundamentalMatrixPT6()
				{
				}

				~FundamentalMatrixPT6()
				{
				}

				// Determines if there is a chance of returning multiple models
				// when function 'estimateModel' is applied.
				static constexpr bool returnMultipleModels()
				{
					return maximumSolutions() > 1;
				}

				static constexpr size_t maximumSolutions()
				{
					return 15;
				}

				// The minimum number of points required for the estimation
				static constexpr size_t sampleSize()
				{
					return 6;
				}

				OLGA_INLINE bool estimateModel(
					const cv::Mat &data_,					 // The set of data points
					const size_t *sample_,					 // The sample used for the estimation
					size_t sample_number_,					 // The size of the sample
					std::vector<Model> &models_,			 // The estimated model parameters
					const double *weights_ = nullptr) const; // The weight for each point

			protected:
				Eigen::MatrixXcd solver_6pt_focal(const Eigen::VectorXd &data_) const;
			};

			OLGA_INLINE bool FundamentalMatrixPT6::estimateModel(
				const cv::Mat &data_,
				const size_t *sample_,
				size_t sample_number_,
				std::vector<Model> &models_,
				const double *weights_) const
			{
				if (sample_ == nullptr)
					sample_number_ = data_.rows;
				Eigen::MatrixXd coefficients(sample_number_, 9);
				const double *data_ptr = reinterpret_cast<double *>(data_.data);
				const int cols = data_.cols;

				// Form a linear system: i-th row of A(=a) represents
				// the equation: (m2[i], 1)'*F*(m1[i], 1) = 0
				double weight = 1.0;
				size_t offset;
				for (size_t i = 0; i < sample_number_; i++)
				{
					if (sample_ == nullptr)
					{
						offset = cols * i;
						if (weights_ != nullptr)
							weight = weights_[i];
					}
					else
					{
						offset = cols * sample_[i];
						if (weights_ != nullptr)
							weight = weights_[sample_[i]];
					}

					const double
						x0 = data_ptr[offset],
						y0 = data_ptr[offset + 1],
						x1 = data_ptr[offset + 2],
						y1 = data_ptr[offset + 3];

					// If not weighted least-squares is applied
					if (weights_ == nullptr)
					{
						coefficients(i, 0) = x1 * x0;
						coefficients(i, 1) = x1 * y0;
						coefficients(i, 2) = x1;
						coefficients(i, 3) = y1 * x0;
						coefficients(i, 4) = y1 * y0;
						coefficients(i, 5) = y1;
						coefficients(i, 6) = x0;
						coefficients(i, 7) = y0;
						coefficients(i, 8) = 1;
					}
				}

				Eigen::Matrix<double, 9, 1> f0, f1, f2;

				Eigen::FullPivHouseholderQR<Eigen::MatrixXd> qr(
					coefficients.transpose() * coefficients);
				Eigen::MatrixXd Q = qr.matrixQ();
				Eigen::Matrix<double, 9, 3> null_space =
					Q.rightCols<3>();

				f0 = null_space.col(0);
				f1 = null_space.col(1);
				f2 = null_space.col(2);

				Eigen::Matrix<double, 27, 1> data2;
				data2 << f0, f1, f2;

				Eigen::MatrixXcd sols = solver_6pt_focal(data2);

				for (size_t k = 0; k < 15; ++k)
				{
					if (sols(0, k).imag() > std::numeric_limits<double>::epsilon() ||
						sols(1, k).imag() > std::numeric_limits<double>::epsilon())
						continue;

					Eigen::MatrixXd M = sols(0, k).real() * f0 + sols(1, k).real() * f1 + f2;
					double fsqr = (-M(2) * M(2) * M(7) * M(8) - M(5) * M(5) * M(7) * M(8) + M(1) * M(2) * M(8) * M(8) + M(4) * M(5) * M(8) * M(8)) / (M(0) * M(2) * M(6) * M(7) + M(3) * M(5) * M(6) * M(7) + M(1) * M(2) * M(7) * M(7) + M(4) * M(5) * M(7) * M(7) - M(0) * M(1) * M(6) * M(8) - M(3) * M(4) * M(6) * M(8) - M(1) * M(1) * M(7) * M(8) - M(4) * M(4) * M(7) * M(8));

					if (fsqr < 0.0)
						continue;
					// double focal = std::sqrt(fsqr);
					// double fm8 = focal / M(8);

					FundamentalMatrix model;
					// model.descriptor << M(0)*fm8, M(1)*fm8, M(2)*fm8,
					// 					M(3)*fm8, M(4)*fm8, M(5)*fm8,
					// 					M(6)*fm8, M(7)*fm8, focal;

					model.descriptor << M(0), M(1), M(2),
						M(3), M(4), M(5),
						M(6), M(7), M(8);

					models_.push_back(model);
				}

				return true;
			}

			Eigen::MatrixXcd FundamentalMatrixPT6::solver_6pt_focal(const Eigen::VectorXd &data_) const
			{
				using namespace Eigen;

				const double *d = data_.data();
				VectorXd coeffs(31);
				coeffs[0] = d[2] * d[4] * d[6] - d[1] * d[5] * d[6] - d[2] * d[3] * d[7] + d[0] * d[5] * d[7] + d[1] * d[3] * d[8] - d[0] * d[4] * d[8];
				coeffs[1] = d[5] * d[7] * d[9] - d[4] * d[8] * d[9] - d[5] * d[6] * d[10] + d[3] * d[8] * d[10] + d[4] * d[6] * d[11] - d[3] * d[7] * d[11] - d[2] * d[7] * d[12] + d[1] * d[8] * d[12] + d[2] * d[6] * d[13] - d[0] * d[8] * d[13] - d[1] * d[6] * d[14] + d[0] * d[7] * d[14] + d[2] * d[4] * d[15] - d[1] * d[5] * d[15] - d[2] * d[3] * d[16] + d[0] * d[5] * d[16] + d[1] * d[3] * d[17] - d[0] * d[4] * d[17];
				coeffs[2] = d[8] * d[10] * d[12] - d[7] * d[11] * d[12] - d[8] * d[9] * d[13] + d[6] * d[11] * d[13] + d[7] * d[9] * d[14] - d[6] * d[10] * d[14] - d[5] * d[10] * d[15] + d[4] * d[11] * d[15] + d[2] * d[13] * d[15] - d[1] * d[14] * d[15] + d[5] * d[9] * d[16] - d[3] * d[11] * d[16] - d[2] * d[12] * d[16] + d[0] * d[14] * d[16] - d[4] * d[9] * d[17] + d[3] * d[10] * d[17] + d[1] * d[12] * d[17] - d[0] * d[13] * d[17];
				coeffs[3] = d[11] * d[13] * d[15] - d[10] * d[14] * d[15] - d[11] * d[12] * d[16] + d[9] * d[14] * d[16] + d[10] * d[12] * d[17] - d[9] * d[13] * d[17];
				coeffs[4] = d[5] * d[7] * d[18] - d[4] * d[8] * d[18] - d[5] * d[6] * d[19] + d[3] * d[8] * d[19] + d[4] * d[6] * d[20] - d[3] * d[7] * d[20] - d[2] * d[7] * d[21] + d[1] * d[8] * d[21] + d[2] * d[6] * d[22] - d[0] * d[8] * d[22] - d[1] * d[6] * d[23] + d[0] * d[7] * d[23] + d[2] * d[4] * d[24] - d[1] * d[5] * d[24] - d[2] * d[3] * d[25] + d[0] * d[5] * d[25] + d[1] * d[3] * d[26] - d[0] * d[4] * d[26];
				coeffs[5] = -d[8] * d[13] * d[18] + d[7] * d[14] * d[18] + d[5] * d[16] * d[18] - d[4] * d[17] * d[18] + d[8] * d[12] * d[19] - d[6] * d[14] * d[19] - d[5] * d[15] * d[19] + d[3] * d[17] * d[19] - d[7] * d[12] * d[20] + d[6] * d[13] * d[20] + d[4] * d[15] * d[20] - d[3] * d[16] * d[20] + d[8] * d[10] * d[21] - d[7] * d[11] * d[21] - d[2] * d[16] * d[21] + d[1] * d[17] * d[21] - d[8] * d[9] * d[22] + d[6] * d[11] * d[22] + d[2] * d[15] * d[22] - d[0] * d[17] * d[22] + d[7] * d[9] * d[23] - d[6] * d[10] * d[23] - d[1] * d[15] * d[23] + d[0] * d[16] * d[23] - d[5] * d[10] * d[24] + d[4] * d[11] * d[24] + d[2] * d[13] * d[24] - d[1] * d[14] * d[24] + d[5] * d[9] * d[25] - d[3] * d[11] * d[25] - d[2] * d[12] * d[25] + d[0] * d[14] * d[25] - d[4] * d[9] * d[26] + d[3] * d[10] * d[26] + d[1] * d[12] * d[26] - d[0] * d[13] * d[26];
				coeffs[6] = d[14] * d[16] * d[18] - d[13] * d[17] * d[18] - d[14] * d[15] * d[19] + d[12] * d[17] * d[19] + d[13] * d[15] * d[20] - d[12] * d[16] * d[20] - d[11] * d[16] * d[21] + d[10] * d[17] * d[21] + d[11] * d[15] * d[22] - d[9] * d[17] * d[22] - d[10] * d[15] * d[23] + d[9] * d[16] * d[23] + d[11] * d[13] * d[24] - d[10] * d[14] * d[24] - d[11] * d[12] * d[25] + d[9] * d[14] * d[25] + d[10] * d[12] * d[26] - d[9] * d[13] * d[26];
				coeffs[7] = d[8] * d[19] * d[21] - d[7] * d[20] * d[21] - d[8] * d[18] * d[22] + d[6] * d[20] * d[22] + d[7] * d[18] * d[23] - d[6] * d[19] * d[23] - d[5] * d[19] * d[24] + d[4] * d[20] * d[24] + d[2] * d[22] * d[24] - d[1] * d[23] * d[24] + d[5] * d[18] * d[25] - d[3] * d[20] * d[25] - d[2] * d[21] * d[25] + d[0] * d[23] * d[25] - d[4] * d[18] * d[26] + d[3] * d[19] * d[26] + d[1] * d[21] * d[26] - d[0] * d[22] * d[26];
				coeffs[8] = d[17] * d[19] * d[21] - d[16] * d[20] * d[21] - d[17] * d[18] * d[22] + d[15] * d[20] * d[22] + d[16] * d[18] * d[23] - d[15] * d[19] * d[23] - d[14] * d[19] * d[24] + d[13] * d[20] * d[24] + d[11] * d[22] * d[24] - d[10] * d[23] * d[24] + d[14] * d[18] * d[25] - d[12] * d[20] * d[25] - d[11] * d[21] * d[25] + d[9] * d[23] * d[25] - d[13] * d[18] * d[26] + d[12] * d[19] * d[26] + d[10] * d[21] * d[26] - d[9] * d[22] * d[26];
				coeffs[9] = d[20] * d[22] * d[24] - d[19] * d[23] * d[24] - d[20] * d[21] * d[25] + d[18] * d[23] * d[25] + d[19] * d[21] * d[26] - d[18] * d[22] * d[26];
				coeffs[10] = -d[0] * std::pow(d[2], 3) * d[6] - std::pow(d[2], 2) * d[3] * d[5] * d[6] - d[0] * d[2] * std::pow(d[5], 2) * d[6] - d[3] * std::pow(d[5], 3) * d[6] + d[0] * d[2] * std::pow(d[6], 3) + d[3] * d[5] * std::pow(d[6], 3) - d[1] * std::pow(d[2], 3) * d[7] - std::pow(d[2], 2) * d[4] * d[5] * d[7] - d[1] * d[2] * std::pow(d[5], 2) * d[7] - d[4] * std::pow(d[5], 3) * d[7] + d[1] * d[2] * std::pow(d[6], 2) * d[7] + d[4] * d[5] * std::pow(d[6], 2) * d[7] + d[0] * d[2] * d[6] * std::pow(d[7], 2) + d[3] * d[5] * d[6] * std::pow(d[7], 2) + d[1] * d[2] * std::pow(d[7], 3) + d[4] * d[5] * std::pow(d[7], 3) + std::pow(d[0], 2) * std::pow(d[2], 2) * d[8] + std::pow(d[1], 2) * std::pow(d[2], 2) * d[8] + 2 * d[0] * d[2] * d[3] * d[5] * d[8] + 2 * d[1] * d[2] * d[4] * d[5] * d[8] + std::pow(d[3], 2) * std::pow(d[5], 2) * d[8] + std::pow(d[4], 2) * std::pow(d[5], 2) * d[8] - std::pow(d[0], 2) * std::pow(d[6], 2) * d[8] - std::pow(d[3], 2) * std::pow(d[6], 2) * d[8] - 2 * d[0] * d[1] * d[6] * d[7] * d[8] - 2 * d[3] * d[4] * d[6] * d[7] * d[8] - std::pow(d[1], 2) * std::pow(d[7], 2) * d[8] - std::pow(d[4], 2) * std::pow(d[7], 2) * d[8];
				coeffs[11] = -std::pow(d[2], 3) * d[6] * d[9] - d[2] * std::pow(d[5], 2) * d[6] * d[9] + d[2] * std::pow(d[6], 3) * d[9] + d[2] * d[6] * std::pow(d[7], 2) * d[9] + 2 * d[0] * std::pow(d[2], 2) * d[8] * d[9] + 2 * d[2] * d[3] * d[5] * d[8] * d[9] - 2 * d[0] * std::pow(d[6], 2) * d[8] * d[9] - 2 * d[1] * d[6] * d[7] * d[8] * d[9] - std::pow(d[2], 3) * d[7] * d[10] - d[2] * std::pow(d[5], 2) * d[7] * d[10] + d[2] * std::pow(d[6], 2) * d[7] * d[10] + d[2] * std::pow(d[7], 3) * d[10] + 2 * d[1] * std::pow(d[2], 2) * d[8] * d[10] + 2 * d[2] * d[4] * d[5] * d[8] * d[10] - 2 * d[0] * d[6] * d[7] * d[8] * d[10] - 2 * d[1] * std::pow(d[7], 2) * d[8] * d[10] - 3 * d[0] * std::pow(d[2], 2) * d[6] * d[11] - 2 * d[2] * d[3] * d[5] * d[6] * d[11] - d[0] * std::pow(d[5], 2) * d[6] * d[11] + d[0] * std::pow(d[6], 3) * d[11] - 3 * d[1] * std::pow(d[2], 2) * d[7] * d[11] - 2 * d[2] * d[4] * d[5] * d[7] * d[11] - d[1] * std::pow(d[5], 2) * d[7] * d[11] + d[1] * std::pow(d[6], 2) * d[7] * d[11] + d[0] * d[6] * std::pow(d[7], 2) * d[11] + d[1] * std::pow(d[7], 3) * d[11] + 2 * std::pow(d[0], 2) * d[2] * d[8] * d[11] + 2 * std::pow(d[1], 2) * d[2] * d[8] * d[11] + 2 * d[0] * d[3] * d[5] * d[8] * d[11] + 2 * d[1] * d[4] * d[5] * d[8] * d[11] - std::pow(d[2], 2) * d[5] * d[6] * d[12] - std::pow(d[5], 3) * d[6] * d[12] + d[5] * std::pow(d[6], 3) * d[12] + d[5] * d[6] * std::pow(d[7], 2) * d[12] + 2 * d[0] * d[2] * d[5] * d[8] * d[12] + 2 * d[3] * std::pow(d[5], 2) * d[8] * d[12] - 2 * d[3] * std::pow(d[6], 2) * d[8] * d[12] - 2 * d[4] * d[6] * d[7] * d[8] * d[12] - std::pow(d[2], 2) * d[5] * d[7] * d[13] - std::pow(d[5], 3) * d[7] * d[13] + d[5] * std::pow(d[6], 2) * d[7] * d[13] + d[5] * std::pow(d[7], 3) * d[13] + 2 * d[1] * d[2] * d[5] * d[8] * d[13] + 2 * d[4] * std::pow(d[5], 2) * d[8] * d[13] - 2 * d[3] * d[6] * d[7] * d[8] * d[13] - 2 * d[4] * std::pow(d[7], 2) * d[8] * d[13] - std::pow(d[2], 2) * d[3] * d[6] * d[14] - 2 * d[0] * d[2] * d[5] * d[6] * d[14] - 3 * d[3] * std::pow(d[5], 2) * d[6] * d[14] + d[3] * std::pow(d[6], 3) * d[14] - std::pow(d[2], 2) * d[4] * d[7] * d[14] - 2 * d[1] * d[2] * d[5] * d[7] * d[14] - 3 * d[4] * std::pow(d[5], 2) * d[7] * d[14] + d[4] * std::pow(d[6], 2) * d[7] * d[14] + d[3] * d[6] * std::pow(d[7], 2) * d[14] + d[4] * std::pow(d[7], 3) * d[14] + 2 * d[0] * d[2] * d[3] * d[8] * d[14] + 2 * d[1] * d[2] * d[4] * d[8] * d[14] + 2 * std::pow(d[3], 2) * d[5] * d[8] * d[14] + 2 * std::pow(d[4], 2) * d[5] * d[8] * d[14] - d[0] * std::pow(d[2], 3) * d[15] - std::pow(d[2], 2) * d[3] * d[5] * d[15] - d[0] * d[2] * std::pow(d[5], 2) * d[15] - d[3] * std::pow(d[5], 3) * d[15] + 3 * d[0] * d[2] * std::pow(d[6], 2) * d[15] + 3 * d[3] * d[5] * std::pow(d[6], 2) * d[15] + 2 * d[1] * d[2] * d[6] * d[7] * d[15] + 2 * d[4] * d[5] * d[6] * d[7] * d[15] + d[0] * d[2] * std::pow(d[7], 2) * d[15] + d[3] * d[5] * std::pow(d[7], 2) * d[15] - 2 * std::pow(d[0], 2) * d[6] * d[8] * d[15] - 2 * std::pow(d[3], 2) * d[6] * d[8] * d[15] - 2 * d[0] * d[1] * d[7] * d[8] * d[15] - 2 * d[3] * d[4] * d[7] * d[8] * d[15] - d[1] * std::pow(d[2], 3) * d[16] - std::pow(d[2], 2) * d[4] * d[5] * d[16] - d[1] * d[2] * std::pow(d[5], 2) * d[16] - d[4] * std::pow(d[5], 3) * d[16] + d[1] * d[2] * std::pow(d[6], 2) * d[16] + d[4] * d[5] * std::pow(d[6], 2) * d[16] + 2 * d[0] * d[2] * d[6] * d[7] * d[16] + 2 * d[3] * d[5] * d[6] * d[7] * d[16] + 3 * d[1] * d[2] * std::pow(d[7], 2) * d[16] + 3 * d[4] * d[5] * std::pow(d[7], 2) * d[16] - 2 * d[0] * d[1] * d[6] * d[8] * d[16] - 2 * d[3] * d[4] * d[6] * d[8] * d[16] - 2 * std::pow(d[1], 2) * d[7] * d[8] * d[16] - 2 * std::pow(d[4], 2) * d[7] * d[8] * d[16] + std::pow(d[0], 2) * std::pow(d[2], 2) * d[17] + std::pow(d[1], 2) * std::pow(d[2], 2) * d[17] + 2 * d[0] * d[2] * d[3] * d[5] * d[17] + 2 * d[1] * d[2] * d[4] * d[5] * d[17] + std::pow(d[3], 2) * std::pow(d[5], 2) * d[17] + std::pow(d[4], 2) * std::pow(d[5], 2) * d[17] - std::pow(d[0], 2) * std::pow(d[6], 2) * d[17] - std::pow(d[3], 2) * std::pow(d[6], 2) * d[17] - 2 * d[0] * d[1] * d[6] * d[7] * d[17] - 2 * d[3] * d[4] * d[6] * d[7] * d[17] - std::pow(d[1], 2) * std::pow(d[7], 2) * d[17] - std::pow(d[4], 2) * std::pow(d[7], 2) * d[17];
				coeffs[12] = std::pow(d[2], 2) * d[8] * std::pow(d[9], 2) - std::pow(d[6], 2) * d[8] * std::pow(d[9], 2) - 2 * d[6] * d[7] * d[8] * d[9] * d[10] + std::pow(d[2], 2) * d[8] * std::pow(d[10], 2) - std::pow(d[7], 2) * d[8] * std::pow(d[10], 2) - 3 * std::pow(d[2], 2) * d[6] * d[9] * d[11] - std::pow(d[5], 2) * d[6] * d[9] * d[11] + std::pow(d[6], 3) * d[9] * d[11] + d[6] * std::pow(d[7], 2) * d[9] * d[11] + 4 * d[0] * d[2] * d[8] * d[9] * d[11] + 2 * d[3] * d[5] * d[8] * d[9] * d[11] - 3 * std::pow(d[2], 2) * d[7] * d[10] * d[11] - std::pow(d[5], 2) * d[7] * d[10] * d[11] + std::pow(d[6], 2) * d[7] * d[10] * d[11] + std::pow(d[7], 3) * d[10] * d[11] + 4 * d[1] * d[2] * d[8] * d[10] * d[11] + 2 * d[4] * d[5] * d[8] * d[10] * d[11] - 3 * d[0] * d[2] * d[6] * std::pow(d[11], 2) - d[3] * d[5] * d[6] * std::pow(d[11], 2) - 3 * d[1] * d[2] * d[7] * std::pow(d[11], 2) - d[4] * d[5] * d[7] * std::pow(d[11], 2) + std::pow(d[0], 2) * d[8] * std::pow(d[11], 2) + std::pow(d[1], 2) * d[8] * std::pow(d[11], 2) + 2 * d[2] * d[5] * d[8] * d[9] * d[12] - 2 * d[2] * d[5] * d[6] * d[11] * d[12] + 2 * d[0] * d[5] * d[8] * d[11] * d[12] + std::pow(d[5], 2) * d[8] * std::pow(d[12], 2) - std::pow(d[6], 2) * d[8] * std::pow(d[12], 2) + 2 * d[2] * d[5] * d[8] * d[10] * d[13] - 2 * d[2] * d[5] * d[7] * d[11] * d[13] + 2 * d[1] * d[5] * d[8] * d[11] * d[13] - 2 * d[6] * d[7] * d[8] * d[12] * d[13] + std::pow(d[5], 2) * d[8] * std::pow(d[13], 2) - std::pow(d[7], 2) * d[8] * std::pow(d[13], 2) - 2 * d[2] * d[5] * d[6] * d[9] * d[14] + 2 * d[2] * d[3] * d[8] * d[9] * d[14] - 2 * d[2] * d[5] * d[7] * d[10] * d[14] + 2 * d[2] * d[4] * d[8] * d[10] * d[14] - 2 * d[2] * d[3] * d[6] * d[11] * d[14] - 2 * d[0] * d[5] * d[6] * d[11] * d[14] - 2 * d[2] * d[4] * d[7] * d[11] * d[14] - 2 * d[1] * d[5] * d[7] * d[11] * d[14] + 2 * d[0] * d[3] * d[8] * d[11] * d[14] + 2 * d[1] * d[4] * d[8] * d[11] * d[14] - std::pow(d[2], 2) * d[6] * d[12] * d[14] - 3 * std::pow(d[5], 2) * d[6] * d[12] * d[14] + std::pow(d[6], 3) * d[12] * d[14] + d[6] * std::pow(d[7], 2) * d[12] * d[14] + 2 * d[0] * d[2] * d[8] * d[12] * d[14] + 4 * d[3] * d[5] * d[8] * d[12] * d[14] - std::pow(d[2], 2) * d[7] * d[13] * d[14] - 3 * std::pow(d[5], 2) * d[7] * d[13] * d[14] + std::pow(d[6], 2) * d[7] * d[13] * d[14] + std::pow(d[7], 3) * d[13] * d[14] + 2 * d[1] * d[2] * d[8] * d[13] * d[14] + 4 * d[4] * d[5] * d[8] * d[13] * d[14] - d[0] * d[2] * d[6] * std::pow(d[14], 2) - 3 * d[3] * d[5] * d[6] * std::pow(d[14], 2) - d[1] * d[2] * d[7] * std::pow(d[14], 2) - 3 * d[4] * d[5] * d[7] * std::pow(d[14], 2) + std::pow(d[3], 2) * d[8] * std::pow(d[14], 2) + std::pow(d[4], 2) * d[8] * std::pow(d[14], 2) - std::pow(d[2], 3) * d[9] * d[15] - d[2] * std::pow(d[5], 2) * d[9] * d[15] + 3 * d[2] * std::pow(d[6], 2) * d[9] * d[15] + d[2] * std::pow(d[7], 2) * d[9] * d[15] - 4 * d[0] * d[6] * d[8] * d[9] * d[15] - 2 * d[1] * d[7] * d[8] * d[9] * d[15] + 2 * d[2] * d[6] * d[7] * d[10] * d[15] - 2 * d[0] * d[7] * d[8] * d[10] * d[15] - 3 * d[0] * std::pow(d[2], 2) * d[11] * d[15] - 2 * d[2] * d[3] * d[5] * d[11] * d[15] - d[0] * std::pow(d[5], 2) * d[11] * d[15] + 3 * d[0] * std::pow(d[6], 2) * d[11] * d[15] + 2 * d[1] * d[6] * d[7] * d[11] * d[15] + d[0] * std::pow(d[7], 2) * d[11] * d[15] - std::pow(d[2], 2) * d[5] * d[12] * d[15] - std::pow(d[5], 3) * d[12] * d[15] + 3 * d[5] * std::pow(d[6], 2) * d[12] * d[15] + d[5] * std::pow(d[7], 2) * d[12] * d[15] - 4 * d[3] * d[6] * d[8] * d[12] * d[15] - 2 * d[4] * d[7] * d[8] * d[12] * d[15] + 2 * d[5] * d[6] * d[7] * d[13] * d[15] - 2 * d[3] * d[7] * d[8] * d[13] * d[15] - std::pow(d[2], 2) * d[3] * d[14] * d[15] - 2 * d[0] * d[2] * d[5] * d[14] * d[15] - 3 * d[3] * std::pow(d[5], 2) * d[14] * d[15] + 3 * d[3] * std::pow(d[6], 2) * d[14] * d[15] + 2 * d[4] * d[6] * d[7] * d[14] * d[15] + d[3] * std::pow(d[7], 2) * d[14] * d[15] + 3 * d[0] * d[2] * d[6] * std::pow(d[15], 2) + 3 * d[3] * d[5] * d[6] * std::pow(d[15], 2) + d[1] * d[2] * d[7] * std::pow(d[15], 2) + d[4] * d[5] * d[7] * std::pow(d[15], 2) - std::pow(d[0], 2) * d[8] * std::pow(d[15], 2) - std::pow(d[3], 2) * d[8] * std::pow(d[15], 2) + 2 * d[2] * d[6] * d[7] * d[9] * d[16] - 2 * d[1] * d[6] * d[8] * d[9] * d[16] - std::pow(d[2], 3) * d[10] * d[16] - d[2] * std::pow(d[5], 2) * d[10] * d[16] + d[2] * std::pow(d[6], 2) * d[10] * d[16] + 3 * d[2] * std::pow(d[7], 2) * d[10] * d[16] - 2 * d[0] * d[6] * d[8] * d[10] * d[16] - 4 * d[1] * d[7] * d[8] * d[10] * d[16] - 3 * d[1] * std::pow(d[2], 2) * d[11] * d[16] - 2 * d[2] * d[4] * d[5] * d[11] * d[16] - d[1] * std::pow(d[5], 2) * d[11] * d[16] + d[1] * std::pow(d[6], 2) * d[11] * d[16] + 2 * d[0] * d[6] * d[7] * d[11] * d[16] + 3 * d[1] * std::pow(d[7], 2) * d[11] * d[16] + 2 * d[5] * d[6] * d[7] * d[12] * d[16] - 2 * d[4] * d[6] * d[8] * d[12] * d[16] - std::pow(d[2], 2) * d[5] * d[13] * d[16] - std::pow(d[5], 3) * d[13] * d[16] + d[5] * std::pow(d[6], 2) * d[13] * d[16] + 3 * d[5] * std::pow(d[7], 2) * d[13] * d[16] - 2 * d[3] * d[6] * d[8] * d[13] * d[16] - 4 * d[4] * d[7] * d[8] * d[13] * d[16] - std::pow(d[2], 2) * d[4] * d[14] * d[16] - 2 * d[1] * d[2] * d[5] * d[14] * d[16] - 3 * d[4] * std::pow(d[5], 2) * d[14] * d[16] + d[4] * std::pow(d[6], 2) * d[14] * d[16] + 2 * d[3] * d[6] * d[7] * d[14] * d[16] + 3 * d[4] * std::pow(d[7], 2) * d[14] * d[16] + 2 * d[1] * d[2] * d[6] * d[15] * d[16] + 2 * d[4] * d[5] * d[6] * d[15] * d[16] + 2 * d[0] * d[2] * d[7] * d[15] * d[16] + 2 * d[3] * d[5] * d[7] * d[15] * d[16] - 2 * d[0] * d[1] * d[8] * d[15] * d[16] - 2 * d[3] * d[4] * d[8] * d[15] * d[16] + d[0] * d[2] * d[6] * std::pow(d[16], 2) + d[3] * d[5] * d[6] * std::pow(d[16], 2) + 3 * d[1] * d[2] * d[7] * std::pow(d[16], 2) + 3 * d[4] * d[5] * d[7] * std::pow(d[16], 2) - std::pow(d[1], 2) * d[8] * std::pow(d[16], 2) - std::pow(d[4], 2) * d[8] * std::pow(d[16], 2) + 2 * d[0] * std::pow(d[2], 2) * d[9] * d[17] + 2 * d[2] * d[3] * d[5] * d[9] * d[17] - 2 * d[0] * std::pow(d[6], 2) * d[9] * d[17] - 2 * d[1] * d[6] * d[7] * d[9] * d[17] + 2 * d[1] * std::pow(d[2], 2) * d[10] * d[17] + 2 * d[2] * d[4] * d[5] * d[10] * d[17] - 2 * d[0] * d[6] * d[7] * d[10] * d[17] - 2 * d[1] * std::pow(d[7], 2) * d[10] * d[17] + 2 * std::pow(d[0], 2) * d[2] * d[11] * d[17] + 2 * std::pow(d[1], 2) * d[2] * d[11] * d[17] + 2 * d[0] * d[3] * d[5] * d[11] * d[17] + 2 * d[1] * d[4] * d[5] * d[11] * d[17] + 2 * d[0] * d[2] * d[5] * d[12] * d[17] + 2 * d[3] * std::pow(d[5], 2) * d[12] * d[17] - 2 * d[3] * std::pow(d[6], 2) * d[12] * d[17] - 2 * d[4] * d[6] * d[7] * d[12] * d[17] + 2 * d[1] * d[2] * d[5] * d[13] * d[17] + 2 * d[4] * std::pow(d[5], 2) * d[13] * d[17] - 2 * d[3] * d[6] * d[7] * d[13] * d[17] - 2 * d[4] * std::pow(d[7], 2) * d[13] * d[17] + 2 * d[0] * d[2] * d[3] * d[14] * d[17] + 2 * d[1] * d[2] * d[4] * d[14] * d[17] + 2 * std::pow(d[3], 2) * d[5] * d[14] * d[17] + 2 * std::pow(d[4], 2) * d[5] * d[14] * d[17] - 2 * std::pow(d[0], 2) * d[6] * d[15] * d[17] - 2 * std::pow(d[3], 2) * d[6] * d[15] * d[17] - 2 * d[0] * d[1] * d[7] * d[15] * d[17] - 2 * d[3] * d[4] * d[7] * d[15] * d[17] - 2 * d[0] * d[1] * d[6] * d[16] * d[17] - 2 * d[3] * d[4] * d[6] * d[16] * d[17] - 2 * std::pow(d[1], 2) * d[7] * d[16] * d[17] - 2 * std::pow(d[4], 2) * d[7] * d[16] * d[17];
				coeffs[13] = 2 * d[2] * d[8] * std::pow(d[9], 2) * d[11] + 2 * d[2] * d[8] * std::pow(d[10], 2) * d[11] - 3 * d[2] * d[6] * d[9] * std::pow(d[11], 2) + 2 * d[0] * d[8] * d[9] * std::pow(d[11], 2) - 3 * d[2] * d[7] * d[10] * std::pow(d[11], 2) + 2 * d[1] * d[8] * d[10] * std::pow(d[11], 2) - d[0] * d[6] * std::pow(d[11], 3) - d[1] * d[7] * std::pow(d[11], 3) + 2 * d[5] * d[8] * d[9] * d[11] * d[12] - d[5] * d[6] * std::pow(d[11], 2) * d[12] + 2 * d[5] * d[8] * d[10] * d[11] * d[13] - d[5] * d[7] * std::pow(d[11], 2) * d[13] - 2 * d[5] * d[6] * d[9] * d[11] * d[14] + 2 * d[3] * d[8] * d[9] * d[11] * d[14] - 2 * d[5] * d[7] * d[10] * d[11] * d[14] + 2 * d[4] * d[8] * d[10] * d[11] * d[14] - d[3] * d[6] * std::pow(d[11], 2) * d[14] - d[4] * d[7] * std::pow(d[11], 2) * d[14] + 2 * d[2] * d[8] * d[9] * d[12] * d[14] - 2 * d[2] * d[6] * d[11] * d[12] * d[14] + 2 * d[0] * d[8] * d[11] * d[12] * d[14] + 2 * d[5] * d[8] * std::pow(d[12], 2) * d[14] + 2 * d[2] * d[8] * d[10] * d[13] * d[14] - 2 * d[2] * d[7] * d[11] * d[13] * d[14] + 2 * d[1] * d[8] * d[11] * d[13] * d[14] + 2 * d[5] * d[8] * std::pow(d[13], 2) * d[14] - d[2] * d[6] * d[9] * std::pow(d[14], 2) - d[2] * d[7] * d[10] * std::pow(d[14], 2) - d[0] * d[6] * d[11] * std::pow(d[14], 2) - d[1] * d[7] * d[11] * std::pow(d[14], 2) - 3 * d[5] * d[6] * d[12] * std::pow(d[14], 2) + 2 * d[3] * d[8] * d[12] * std::pow(d[14], 2) - 3 * d[5] * d[7] * d[13] * std::pow(d[14], 2) + 2 * d[4] * d[8] * d[13] * std::pow(d[14], 2) - d[3] * d[6] * std::pow(d[14], 3) - d[4] * d[7] * std::pow(d[14], 3) - 2 * d[6] * d[8] * std::pow(d[9], 2) * d[15] - 2 * d[7] * d[8] * d[9] * d[10] * d[15] - 3 * std::pow(d[2], 2) * d[9] * d[11] * d[15] - std::pow(d[5], 2) * d[9] * d[11] * d[15] + 3 * std::pow(d[6], 2) * d[9] * d[11] * d[15] + std::pow(d[7], 2) * d[9] * d[11] * d[15] + 2 * d[6] * d[7] * d[10] * d[11] * d[15] - 3 * d[0] * d[2] * std::pow(d[11], 2) * d[15] - d[3] * d[5] * std::pow(d[11], 2) * d[15] - 2 * d[2] * d[5] * d[11] * d[12] * d[15] - 2 * d[6] * d[8] * std::pow(d[12], 2) * d[15] - 2 * d[7] * d[8] * d[12] * d[13] * d[15] - 2 * d[2] * d[5] * d[9] * d[14] * d[15] - 2 * d[2] * d[3] * d[11] * d[14] * d[15] - 2 * d[0] * d[5] * d[11] * d[14] * d[15] - std::pow(d[2], 2) * d[12] * d[14] * d[15] - 3 * std::pow(d[5], 2) * d[12] * d[14] * d[15] + 3 * std::pow(d[6], 2) * d[12] * d[14] * d[15] + std::pow(d[7], 2) * d[12] * d[14] * d[15] + 2 * d[6] * d[7] * d[13] * d[14] * d[15] - d[0] * d[2] * std::pow(d[14], 2) * d[15] - 3 * d[3] * d[5] * std::pow(d[14], 2) * d[15] + 3 * d[2] * d[6] * d[9] * std::pow(d[15], 2) - 2 * d[0] * d[8] * d[9] * std::pow(d[15], 2) + d[2] * d[7] * d[10] * std::pow(d[15], 2) + 3 * d[0] * d[6] * d[11] * std::pow(d[15], 2) + d[1] * d[7] * d[11] * std::pow(d[15], 2) + 3 * d[5] * d[6] * d[12] * std::pow(d[15], 2) - 2 * d[3] * d[8] * d[12] * std::pow(d[15], 2) + d[5] * d[7] * d[13] * std::pow(d[15], 2) + 3 * d[3] * d[6] * d[14] * std::pow(d[15], 2) + d[4] * d[7] * d[14] * std::pow(d[15], 2) + d[0] * d[2] * std::pow(d[15], 3) + d[3] * d[5] * std::pow(d[15], 3) - 2 * d[6] * d[8] * d[9] * d[10] * d[16] - 2 * d[7] * d[8] * std::pow(d[10], 2) * d[16] + 2 * d[6] * d[7] * d[9] * d[11] * d[16] - 3 * std::pow(d[2], 2) * d[10] * d[11] * d[16] - std::pow(d[5], 2) * d[10] * d[11] * d[16] + std::pow(d[6], 2) * d[10] * d[11] * d[16] + 3 * std::pow(d[7], 2) * d[10] * d[11] * d[16] - 3 * d[1] * d[2] * std::pow(d[11], 2) * d[16] - d[4] * d[5] * std::pow(d[11], 2) * d[16] - 2 * d[2] * d[5] * d[11] * d[13] * d[16] - 2 * d[6] * d[8] * d[12] * d[13] * d[16] - 2 * d[7] * d[8] * std::pow(d[13], 2) * d[16] - 2 * d[2] * d[5] * d[10] * d[14] * d[16] - 2 * d[2] * d[4] * d[11] * d[14] * d[16] - 2 * d[1] * d[5] * d[11] * d[14] * d[16] + 2 * d[6] * d[7] * d[12] * d[14] * d[16] - std::pow(d[2], 2) * d[13] * d[14] * d[16] - 3 * std::pow(d[5], 2) * d[13] * d[14] * d[16] + std::pow(d[6], 2) * d[13] * d[14] * d[16] + 3 * std::pow(d[7], 2) * d[13] * d[14] * d[16] - d[1] * d[2] * std::pow(d[14], 2) * d[16] - 3 * d[4] * d[5] * std::pow(d[14], 2) * d[16] + 2 * d[2] * d[7] * d[9] * d[15] * d[16] - 2 * d[1] * d[8] * d[9] * d[15] * d[16] + 2 * d[2] * d[6] * d[10] * d[15] * d[16] - 2 * d[0] * d[8] * d[10] * d[15] * d[16] + 2 * d[1] * d[6] * d[11] * d[15] * d[16] + 2 * d[0] * d[7] * d[11] * d[15] * d[16] + 2 * d[5] * d[7] * d[12] * d[15] * d[16] - 2 * d[4] * d[8] * d[12] * d[15] * d[16] + 2 * d[5] * d[6] * d[13] * d[15] * d[16] - 2 * d[3] * d[8] * d[13] * d[15] * d[16] + 2 * d[4] * d[6] * d[14] * d[15] * d[16] + 2 * d[3] * d[7] * d[14] * d[15] * d[16] + d[1] * d[2] * std::pow(d[15], 2) * d[16] + d[4] * d[5] * std::pow(d[15], 2) * d[16] + d[2] * d[6] * d[9] * std::pow(d[16], 2) + 3 * d[2] * d[7] * d[10] * std::pow(d[16], 2) - 2 * d[1] * d[8] * d[10] * std::pow(d[16], 2) + d[0] * d[6] * d[11] * std::pow(d[16], 2) + 3 * d[1] * d[7] * d[11] * std::pow(d[16], 2) + d[5] * d[6] * d[12] * std::pow(d[16], 2) + 3 * d[5] * d[7] * d[13] * std::pow(d[16], 2) - 2 * d[4] * d[8] * d[13] * std::pow(d[16], 2) + d[3] * d[6] * d[14] * std::pow(d[16], 2) + 3 * d[4] * d[7] * d[14] * std::pow(d[16], 2) + d[0] * d[2] * d[15] * std::pow(d[16], 2) + d[3] * d[5] * d[15] * std::pow(d[16], 2) + d[1] * d[2] * std::pow(d[16], 3) + d[4] * d[5] * std::pow(d[16], 3) + std::pow(d[2], 2) * std::pow(d[9], 2) * d[17] - std::pow(d[6], 2) * std::pow(d[9], 2) * d[17] - 2 * d[6] * d[7] * d[9] * d[10] * d[17] + std::pow(d[2], 2) * std::pow(d[10], 2) * d[17] - std::pow(d[7], 2) * std::pow(d[10], 2) * d[17] + 4 * d[0] * d[2] * d[9] * d[11] * d[17] + 2 * d[3] * d[5] * d[9] * d[11] * d[17] + 4 * d[1] * d[2] * d[10] * d[11] * d[17] + 2 * d[4] * d[5] * d[10] * d[11] * d[17] + std::pow(d[0], 2) * std::pow(d[11], 2) * d[17] + std::pow(d[1], 2) * std::pow(d[11], 2) * d[17] + 2 * d[2] * d[5] * d[9] * d[12] * d[17] + 2 * d[0] * d[5] * d[11] * d[12] * d[17] + std::pow(d[5], 2) * std::pow(d[12], 2) * d[17] - std::pow(d[6], 2) * std::pow(d[12], 2) * d[17] + 2 * d[2] * d[5] * d[10] * d[13] * d[17] + 2 * d[1] * d[5] * d[11] * d[13] * d[17] - 2 * d[6] * d[7] * d[12] * d[13] * d[17] + std::pow(d[5], 2) * std::pow(d[13], 2) * d[17] - std::pow(d[7], 2) * std::pow(d[13], 2) * d[17] + 2 * d[2] * d[3] * d[9] * d[14] * d[17] + 2 * d[2] * d[4] * d[10] * d[14] * d[17] + 2 * d[0] * d[3] * d[11] * d[14] * d[17] + 2 * d[1] * d[4] * d[11] * d[14] * d[17] + 2 * d[0] * d[2] * d[12] * d[14] * d[17] + 4 * d[3] * d[5] * d[12] * d[14] * d[17] + 2 * d[1] * d[2] * d[13] * d[14] * d[17] + 4 * d[4] * d[5] * d[13] * d[14] * d[17] + std::pow(d[3], 2) * std::pow(d[14], 2) * d[17] + std::pow(d[4], 2) * std::pow(d[14], 2) * d[17] - 4 * d[0] * d[6] * d[9] * d[15] * d[17] - 2 * d[1] * d[7] * d[9] * d[15] * d[17] - 2 * d[0] * d[7] * d[10] * d[15] * d[17] - 4 * d[3] * d[6] * d[12] * d[15] * d[17] - 2 * d[4] * d[7] * d[12] * d[15] * d[17] - 2 * d[3] * d[7] * d[13] * d[15] * d[17] - std::pow(d[0], 2) * std::pow(d[15], 2) * d[17] - std::pow(d[3], 2) * std::pow(d[15], 2) * d[17] - 2 * d[1] * d[6] * d[9] * d[16] * d[17] - 2 * d[0] * d[6] * d[10] * d[16] * d[17] - 4 * d[1] * d[7] * d[10] * d[16] * d[17] - 2 * d[4] * d[6] * d[12] * d[16] * d[17] - 2 * d[3] * d[6] * d[13] * d[16] * d[17] - 4 * d[4] * d[7] * d[13] * d[16] * d[17] - 2 * d[0] * d[1] * d[15] * d[16] * d[17] - 2 * d[3] * d[4] * d[15] * d[16] * d[17] - std::pow(d[1], 2) * std::pow(d[16], 2) * d[17] - std::pow(d[4], 2) * std::pow(d[16], 2) * d[17];
				coeffs[14] = d[8] * std::pow(d[9], 2) * std::pow(d[11], 2) + d[8] * std::pow(d[10], 2) * std::pow(d[11], 2) - d[6] * d[9] * std::pow(d[11], 3) - d[7] * d[10] * std::pow(d[11], 3) + 2 * d[8] * d[9] * d[11] * d[12] * d[14] - d[6] * std::pow(d[11], 2) * d[12] * d[14] + 2 * d[8] * d[10] * d[11] * d[13] * d[14] - d[7] * std::pow(d[11], 2) * d[13] * d[14] - d[6] * d[9] * d[11] * std::pow(d[14], 2) - d[7] * d[10] * d[11] * std::pow(d[14], 2) + d[8] * std::pow(d[12], 2) * std::pow(d[14], 2) + d[8] * std::pow(d[13], 2) * std::pow(d[14], 2) - d[6] * d[12] * std::pow(d[14], 3) - d[7] * d[13] * std::pow(d[14], 3) - 3 * d[2] * d[9] * std::pow(d[11], 2) * d[15] - d[0] * std::pow(d[11], 3) * d[15] - d[5] * std::pow(d[11], 2) * d[12] * d[15] - 2 * d[5] * d[9] * d[11] * d[14] * d[15] - d[3] * std::pow(d[11], 2) * d[14] * d[15] - 2 * d[2] * d[11] * d[12] * d[14] * d[15] - d[2] * d[9] * std::pow(d[14], 2) * d[15] - d[0] * d[11] * std::pow(d[14], 2) * d[15] - 3 * d[5] * d[12] * std::pow(d[14], 2) * d[15] - d[3] * std::pow(d[14], 3) * d[15] - d[8] * std::pow(d[9], 2) * std::pow(d[15], 2) + 3 * d[6] * d[9] * d[11] * std::pow(d[15], 2) + d[7] * d[10] * d[11] * std::pow(d[15], 2) - d[8] * std::pow(d[12], 2) * std::pow(d[15], 2) + 3 * d[6] * d[12] * d[14] * std::pow(d[15], 2) + d[7] * d[13] * d[14] * std::pow(d[15], 2) + d[2] * d[9] * std::pow(d[15], 3) + d[0] * d[11] * std::pow(d[15], 3) + d[5] * d[12] * std::pow(d[15], 3) + d[3] * d[14] * std::pow(d[15], 3) - 3 * d[2] * d[10] * std::pow(d[11], 2) * d[16] - d[1] * std::pow(d[11], 3) * d[16] - d[5] * std::pow(d[11], 2) * d[13] * d[16] - 2 * d[5] * d[10] * d[11] * d[14] * d[16] - d[4] * std::pow(d[11], 2) * d[14] * d[16] - 2 * d[2] * d[11] * d[13] * d[14] * d[16] - d[2] * d[10] * std::pow(d[14], 2) * d[16] - d[1] * d[11] * std::pow(d[14], 2) * d[16] - 3 * d[5] * d[13] * std::pow(d[14], 2) * d[16] - d[4] * std::pow(d[14], 3) * d[16] - 2 * d[8] * d[9] * d[10] * d[15] * d[16] + 2 * d[7] * d[9] * d[11] * d[15] * d[16] + 2 * d[6] * d[10] * d[11] * d[15] * d[16] - 2 * d[8] * d[12] * d[13] * d[15] * d[16] + 2 * d[7] * d[12] * d[14] * d[15] * d[16] + 2 * d[6] * d[13] * d[14] * d[15] * d[16] + d[2] * d[10] * std::pow(d[15], 2) * d[16] + d[1] * d[11] * std::pow(d[15], 2) * d[16] + d[5] * d[13] * std::pow(d[15], 2) * d[16] + d[4] * d[14] * std::pow(d[15], 2) * d[16] - d[8] * std::pow(d[10], 2) * std::pow(d[16], 2) + d[6] * d[9] * d[11] * std::pow(d[16], 2) + 3 * d[7] * d[10] * d[11] * std::pow(d[16], 2) - d[8] * std::pow(d[13], 2) * std::pow(d[16], 2) + d[6] * d[12] * d[14] * std::pow(d[16], 2) + 3 * d[7] * d[13] * d[14] * std::pow(d[16], 2) + d[2] * d[9] * d[15] * std::pow(d[16], 2) + d[0] * d[11] * d[15] * std::pow(d[16], 2) + d[5] * d[12] * d[15] * std::pow(d[16], 2) + d[3] * d[14] * d[15] * std::pow(d[16], 2) + d[2] * d[10] * std::pow(d[16], 3) + d[1] * d[11] * std::pow(d[16], 3) + d[5] * d[13] * std::pow(d[16], 3) + d[4] * d[14] * std::pow(d[16], 3) + 2 * d[2] * std::pow(d[9], 2) * d[11] * d[17] + 2 * d[2] * std::pow(d[10], 2) * d[11] * d[17] + 2 * d[0] * d[9] * std::pow(d[11], 2) * d[17] + 2 * d[1] * d[10] * std::pow(d[11], 2) * d[17] + 2 * d[5] * d[9] * d[11] * d[12] * d[17] + 2 * d[5] * d[10] * d[11] * d[13] * d[17] + 2 * d[3] * d[9] * d[11] * d[14] * d[17] + 2 * d[4] * d[10] * d[11] * d[14] * d[17] + 2 * d[2] * d[9] * d[12] * d[14] * d[17] + 2 * d[0] * d[11] * d[12] * d[14] * d[17] + 2 * d[5] * std::pow(d[12], 2) * d[14] * d[17] + 2 * d[2] * d[10] * d[13] * d[14] * d[17] + 2 * d[1] * d[11] * d[13] * d[14] * d[17] + 2 * d[5] * std::pow(d[13], 2) * d[14] * d[17] + 2 * d[3] * d[12] * std::pow(d[14], 2) * d[17] + 2 * d[4] * d[13] * std::pow(d[14], 2) * d[17] - 2 * d[6] * std::pow(d[9], 2) * d[15] * d[17] - 2 * d[7] * d[9] * d[10] * d[15] * d[17] - 2 * d[6] * std::pow(d[12], 2) * d[15] * d[17] - 2 * d[7] * d[12] * d[13] * d[15] * d[17] - 2 * d[0] * d[9] * std::pow(d[15], 2) * d[17] - 2 * d[3] * d[12] * std::pow(d[15], 2) * d[17] - 2 * d[6] * d[9] * d[10] * d[16] * d[17] - 2 * d[7] * std::pow(d[10], 2) * d[16] * d[17] - 2 * d[6] * d[12] * d[13] * d[16] * d[17] - 2 * d[7] * std::pow(d[13], 2) * d[16] * d[17] - 2 * d[1] * d[9] * d[15] * d[16] * d[17] - 2 * d[0] * d[10] * d[15] * d[16] * d[17] - 2 * d[4] * d[12] * d[15] * d[16] * d[17] - 2 * d[3] * d[13] * d[15] * d[16] * d[17] - 2 * d[1] * d[10] * std::pow(d[16], 2) * d[17] - 2 * d[4] * d[13] * std::pow(d[16], 2) * d[17];
				coeffs[15] = -d[9] * std::pow(d[11], 3) * d[15] - std::pow(d[11], 2) * d[12] * d[14] * d[15] - d[9] * d[11] * std::pow(d[14], 2) * d[15] - d[12] * std::pow(d[14], 3) * d[15] + d[9] * d[11] * std::pow(d[15], 3) + d[12] * d[14] * std::pow(d[15], 3) - d[10] * std::pow(d[11], 3) * d[16] - std::pow(d[11], 2) * d[13] * d[14] * d[16] - d[10] * d[11] * std::pow(d[14], 2) * d[16] - d[13] * std::pow(d[14], 3) * d[16] + d[10] * d[11] * std::pow(d[15], 2) * d[16] + d[13] * d[14] * std::pow(d[15], 2) * d[16] + d[9] * d[11] * d[15] * std::pow(d[16], 2) + d[12] * d[14] * d[15] * std::pow(d[16], 2) + d[10] * d[11] * std::pow(d[16], 3) + d[13] * d[14] * std::pow(d[16], 3) + std::pow(d[9], 2) * std::pow(d[11], 2) * d[17] + std::pow(d[10], 2) * std::pow(d[11], 2) * d[17] + 2 * d[9] * d[11] * d[12] * d[14] * d[17] + 2 * d[10] * d[11] * d[13] * d[14] * d[17] + std::pow(d[12], 2) * std::pow(d[14], 2) * d[17] + std::pow(d[13], 2) * std::pow(d[14], 2) * d[17] - std::pow(d[9], 2) * std::pow(d[15], 2) * d[17] - std::pow(d[12], 2) * std::pow(d[15], 2) * d[17] - 2 * d[9] * d[10] * d[15] * d[16] * d[17] - 2 * d[12] * d[13] * d[15] * d[16] * d[17] - std::pow(d[10], 2) * std::pow(d[16], 2) * d[17] - std::pow(d[13], 2) * std::pow(d[16], 2) * d[17];
				coeffs[16] = -std::pow(d[2], 3) * d[6] * d[18] - d[2] * std::pow(d[5], 2) * d[6] * d[18] + d[2] * std::pow(d[6], 3) * d[18] + d[2] * d[6] * std::pow(d[7], 2) * d[18] + 2 * d[0] * std::pow(d[2], 2) * d[8] * d[18] + 2 * d[2] * d[3] * d[5] * d[8] * d[18] - 2 * d[0] * std::pow(d[6], 2) * d[8] * d[18] - 2 * d[1] * d[6] * d[7] * d[8] * d[18] - std::pow(d[2], 3) * d[7] * d[19] - d[2] * std::pow(d[5], 2) * d[7] * d[19] + d[2] * std::pow(d[6], 2) * d[7] * d[19] + d[2] * std::pow(d[7], 3) * d[19] + 2 * d[1] * std::pow(d[2], 2) * d[8] * d[19] + 2 * d[2] * d[4] * d[5] * d[8] * d[19] - 2 * d[0] * d[6] * d[7] * d[8] * d[19] - 2 * d[1] * std::pow(d[7], 2) * d[8] * d[19] - 3 * d[0] * std::pow(d[2], 2) * d[6] * d[20] - 2 * d[2] * d[3] * d[5] * d[6] * d[20] - d[0] * std::pow(d[5], 2) * d[6] * d[20] + d[0] * std::pow(d[6], 3) * d[20] - 3 * d[1] * std::pow(d[2], 2) * d[7] * d[20] - 2 * d[2] * d[4] * d[5] * d[7] * d[20] - d[1] * std::pow(d[5], 2) * d[7] * d[20] + d[1] * std::pow(d[6], 2) * d[7] * d[20] + d[0] * d[6] * std::pow(d[7], 2) * d[20] + d[1] * std::pow(d[7], 3) * d[20] + 2 * std::pow(d[0], 2) * d[2] * d[8] * d[20] + 2 * std::pow(d[1], 2) * d[2] * d[8] * d[20] + 2 * d[0] * d[3] * d[5] * d[8] * d[20] + 2 * d[1] * d[4] * d[5] * d[8] * d[20] - std::pow(d[2], 2) * d[5] * d[6] * d[21] - std::pow(d[5], 3) * d[6] * d[21] + d[5] * std::pow(d[6], 3) * d[21] + d[5] * d[6] * std::pow(d[7], 2) * d[21] + 2 * d[0] * d[2] * d[5] * d[8] * d[21] + 2 * d[3] * std::pow(d[5], 2) * d[8] * d[21] - 2 * d[3] * std::pow(d[6], 2) * d[8] * d[21] - 2 * d[4] * d[6] * d[7] * d[8] * d[21] - std::pow(d[2], 2) * d[5] * d[7] * d[22] - std::pow(d[5], 3) * d[7] * d[22] + d[5] * std::pow(d[6], 2) * d[7] * d[22] + d[5] * std::pow(d[7], 3) * d[22] + 2 * d[1] * d[2] * d[5] * d[8] * d[22] + 2 * d[4] * std::pow(d[5], 2) * d[8] * d[22] - 2 * d[3] * d[6] * d[7] * d[8] * d[22] - 2 * d[4] * std::pow(d[7], 2) * d[8] * d[22] - std::pow(d[2], 2) * d[3] * d[6] * d[23] - 2 * d[0] * d[2] * d[5] * d[6] * d[23] - 3 * d[3] * std::pow(d[5], 2) * d[6] * d[23] + d[3] * std::pow(d[6], 3) * d[23] - std::pow(d[2], 2) * d[4] * d[7] * d[23] - 2 * d[1] * d[2] * d[5] * d[7] * d[23] - 3 * d[4] * std::pow(d[5], 2) * d[7] * d[23] + d[4] * std::pow(d[6], 2) * d[7] * d[23] + d[3] * d[6] * std::pow(d[7], 2) * d[23] + d[4] * std::pow(d[7], 3) * d[23] + 2 * d[0] * d[2] * d[3] * d[8] * d[23] + 2 * d[1] * d[2] * d[4] * d[8] * d[23] + 2 * std::pow(d[3], 2) * d[5] * d[8] * d[23] + 2 * std::pow(d[4], 2) * d[5] * d[8] * d[23] - d[0] * std::pow(d[2], 3) * d[24] - std::pow(d[2], 2) * d[3] * d[5] * d[24] - d[0] * d[2] * std::pow(d[5], 2) * d[24] - d[3] * std::pow(d[5], 3) * d[24] + 3 * d[0] * d[2] * std::pow(d[6], 2) * d[24] + 3 * d[3] * d[5] * std::pow(d[6], 2) * d[24] + 2 * d[1] * d[2] * d[6] * d[7] * d[24] + 2 * d[4] * d[5] * d[6] * d[7] * d[24] + d[0] * d[2] * std::pow(d[7], 2) * d[24] + d[3] * d[5] * std::pow(d[7], 2) * d[24] - 2 * std::pow(d[0], 2) * d[6] * d[8] * d[24] - 2 * std::pow(d[3], 2) * d[6] * d[8] * d[24] - 2 * d[0] * d[1] * d[7] * d[8] * d[24] - 2 * d[3] * d[4] * d[7] * d[8] * d[24] - d[1] * std::pow(d[2], 3) * d[25] - std::pow(d[2], 2) * d[4] * d[5] * d[25] - d[1] * d[2] * std::pow(d[5], 2) * d[25] - d[4] * std::pow(d[5], 3) * d[25] + d[1] * d[2] * std::pow(d[6], 2) * d[25] + d[4] * d[5] * std::pow(d[6], 2) * d[25] + 2 * d[0] * d[2] * d[6] * d[7] * d[25] + 2 * d[3] * d[5] * d[6] * d[7] * d[25] + 3 * d[1] * d[2] * std::pow(d[7], 2) * d[25] + 3 * d[4] * d[5] * std::pow(d[7], 2) * d[25] - 2 * d[0] * d[1] * d[6] * d[8] * d[25] - 2 * d[3] * d[4] * d[6] * d[8] * d[25] - 2 * std::pow(d[1], 2) * d[7] * d[8] * d[25] - 2 * std::pow(d[4], 2) * d[7] * d[8] * d[25] + std::pow(d[0], 2) * std::pow(d[2], 2) * d[26] + std::pow(d[1], 2) * std::pow(d[2], 2) * d[26] + 2 * d[0] * d[2] * d[3] * d[5] * d[26] + 2 * d[1] * d[2] * d[4] * d[5] * d[26] + std::pow(d[3], 2) * std::pow(d[5], 2) * d[26] + std::pow(d[4], 2) * std::pow(d[5], 2) * d[26] - std::pow(d[0], 2) * std::pow(d[6], 2) * d[26] - std::pow(d[3], 2) * std::pow(d[6], 2) * d[26] - 2 * d[0] * d[1] * d[6] * d[7] * d[26] - 2 * d[3] * d[4] * d[6] * d[7] * d[26] - std::pow(d[1], 2) * std::pow(d[7], 2) * d[26] - std::pow(d[4], 2) * std::pow(d[7], 2) * d[26];
				coeffs[17] = 2 * std::pow(d[2], 2) * d[8] * d[9] * d[18] - 2 * std::pow(d[6], 2) * d[8] * d[9] * d[18] - 2 * d[6] * d[7] * d[8] * d[10] * d[18] - 3 * std::pow(d[2], 2) * d[6] * d[11] * d[18] - std::pow(d[5], 2) * d[6] * d[11] * d[18] + std::pow(d[6], 3) * d[11] * d[18] + d[6] * std::pow(d[7], 2) * d[11] * d[18] + 4 * d[0] * d[2] * d[8] * d[11] * d[18] + 2 * d[3] * d[5] * d[8] * d[11] * d[18] + 2 * d[2] * d[5] * d[8] * d[12] * d[18] - 2 * d[2] * d[5] * d[6] * d[14] * d[18] + 2 * d[2] * d[3] * d[8] * d[14] * d[18] - std::pow(d[2], 3) * d[15] * d[18] - d[2] * std::pow(d[5], 2) * d[15] * d[18] + 3 * d[2] * std::pow(d[6], 2) * d[15] * d[18] + d[2] * std::pow(d[7], 2) * d[15] * d[18] - 4 * d[0] * d[6] * d[8] * d[15] * d[18] - 2 * d[1] * d[7] * d[8] * d[15] * d[18] + 2 * d[2] * d[6] * d[7] * d[16] * d[18] - 2 * d[1] * d[6] * d[8] * d[16] * d[18] + 2 * d[0] * std::pow(d[2], 2) * d[17] * d[18] + 2 * d[2] * d[3] * d[5] * d[17] * d[18] - 2 * d[0] * std::pow(d[6], 2) * d[17] * d[18] - 2 * d[1] * d[6] * d[7] * d[17] * d[18] - 2 * d[6] * d[7] * d[8] * d[9] * d[19] + 2 * std::pow(d[2], 2) * d[8] * d[10] * d[19] - 2 * std::pow(d[7], 2) * d[8] * d[10] * d[19] - 3 * std::pow(d[2], 2) * d[7] * d[11] * d[19] - std::pow(d[5], 2) * d[7] * d[11] * d[19] + std::pow(d[6], 2) * d[7] * d[11] * d[19] + std::pow(d[7], 3) * d[11] * d[19] + 4 * d[1] * d[2] * d[8] * d[11] * d[19] + 2 * d[4] * d[5] * d[8] * d[11] * d[19] + 2 * d[2] * d[5] * d[8] * d[13] * d[19] - 2 * d[2] * d[5] * d[7] * d[14] * d[19] + 2 * d[2] * d[4] * d[8] * d[14] * d[19] + 2 * d[2] * d[6] * d[7] * d[15] * d[19] - 2 * d[0] * d[7] * d[8] * d[15] * d[19] - std::pow(d[2], 3) * d[16] * d[19] - d[2] * std::pow(d[5], 2) * d[16] * d[19] + d[2] * std::pow(d[6], 2) * d[16] * d[19] + 3 * d[2] * std::pow(d[7], 2) * d[16] * d[19] - 2 * d[0] * d[6] * d[8] * d[16] * d[19] - 4 * d[1] * d[7] * d[8] * d[16] * d[19] + 2 * d[1] * std::pow(d[2], 2) * d[17] * d[19] + 2 * d[2] * d[4] * d[5] * d[17] * d[19] - 2 * d[0] * d[6] * d[7] * d[17] * d[19] - 2 * d[1] * std::pow(d[7], 2) * d[17] * d[19] - 3 * std::pow(d[2], 2) * d[6] * d[9] * d[20] - std::pow(d[5], 2) * d[6] * d[9] * d[20] + std::pow(d[6], 3) * d[9] * d[20] + d[6] * std::pow(d[7], 2) * d[9] * d[20] + 4 * d[0] * d[2] * d[8] * d[9] * d[20] + 2 * d[3] * d[5] * d[8] * d[9] * d[20] - 3 * std::pow(d[2], 2) * d[7] * d[10] * d[20] - std::pow(d[5], 2) * d[7] * d[10] * d[20] + std::pow(d[6], 2) * d[7] * d[10] * d[20] + std::pow(d[7], 3) * d[10] * d[20] + 4 * d[1] * d[2] * d[8] * d[10] * d[20] + 2 * d[4] * d[5] * d[8] * d[10] * d[20] - 6 * d[0] * d[2] * d[6] * d[11] * d[20] - 2 * d[3] * d[5] * d[6] * d[11] * d[20] - 6 * d[1] * d[2] * d[7] * d[11] * d[20] - 2 * d[4] * d[5] * d[7] * d[11] * d[20] + 2 * std::pow(d[0], 2) * d[8] * d[11] * d[20] + 2 * std::pow(d[1], 2) * d[8] * d[11] * d[20] - 2 * d[2] * d[5] * d[6] * d[12] * d[20] + 2 * d[0] * d[5] * d[8] * d[12] * d[20] - 2 * d[2] * d[5] * d[7] * d[13] * d[20] + 2 * d[1] * d[5] * d[8] * d[13] * d[20] - 2 * d[2] * d[3] * d[6] * d[14] * d[20] - 2 * d[0] * d[5] * d[6] * d[14] * d[20] - 2 * d[2] * d[4] * d[7] * d[14] * d[20] - 2 * d[1] * d[5] * d[7] * d[14] * d[20] + 2 * d[0] * d[3] * d[8] * d[14] * d[20] + 2 * d[1] * d[4] * d[8] * d[14] * d[20] - 3 * d[0] * std::pow(d[2], 2) * d[15] * d[20] - 2 * d[2] * d[3] * d[5] * d[15] * d[20] - d[0] * std::pow(d[5], 2) * d[15] * d[20] + 3 * d[0] * std::pow(d[6], 2) * d[15] * d[20] + 2 * d[1] * d[6] * d[7] * d[15] * d[20] + d[0] * std::pow(d[7], 2) * d[15] * d[20] - 3 * d[1] * std::pow(d[2], 2) * d[16] * d[20] - 2 * d[2] * d[4] * d[5] * d[16] * d[20] - d[1] * std::pow(d[5], 2) * d[16] * d[20] + d[1] * std::pow(d[6], 2) * d[16] * d[20] + 2 * d[0] * d[6] * d[7] * d[16] * d[20] + 3 * d[1] * std::pow(d[7], 2) * d[16] * d[20] + 2 * std::pow(d[0], 2) * d[2] * d[17] * d[20] + 2 * std::pow(d[1], 2) * d[2] * d[17] * d[20] + 2 * d[0] * d[3] * d[5] * d[17] * d[20] + 2 * d[1] * d[4] * d[5] * d[17] * d[20] + 2 * d[2] * d[5] * d[8] * d[9] * d[21] - 2 * d[2] * d[5] * d[6] * d[11] * d[21] + 2 * d[0] * d[5] * d[8] * d[11] * d[21] + 2 * std::pow(d[5], 2) * d[8] * d[12] * d[21] - 2 * std::pow(d[6], 2) * d[8] * d[12] * d[21] - 2 * d[6] * d[7] * d[8] * d[13] * d[21] - std::pow(d[2], 2) * d[6] * d[14] * d[21] - 3 * std::pow(d[5], 2) * d[6] * d[14] * d[21] + std::pow(d[6], 3) * d[14] * d[21] + d[6] * std::pow(d[7], 2) * d[14] * d[21] + 2 * d[0] * d[2] * d[8] * d[14] * d[21] + 4 * d[3] * d[5] * d[8] * d[14] * d[21] - std::pow(d[2], 2) * d[5] * d[15] * d[21] - std::pow(d[5], 3) * d[15] * d[21] + 3 * d[5] * std::pow(d[6], 2) * d[15] * d[21] + d[5] * std::pow(d[7], 2) * d[15] * d[21] - 4 * d[3] * d[6] * d[8] * d[15] * d[21] - 2 * d[4] * d[7] * d[8] * d[15] * d[21] + 2 * d[5] * d[6] * d[7] * d[16] * d[21] - 2 * d[4] * d[6] * d[8] * d[16] * d[21] + 2 * d[0] * d[2] * d[5] * d[17] * d[21] + 2 * d[3] * std::pow(d[5], 2) * d[17] * d[21] - 2 * d[3] * std::pow(d[6], 2) * d[17] * d[21] - 2 * d[4] * d[6] * d[7] * d[17] * d[21] + 2 * d[2] * d[5] * d[8] * d[10] * d[22] - 2 * d[2] * d[5] * d[7] * d[11] * d[22] + 2 * d[1] * d[5] * d[8] * d[11] * d[22] - 2 * d[6] * d[7] * d[8] * d[12] * d[22] + 2 * std::pow(d[5], 2) * d[8] * d[13] * d[22] - 2 * std::pow(d[7], 2) * d[8] * d[13] * d[22] - std::pow(d[2], 2) * d[7] * d[14] * d[22] - 3 * std::pow(d[5], 2) * d[7] * d[14] * d[22] + std::pow(d[6], 2) * d[7] * d[14] * d[22] + std::pow(d[7], 3) * d[14] * d[22] + 2 * d[1] * d[2] * d[8] * d[14] * d[22] + 4 * d[4] * d[5] * d[8] * d[14] * d[22] + 2 * d[5] * d[6] * d[7] * d[15] * d[22] - 2 * d[3] * d[7] * d[8] * d[15] * d[22] - std::pow(d[2], 2) * d[5] * d[16] * d[22] - std::pow(d[5], 3) * d[16] * d[22] + d[5] * std::pow(d[6], 2) * d[16] * d[22] + 3 * d[5] * std::pow(d[7], 2) * d[16] * d[22] - 2 * d[3] * d[6] * d[8] * d[16] * d[22] - 4 * d[4] * d[7] * d[8] * d[16] * d[22] + 2 * d[1] * d[2] * d[5] * d[17] * d[22] + 2 * d[4] * std::pow(d[5], 2) * d[17] * d[22] - 2 * d[3] * d[6] * d[7] * d[17] * d[22] - 2 * d[4] * std::pow(d[7], 2) * d[17] * d[22] - 2 * d[2] * d[5] * d[6] * d[9] * d[23] + 2 * d[2] * d[3] * d[8] * d[9] * d[23] - 2 * d[2] * d[5] * d[7] * d[10] * d[23] + 2 * d[2] * d[4] * d[8] * d[10] * d[23] - 2 * d[2] * d[3] * d[6] * d[11] * d[23] - 2 * d[0] * d[5] * d[6] * d[11] * d[23] - 2 * d[2] * d[4] * d[7] * d[11] * d[23] - 2 * d[1] * d[5] * d[7] * d[11] * d[23] + 2 * d[0] * d[3] * d[8] * d[11] * d[23] + 2 * d[1] * d[4] * d[8] * d[11] * d[23] - std::pow(d[2], 2) * d[6] * d[12] * d[23] - 3 * std::pow(d[5], 2) * d[6] * d[12] * d[23] + std::pow(d[6], 3) * d[12] * d[23] + d[6] * std::pow(d[7], 2) * d[12] * d[23] + 2 * d[0] * d[2] * d[8] * d[12] * d[23] + 4 * d[3] * d[5] * d[8] * d[12] * d[23] - std::pow(d[2], 2) * d[7] * d[13] * d[23] - 3 * std::pow(d[5], 2) * d[7] * d[13] * d[23] + std::pow(d[6], 2) * d[7] * d[13] * d[23] + std::pow(d[7], 3) * d[13] * d[23] + 2 * d[1] * d[2] * d[8] * d[13] * d[23] + 4 * d[4] * d[5] * d[8] * d[13] * d[23] - 2 * d[0] * d[2] * d[6] * d[14] * d[23] - 6 * d[3] * d[5] * d[6] * d[14] * d[23] - 2 * d[1] * d[2] * d[7] * d[14] * d[23] - 6 * d[4] * d[5] * d[7] * d[14] * d[23] + 2 * std::pow(d[3], 2) * d[8] * d[14] * d[23] + 2 * std::pow(d[4], 2) * d[8] * d[14] * d[23] - std::pow(d[2], 2) * d[3] * d[15] * d[23] - 2 * d[0] * d[2] * d[5] * d[15] * d[23] - 3 * d[3] * std::pow(d[5], 2) * d[15] * d[23] + 3 * d[3] * std::pow(d[6], 2) * d[15] * d[23] + 2 * d[4] * d[6] * d[7] * d[15] * d[23] + d[3] * std::pow(d[7], 2) * d[15] * d[23] - std::pow(d[2], 2) * d[4] * d[16] * d[23] - 2 * d[1] * d[2] * d[5] * d[16] * d[23] - 3 * d[4] * std::pow(d[5], 2) * d[16] * d[23] + d[4] * std::pow(d[6], 2) * d[16] * d[23] + 2 * d[3] * d[6] * d[7] * d[16] * d[23] + 3 * d[4] * std::pow(d[7], 2) * d[16] * d[23] + 2 * d[0] * d[2] * d[3] * d[17] * d[23] + 2 * d[1] * d[2] * d[4] * d[17] * d[23] + 2 * std::pow(d[3], 2) * d[5] * d[17] * d[23] + 2 * std::pow(d[4], 2) * d[5] * d[17] * d[23] - std::pow(d[2], 3) * d[9] * d[24] - d[2] * std::pow(d[5], 2) * d[9] * d[24] + 3 * d[2] * std::pow(d[6], 2) * d[9] * d[24] + d[2] * std::pow(d[7], 2) * d[9] * d[24] - 4 * d[0] * d[6] * d[8] * d[9] * d[24] - 2 * d[1] * d[7] * d[8] * d[9] * d[24] + 2 * d[2] * d[6] * d[7] * d[10] * d[24] - 2 * d[0] * d[7] * d[8] * d[10] * d[24] - 3 * d[0] * std::pow(d[2], 2) * d[11] * d[24] - 2 * d[2] * d[3] * d[5] * d[11] * d[24] - d[0] * std::pow(d[5], 2) * d[11] * d[24] + 3 * d[0] * std::pow(d[6], 2) * d[11] * d[24] + 2 * d[1] * d[6] * d[7] * d[11] * d[24] + d[0] * std::pow(d[7], 2) * d[11] * d[24] - std::pow(d[2], 2) * d[5] * d[12] * d[24] - std::pow(d[5], 3) * d[12] * d[24] + 3 * d[5] * std::pow(d[6], 2) * d[12] * d[24] + d[5] * std::pow(d[7], 2) * d[12] * d[24] - 4 * d[3] * d[6] * d[8] * d[12] * d[24] - 2 * d[4] * d[7] * d[8] * d[12] * d[24] + 2 * d[5] * d[6] * d[7] * d[13] * d[24] - 2 * d[3] * d[7] * d[8] * d[13] * d[24] - std::pow(d[2], 2) * d[3] * d[14] * d[24] - 2 * d[0] * d[2] * d[5] * d[14] * d[24] - 3 * d[3] * std::pow(d[5], 2) * d[14] * d[24] + 3 * d[3] * std::pow(d[6], 2) * d[14] * d[24] + 2 * d[4] * d[6] * d[7] * d[14] * d[24] + d[3] * std::pow(d[7], 2) * d[14] * d[24] + 6 * d[0] * d[2] * d[6] * d[15] * d[24] + 6 * d[3] * d[5] * d[6] * d[15] * d[24] + 2 * d[1] * d[2] * d[7] * d[15] * d[24] + 2 * d[4] * d[5] * d[7] * d[15] * d[24] - 2 * std::pow(d[0], 2) * d[8] * d[15] * d[24] - 2 * std::pow(d[3], 2) * d[8] * d[15] * d[24] + 2 * d[1] * d[2] * d[6] * d[16] * d[24] + 2 * d[4] * d[5] * d[6] * d[16] * d[24] + 2 * d[0] * d[2] * d[7] * d[16] * d[24] + 2 * d[3] * d[5] * d[7] * d[16] * d[24] - 2 * d[0] * d[1] * d[8] * d[16] * d[24] - 2 * d[3] * d[4] * d[8] * d[16] * d[24] - 2 * std::pow(d[0], 2) * d[6] * d[17] * d[24] - 2 * std::pow(d[3], 2) * d[6] * d[17] * d[24] - 2 * d[0] * d[1] * d[7] * d[17] * d[24] - 2 * d[3] * d[4] * d[7] * d[17] * d[24] + 2 * d[2] * d[6] * d[7] * d[9] * d[25] - 2 * d[1] * d[6] * d[8] * d[9] * d[25] - std::pow(d[2], 3) * d[10] * d[25] - d[2] * std::pow(d[5], 2) * d[10] * d[25] + d[2] * std::pow(d[6], 2) * d[10] * d[25] + 3 * d[2] * std::pow(d[7], 2) * d[10] * d[25] - 2 * d[0] * d[6] * d[8] * d[10] * d[25] - 4 * d[1] * d[7] * d[8] * d[10] * d[25] - 3 * d[1] * std::pow(d[2], 2) * d[11] * d[25] - 2 * d[2] * d[4] * d[5] * d[11] * d[25] - d[1] * std::pow(d[5], 2) * d[11] * d[25] + d[1] * std::pow(d[6], 2) * d[11] * d[25] + 2 * d[0] * d[6] * d[7] * d[11] * d[25] + 3 * d[1] * std::pow(d[7], 2) * d[11] * d[25] + 2 * d[5] * d[6] * d[7] * d[12] * d[25] - 2 * d[4] * d[6] * d[8] * d[12] * d[25] - std::pow(d[2], 2) * d[5] * d[13] * d[25] - std::pow(d[5], 3) * d[13] * d[25] + d[5] * std::pow(d[6], 2) * d[13] * d[25] + 3 * d[5] * std::pow(d[7], 2) * d[13] * d[25] - 2 * d[3] * d[6] * d[8] * d[13] * d[25] - 4 * d[4] * d[7] * d[8] * d[13] * d[25] - std::pow(d[2], 2) * d[4] * d[14] * d[25] - 2 * d[1] * d[2] * d[5] * d[14] * d[25] - 3 * d[4] * std::pow(d[5], 2) * d[14] * d[25] + d[4] * std::pow(d[6], 2) * d[14] * d[25] + 2 * d[3] * d[6] * d[7] * d[14] * d[25] + 3 * d[4] * std::pow(d[7], 2) * d[14] * d[25] + 2 * d[1] * d[2] * d[6] * d[15] * d[25] + 2 * d[4] * d[5] * d[6] * d[15] * d[25] + 2 * d[0] * d[2] * d[7] * d[15] * d[25] + 2 * d[3] * d[5] * d[7] * d[15] * d[25] - 2 * d[0] * d[1] * d[8] * d[15] * d[25] - 2 * d[3] * d[4] * d[8] * d[15] * d[25] + 2 * d[0] * d[2] * d[6] * d[16] * d[25] + 2 * d[3] * d[5] * d[6] * d[16] * d[25] + 6 * d[1] * d[2] * d[7] * d[16] * d[25] + 6 * d[4] * d[5] * d[7] * d[16] * d[25] - 2 * std::pow(d[1], 2) * d[8] * d[16] * d[25] - 2 * std::pow(d[4], 2) * d[8] * d[16] * d[25] - 2 * d[0] * d[1] * d[6] * d[17] * d[25] - 2 * d[3] * d[4] * d[6] * d[17] * d[25] - 2 * std::pow(d[1], 2) * d[7] * d[17] * d[25] - 2 * std::pow(d[4], 2) * d[7] * d[17] * d[25] + 2 * d[0] * std::pow(d[2], 2) * d[9] * d[26] + 2 * d[2] * d[3] * d[5] * d[9] * d[26] - 2 * d[0] * std::pow(d[6], 2) * d[9] * d[26] - 2 * d[1] * d[6] * d[7] * d[9] * d[26] + 2 * d[1] * std::pow(d[2], 2) * d[10] * d[26] + 2 * d[2] * d[4] * d[5] * d[10] * d[26] - 2 * d[0] * d[6] * d[7] * d[10] * d[26] - 2 * d[1] * std::pow(d[7], 2) * d[10] * d[26] + 2 * std::pow(d[0], 2) * d[2] * d[11] * d[26] + 2 * std::pow(d[1], 2) * d[2] * d[11] * d[26] + 2 * d[0] * d[3] * d[5] * d[11] * d[26] + 2 * d[1] * d[4] * d[5] * d[11] * d[26] + 2 * d[0] * d[2] * d[5] * d[12] * d[26] + 2 * d[3] * std::pow(d[5], 2) * d[12] * d[26] - 2 * d[3] * std::pow(d[6], 2) * d[12] * d[26] - 2 * d[4] * d[6] * d[7] * d[12] * d[26] + 2 * d[1] * d[2] * d[5] * d[13] * d[26] + 2 * d[4] * std::pow(d[5], 2) * d[13] * d[26] - 2 * d[3] * d[6] * d[7] * d[13] * d[26] - 2 * d[4] * std::pow(d[7], 2) * d[13] * d[26] + 2 * d[0] * d[2] * d[3] * d[14] * d[26] + 2 * d[1] * d[2] * d[4] * d[14] * d[26] + 2 * std::pow(d[3], 2) * d[5] * d[14] * d[26] + 2 * std::pow(d[4], 2) * d[5] * d[14] * d[26] - 2 * std::pow(d[0], 2) * d[6] * d[15] * d[26] - 2 * std::pow(d[3], 2) * d[6] * d[15] * d[26] - 2 * d[0] * d[1] * d[7] * d[15] * d[26] - 2 * d[3] * d[4] * d[7] * d[15] * d[26] - 2 * d[0] * d[1] * d[6] * d[16] * d[26] - 2 * d[3] * d[4] * d[6] * d[16] * d[26] - 2 * std::pow(d[1], 2) * d[7] * d[16] * d[26] - 2 * std::pow(d[4], 2) * d[7] * d[16] * d[26];
				coeffs[18] = 4 * d[2] * d[8] * d[9] * d[11] * d[18] - 3 * d[2] * d[6] * std::pow(d[11], 2) * d[18] + 2 * d[0] * d[8] * std::pow(d[11], 2) * d[18] + 2 * d[5] * d[8] * d[11] * d[12] * d[18] - 2 * d[5] * d[6] * d[11] * d[14] * d[18] + 2 * d[3] * d[8] * d[11] * d[14] * d[18] + 2 * d[2] * d[8] * d[12] * d[14] * d[18] - d[2] * d[6] * std::pow(d[14], 2) * d[18] - 4 * d[6] * d[8] * d[9] * d[15] * d[18] - 2 * d[7] * d[8] * d[10] * d[15] * d[18] - 3 * std::pow(d[2], 2) * d[11] * d[15] * d[18] - std::pow(d[5], 2) * d[11] * d[15] * d[18] + 3 * std::pow(d[6], 2) * d[11] * d[15] * d[18] + std::pow(d[7], 2) * d[11] * d[15] * d[18] - 2 * d[2] * d[5] * d[14] * d[15] * d[18] + 3 * d[2] * d[6] * std::pow(d[15], 2) * d[18] - 2 * d[0] * d[8] * std::pow(d[15], 2) * d[18] - 2 * d[6] * d[8] * d[10] * d[16] * d[18] + 2 * d[6] * d[7] * d[11] * d[16] * d[18] + 2 * d[2] * d[7] * d[15] * d[16] * d[18] - 2 * d[1] * d[8] * d[15] * d[16] * d[18] + d[2] * d[6] * std::pow(d[16], 2) * d[18] + 2 * std::pow(d[2], 2) * d[9] * d[17] * d[18] - 2 * std::pow(d[6], 2) * d[9] * d[17] * d[18] - 2 * d[6] * d[7] * d[10] * d[17] * d[18] + 4 * d[0] * d[2] * d[11] * d[17] * d[18] + 2 * d[3] * d[5] * d[11] * d[17] * d[18] + 2 * d[2] * d[5] * d[12] * d[17] * d[18] + 2 * d[2] * d[3] * d[14] * d[17] * d[18] - 4 * d[0] * d[6] * d[15] * d[17] * d[18] - 2 * d[1] * d[7] * d[15] * d[17] * d[18] - 2 * d[1] * d[6] * d[16] * d[17] * d[18] + 4 * d[2] * d[8] * d[10] * d[11] * d[19] - 3 * d[2] * d[7] * std::pow(d[11], 2) * d[19] + 2 * d[1] * d[8] * std::pow(d[11], 2) * d[19] + 2 * d[5] * d[8] * d[11] * d[13] * d[19] - 2 * d[5] * d[7] * d[11] * d[14] * d[19] + 2 * d[4] * d[8] * d[11] * d[14] * d[19] + 2 * d[2] * d[8] * d[13] * d[14] * d[19] - d[2] * d[7] * std::pow(d[14], 2) * d[19] - 2 * d[7] * d[8] * d[9] * d[15] * d[19] + 2 * d[6] * d[7] * d[11] * d[15] * d[19] + d[2] * d[7] * std::pow(d[15], 2) * d[19] - 2 * d[6] * d[8] * d[9] * d[16] * d[19] - 4 * d[7] * d[8] * d[10] * d[16] * d[19] - 3 * std::pow(d[2], 2) * d[11] * d[16] * d[19] - std::pow(d[5], 2) * d[11] * d[16] * d[19] + std::pow(d[6], 2) * d[11] * d[16] * d[19] + 3 * std::pow(d[7], 2) * d[11] * d[16] * d[19] - 2 * d[2] * d[5] * d[14] * d[16] * d[19] + 2 * d[2] * d[6] * d[15] * d[16] * d[19] - 2 * d[0] * d[8] * d[15] * d[16] * d[19] + 3 * d[2] * d[7] * std::pow(d[16], 2) * d[19] - 2 * d[1] * d[8] * std::pow(d[16], 2) * d[19] - 2 * d[6] * d[7] * d[9] * d[17] * d[19] + 2 * std::pow(d[2], 2) * d[10] * d[17] * d[19] - 2 * std::pow(d[7], 2) * d[10] * d[17] * d[19] + 4 * d[1] * d[2] * d[11] * d[17] * d[19] + 2 * d[4] * d[5] * d[11] * d[17] * d[19] + 2 * d[2] * d[5] * d[13] * d[17] * d[19] + 2 * d[2] * d[4] * d[14] * d[17] * d[19] - 2 * d[0] * d[7] * d[15] * d[17] * d[19] - 2 * d[0] * d[6] * d[16] * d[17] * d[19] - 4 * d[1] * d[7] * d[16] * d[17] * d[19] + 2 * d[2] * d[8] * std::pow(d[9], 2) * d[20] + 2 * d[2] * d[8] * std::pow(d[10], 2) * d[20] - 6 * d[2] * d[6] * d[9] * d[11] * d[20] + 4 * d[0] * d[8] * d[9] * d[11] * d[20] - 6 * d[2] * d[7] * d[10] * d[11] * d[20] + 4 * d[1] * d[8] * d[10] * d[11] * d[20] - 3 * d[0] * d[6] * std::pow(d[11], 2) * d[20] - 3 * d[1] * d[7] * std::pow(d[11], 2) * d[20] + 2 * d[5] * d[8] * d[9] * d[12] * d[20] - 2 * d[5] * d[6] * d[11] * d[12] * d[20] + 2 * d[5] * d[8] * d[10] * d[13] * d[20] - 2 * d[5] * d[7] * d[11] * d[13] * d[20] - 2 * d[5] * d[6] * d[9] * d[14] * d[20] + 2 * d[3] * d[8] * d[9] * d[14] * d[20] - 2 * d[5] * d[7] * d[10] * d[14] * d[20] + 2 * d[4] * d[8] * d[10] * d[14] * d[20] - 2 * d[3] * d[6] * d[11] * d[14] * d[20] - 2 * d[4] * d[7] * d[11] * d[14] * d[20] - 2 * d[2] * d[6] * d[12] * d[14] * d[20] + 2 * d[0] * d[8] * d[12] * d[14] * d[20] - 2 * d[2] * d[7] * d[13] * d[14] * d[20] + 2 * d[1] * d[8] * d[13] * d[14] * d[20] - d[0] * d[6] * std::pow(d[14], 2) * d[20] - d[1] * d[7] * std::pow(d[14], 2) * d[20] - 3 * std::pow(d[2], 2) * d[9] * d[15] * d[20] - std::pow(d[5], 2) * d[9] * d[15] * d[20] + 3 * std::pow(d[6], 2) * d[9] * d[15] * d[20] + std::pow(d[7], 2) * d[9] * d[15] * d[20] + 2 * d[6] * d[7] * d[10] * d[15] * d[20] - 6 * d[0] * d[2] * d[11] * d[15] * d[20] - 2 * d[3] * d[5] * d[11] * d[15] * d[20] - 2 * d[2] * d[5] * d[12] * d[15] * d[20] - 2 * d[2] * d[3] * d[14] * d[15] * d[20] - 2 * d[0] * d[5] * d[14] * d[15] * d[20] + 3 * d[0] * d[6] * std::pow(d[15], 2) * d[20] + d[1] * d[7] * std::pow(d[15], 2) * d[20] + 2 * d[6] * d[7] * d[9] * d[16] * d[20] - 3 * std::pow(d[2], 2) * d[10] * d[16] * d[20] - std::pow(d[5], 2) * d[10] * d[16] * d[20] + std::pow(d[6], 2) * d[10] * d[16] * d[20] + 3 * std::pow(d[7], 2) * d[10] * d[16] * d[20] - 6 * d[1] * d[2] * d[11] * d[16] * d[20] - 2 * d[4] * d[5] * d[11] * d[16] * d[20] - 2 * d[2] * d[5] * d[13] * d[16] * d[20] - 2 * d[2] * d[4] * d[14] * d[16] * d[20] - 2 * d[1] * d[5] * d[14] * d[16] * d[20] + 2 * d[1] * d[6] * d[15] * d[16] * d[20] + 2 * d[0] * d[7] * d[15] * d[16] * d[20] + d[0] * d[6] * std::pow(d[16], 2) * d[20] + 3 * d[1] * d[7] * std::pow(d[16], 2) * d[20] + 4 * d[0] * d[2] * d[9] * d[17] * d[20] + 2 * d[3] * d[5] * d[9] * d[17] * d[20] + 4 * d[1] * d[2] * d[10] * d[17] * d[20] + 2 * d[4] * d[5] * d[10] * d[17] * d[20] + 2 * std::pow(d[0], 2) * d[11] * d[17] * d[20] + 2 * std::pow(d[1], 2) * d[11] * d[17] * d[20] + 2 * d[0] * d[5] * d[12] * d[17] * d[20] + 2 * d[1] * d[5] * d[13] * d[17] * d[20] + 2 * d[0] * d[3] * d[14] * d[17] * d[20] + 2 * d[1] * d[4] * d[14] * d[17] * d[20] + 2 * d[5] * d[8] * d[9] * d[11] * d[21] - d[5] * d[6] * std::pow(d[11], 2) * d[21] + 2 * d[2] * d[8] * d[9] * d[14] * d[21] - 2 * d[2] * d[6] * d[11] * d[14] * d[21] + 2 * d[0] * d[8] * d[11] * d[14] * d[21] + 4 * d[5] * d[8] * d[12] * d[14] * d[21] - 3 * d[5] * d[6] * std::pow(d[14], 2) * d[21] + 2 * d[3] * d[8] * std::pow(d[14], 2) * d[21] - 2 * d[2] * d[5] * d[11] * d[15] * d[21] - 4 * d[6] * d[8] * d[12] * d[15] * d[21] - 2 * d[7] * d[8] * d[13] * d[15] * d[21] - std::pow(d[2], 2) * d[14] * d[15] * d[21] - 3 * std::pow(d[5], 2) * d[14] * d[15] * d[21] + 3 * std::pow(d[6], 2) * d[14] * d[15] * d[21] + std::pow(d[7], 2) * d[14] * d[15] * d[21] + 3 * d[5] * d[6] * std::pow(d[15], 2) * d[21] - 2 * d[3] * d[8] * std::pow(d[15], 2) * d[21] - 2 * d[6] * d[8] * d[13] * d[16] * d[21] + 2 * d[6] * d[7] * d[14] * d[16] * d[21] + 2 * d[5] * d[7] * d[15] * d[16] * d[21] - 2 * d[4] * d[8] * d[15] * d[16] * d[21] + d[5] * d[6] * std::pow(d[16], 2) * d[21] + 2 * d[2] * d[5] * d[9] * d[17] * d[21] + 2 * d[0] * d[5] * d[11] * d[17] * d[21] + 2 * std::pow(d[5], 2) * d[12] * d[17] * d[21] - 2 * std::pow(d[6], 2) * d[12] * d[17] * d[21] - 2 * d[6] * d[7] * d[13] * d[17] * d[21] + 2 * d[0] * d[2] * d[14] * d[17] * d[21] + 4 * d[3] * d[5] * d[14] * d[17] * d[21] - 4 * d[3] * d[6] * d[15] * d[17] * d[21] - 2 * d[4] * d[7] * d[15] * d[17] * d[21] - 2 * d[4] * d[6] * d[16] * d[17] * d[21] + 2 * d[5] * d[8] * d[10] * d[11] * d[22] - d[5] * d[7] * std::pow(d[11], 2) * d[22] + 2 * d[2] * d[8] * d[10] * d[14] * d[22] - 2 * d[2] * d[7] * d[11] * d[14] * d[22] + 2 * d[1] * d[8] * d[11] * d[14] * d[22] + 4 * d[5] * d[8] * d[13] * d[14] * d[22] - 3 * d[5] * d[7] * std::pow(d[14], 2) * d[22] + 2 * d[4] * d[8] * std::pow(d[14], 2) * d[22] - 2 * d[7] * d[8] * d[12] * d[15] * d[22] + 2 * d[6] * d[7] * d[14] * d[15] * d[22] + d[5] * d[7] * std::pow(d[15], 2) * d[22] - 2 * d[2] * d[5] * d[11] * d[16] * d[22] - 2 * d[6] * d[8] * d[12] * d[16] * d[22] - 4 * d[7] * d[8] * d[13] * d[16] * d[22] - std::pow(d[2], 2) * d[14] * d[16] * d[22] - 3 * std::pow(d[5], 2) * d[14] * d[16] * d[22] + std::pow(d[6], 2) * d[14] * d[16] * d[22] + 3 * std::pow(d[7], 2) * d[14] * d[16] * d[22] + 2 * d[5] * d[6] * d[15] * d[16] * d[22] - 2 * d[3] * d[8] * d[15] * d[16] * d[22] + 3 * d[5] * d[7] * std::pow(d[16], 2) * d[22] - 2 * d[4] * d[8] * std::pow(d[16], 2) * d[22] + 2 * d[2] * d[5] * d[10] * d[17] * d[22] + 2 * d[1] * d[5] * d[11] * d[17] * d[22] - 2 * d[6] * d[7] * d[12] * d[17] * d[22] + 2 * std::pow(d[5], 2) * d[13] * d[17] * d[22] - 2 * std::pow(d[7], 2) * d[13] * d[17] * d[22] + 2 * d[1] * d[2] * d[14] * d[17] * d[22] + 4 * d[4] * d[5] * d[14] * d[17] * d[22] - 2 * d[3] * d[7] * d[15] * d[17] * d[22] - 2 * d[3] * d[6] * d[16] * d[17] * d[22] - 4 * d[4] * d[7] * d[16] * d[17] * d[22] - 2 * d[5] * d[6] * d[9] * d[11] * d[23] + 2 * d[3] * d[8] * d[9] * d[11] * d[23] - 2 * d[5] * d[7] * d[10] * d[11] * d[23] + 2 * d[4] * d[8] * d[10] * d[11] * d[23] - d[3] * d[6] * std::pow(d[11], 2) * d[23] - d[4] * d[7] * std::pow(d[11], 2) * d[23] + 2 * d[2] * d[8] * d[9] * d[12] * d[23] - 2 * d[2] * d[6] * d[11] * d[12] * d[23] + 2 * d[0] * d[8] * d[11] * d[12] * d[23] + 2 * d[5] * d[8] * std::pow(d[12], 2) * d[23] + 2 * d[2] * d[8] * d[10] * d[13] * d[23] - 2 * d[2] * d[7] * d[11] * d[13] * d[23] + 2 * d[1] * d[8] * d[11] * d[13] * d[23] + 2 * d[5] * d[8] * std::pow(d[13], 2) * d[23] - 2 * d[2] * d[6] * d[9] * d[14] * d[23] - 2 * d[2] * d[7] * d[10] * d[14] * d[23] - 2 * d[0] * d[6] * d[11] * d[14] * d[23] - 2 * d[1] * d[7] * d[11] * d[14] * d[23] - 6 * d[5] * d[6] * d[12] * d[14] * d[23] + 4 * d[3] * d[8] * d[12] * d[14] * d[23] - 6 * d[5] * d[7] * d[13] * d[14] * d[23] + 4 * d[4] * d[8] * d[13] * d[14] * d[23] - 3 * d[3] * d[6] * std::pow(d[14], 2) * d[23] - 3 * d[4] * d[7] * std::pow(d[14], 2) * d[23] - 2 * d[2] * d[5] * d[9] * d[15] * d[23] - 2 * d[2] * d[3] * d[11] * d[15] * d[23] - 2 * d[0] * d[5] * d[11] * d[15] * d[23] - std::pow(d[2], 2) * d[12] * d[15] * d[23] - 3 * std::pow(d[5], 2) * d[12] * d[15] * d[23] + 3 * std::pow(d[6], 2) * d[12] * d[15] * d[23] + std::pow(d[7], 2) * d[12] * d[15] * d[23] + 2 * d[6] * d[7] * d[13] * d[15] * d[23] - 2 * d[0] * d[2] * d[14] * d[15] * d[23] - 6 * d[3] * d[5] * d[14] * d[15] * d[23] + 3 * d[3] * d[6] * std::pow(d[15], 2) * d[23] + d[4] * d[7] * std::pow(d[15], 2) * d[23] - 2 * d[2] * d[5] * d[10] * d[16] * d[23] - 2 * d[2] * d[4] * d[11] * d[16] * d[23] - 2 * d[1] * d[5] * d[11] * d[16] * d[23] + 2 * d[6] * d[7] * d[12] * d[16] * d[23] - std::pow(d[2], 2) * d[13] * d[16] * d[23] - 3 * std::pow(d[5], 2) * d[13] * d[16] * d[23] + std::pow(d[6], 2) * d[13] * d[16] * d[23] + 3 * std::pow(d[7], 2) * d[13] * d[16] * d[23] - 2 * d[1] * d[2] * d[14] * d[16] * d[23] - 6 * d[4] * d[5] * d[14] * d[16] * d[23] + 2 * d[4] * d[6] * d[15] * d[16] * d[23] + 2 * d[3] * d[7] * d[15] * d[16] * d[23] + d[3] * d[6] * std::pow(d[16], 2) * d[23] + 3 * d[4] * d[7] * std::pow(d[16], 2) * d[23] + 2 * d[2] * d[3] * d[9] * d[17] * d[23] + 2 * d[2] * d[4] * d[10] * d[17] * d[23] + 2 * d[0] * d[3] * d[11] * d[17] * d[23] + 2 * d[1] * d[4] * d[11] * d[17] * d[23] + 2 * d[0] * d[2] * d[12] * d[17] * d[23] + 4 * d[3] * d[5] * d[12] * d[17] * d[23] + 2 * d[1] * d[2] * d[13] * d[17] * d[23] + 4 * d[4] * d[5] * d[13] * d[17] * d[23] + 2 * std::pow(d[3], 2) * d[14] * d[17] * d[23] + 2 * std::pow(d[4], 2) * d[14] * d[17] * d[23] - 2 * d[6] * d[8] * std::pow(d[9], 2) * d[24] - 2 * d[7] * d[8] * d[9] * d[10] * d[24] - 3 * std::pow(d[2], 2) * d[9] * d[11] * d[24] - std::pow(d[5], 2) * d[9] * d[11] * d[24] + 3 * std::pow(d[6], 2) * d[9] * d[11] * d[24] + std::pow(d[7], 2) * d[9] * d[11] * d[24] + 2 * d[6] * d[7] * d[10] * d[11] * d[24] - 3 * d[0] * d[2] * std::pow(d[11], 2) * d[24] - d[3] * d[5] * std::pow(d[11], 2) * d[24] - 2 * d[2] * d[5] * d[11] * d[12] * d[24] - 2 * d[6] * d[8] * std::pow(d[12], 2) * d[24] - 2 * d[7] * d[8] * d[12] * d[13] * d[24] - 2 * d[2] * d[5] * d[9] * d[14] * d[24] - 2 * d[2] * d[3] * d[11] * d[14] * d[24] - 2 * d[0] * d[5] * d[11] * d[14] * d[24] - std::pow(d[2], 2) * d[12] * d[14] * d[24] - 3 * std::pow(d[5], 2) * d[12] * d[14] * d[24] + 3 * std::pow(d[6], 2) * d[12] * d[14] * d[24] + std::pow(d[7], 2) * d[12] * d[14] * d[24] + 2 * d[6] * d[7] * d[13] * d[14] * d[24] - d[0] * d[2] * std::pow(d[14], 2) * d[24] - 3 * d[3] * d[5] * std::pow(d[14], 2) * d[24] + 6 * d[2] * d[6] * d[9] * d[15] * d[24] - 4 * d[0] * d[8] * d[9] * d[15] * d[24] + 2 * d[2] * d[7] * d[10] * d[15] * d[24] + 6 * d[0] * d[6] * d[11] * d[15] * d[24] + 2 * d[1] * d[7] * d[11] * d[15] * d[24] + 6 * d[5] * d[6] * d[12] * d[15] * d[24] - 4 * d[3] * d[8] * d[12] * d[15] * d[24] + 2 * d[5] * d[7] * d[13] * d[15] * d[24] + 6 * d[3] * d[6] * d[14] * d[15] * d[24] + 2 * d[4] * d[7] * d[14] * d[15] * d[24] + 3 * d[0] * d[2] * std::pow(d[15], 2) * d[24] + 3 * d[3] * d[5] * std::pow(d[15], 2) * d[24] + 2 * d[2] * d[7] * d[9] * d[16] * d[24] - 2 * d[1] * d[8] * d[9] * d[16] * d[24] + 2 * d[2] * d[6] * d[10] * d[16] * d[24] - 2 * d[0] * d[8] * d[10] * d[16] * d[24] + 2 * d[1] * d[6] * d[11] * d[16] * d[24] + 2 * d[0] * d[7] * d[11] * d[16] * d[24] + 2 * d[5] * d[7] * d[12] * d[16] * d[24] - 2 * d[4] * d[8] * d[12] * d[16] * d[24] + 2 * d[5] * d[6] * d[13] * d[16] * d[24] - 2 * d[3] * d[8] * d[13] * d[16] * d[24] + 2 * d[4] * d[6] * d[14] * d[16] * d[24] + 2 * d[3] * d[7] * d[14] * d[16] * d[24] + 2 * d[1] * d[2] * d[15] * d[16] * d[24] + 2 * d[4] * d[5] * d[15] * d[16] * d[24] + d[0] * d[2] * std::pow(d[16], 2) * d[24] + d[3] * d[5] * std::pow(d[16], 2) * d[24] - 4 * d[0] * d[6] * d[9] * d[17] * d[24] - 2 * d[1] * d[7] * d[9] * d[17] * d[24] - 2 * d[0] * d[7] * d[10] * d[17] * d[24] - 4 * d[3] * d[6] * d[12] * d[17] * d[24] - 2 * d[4] * d[7] * d[12] * d[17] * d[24] - 2 * d[3] * d[7] * d[13] * d[17] * d[24] - 2 * std::pow(d[0], 2) * d[15] * d[17] * d[24] - 2 * std::pow(d[3], 2) * d[15] * d[17] * d[24] - 2 * d[0] * d[1] * d[16] * d[17] * d[24] - 2 * d[3] * d[4] * d[16] * d[17] * d[24] - 2 * d[6] * d[8] * d[9] * d[10] * d[25] - 2 * d[7] * d[8] * std::pow(d[10], 2) * d[25] + 2 * d[6] * d[7] * d[9] * d[11] * d[25] - 3 * std::pow(d[2], 2) * d[10] * d[11] * d[25] - std::pow(d[5], 2) * d[10] * d[11] * d[25] + std::pow(d[6], 2) * d[10] * d[11] * d[25] + 3 * std::pow(d[7], 2) * d[10] * d[11] * d[25] - 3 * d[1] * d[2] * std::pow(d[11], 2) * d[25] - d[4] * d[5] * std::pow(d[11], 2) * d[25] - 2 * d[2] * d[5] * d[11] * d[13] * d[25] - 2 * d[6] * d[8] * d[12] * d[13] * d[25] - 2 * d[7] * d[8] * std::pow(d[13], 2) * d[25] - 2 * d[2] * d[5] * d[10] * d[14] * d[25] - 2 * d[2] * d[4] * d[11] * d[14] * d[25] - 2 * d[1] * d[5] * d[11] * d[14] * d[25] + 2 * d[6] * d[7] * d[12] * d[14] * d[25] - std::pow(d[2], 2) * d[13] * d[14] * d[25] - 3 * std::pow(d[5], 2) * d[13] * d[14] * d[25] + std::pow(d[6], 2) * d[13] * d[14] * d[25] + 3 * std::pow(d[7], 2) * d[13] * d[14] * d[25] - d[1] * d[2] * std::pow(d[14], 2) * d[25] - 3 * d[4] * d[5] * std::pow(d[14], 2) * d[25] + 2 * d[2] * d[7] * d[9] * d[15] * d[25] - 2 * d[1] * d[8] * d[9] * d[15] * d[25] + 2 * d[2] * d[6] * d[10] * d[15] * d[25] - 2 * d[0] * d[8] * d[10] * d[15] * d[25] + 2 * d[1] * d[6] * d[11] * d[15] * d[25] + 2 * d[0] * d[7] * d[11] * d[15] * d[25] + 2 * d[5] * d[7] * d[12] * d[15] * d[25] - 2 * d[4] * d[8] * d[12] * d[15] * d[25] + 2 * d[5] * d[6] * d[13] * d[15] * d[25] - 2 * d[3] * d[8] * d[13] * d[15] * d[25] + 2 * d[4] * d[6] * d[14] * d[15] * d[25] + 2 * d[3] * d[7] * d[14] * d[15] * d[25] + d[1] * d[2] * std::pow(d[15], 2) * d[25] + d[4] * d[5] * std::pow(d[15], 2) * d[25] + 2 * d[2] * d[6] * d[9] * d[16] * d[25] + 6 * d[2] * d[7] * d[10] * d[16] * d[25] - 4 * d[1] * d[8] * d[10] * d[16] * d[25] + 2 * d[0] * d[6] * d[11] * d[16] * d[25] + 6 * d[1] * d[7] * d[11] * d[16] * d[25] + 2 * d[5] * d[6] * d[12] * d[16] * d[25] + 6 * d[5] * d[7] * d[13] * d[16] * d[25] - 4 * d[4] * d[8] * d[13] * d[16] * d[25] + 2 * d[3] * d[6] * d[14] * d[16] * d[25] + 6 * d[4] * d[7] * d[14] * d[16] * d[25] + 2 * d[0] * d[2] * d[15] * d[16] * d[25] + 2 * d[3] * d[5] * d[15] * d[16] * d[25] + 3 * d[1] * d[2] * std::pow(d[16], 2) * d[25] + 3 * d[4] * d[5] * std::pow(d[16], 2) * d[25] - 2 * d[1] * d[6] * d[9] * d[17] * d[25] - 2 * d[0] * d[6] * d[10] * d[17] * d[25] - 4 * d[1] * d[7] * d[10] * d[17] * d[25] - 2 * d[4] * d[6] * d[12] * d[17] * d[25] - 2 * d[3] * d[6] * d[13] * d[17] * d[25] - 4 * d[4] * d[7] * d[13] * d[17] * d[25] - 2 * d[0] * d[1] * d[15] * d[17] * d[25] - 2 * d[3] * d[4] * d[15] * d[17] * d[25] - 2 * std::pow(d[1], 2) * d[16] * d[17] * d[25] - 2 * std::pow(d[4], 2) * d[16] * d[17] * d[25] + std::pow(d[2], 2) * std::pow(d[9], 2) * d[26] - std::pow(d[6], 2) * std::pow(d[9], 2) * d[26] - 2 * d[6] * d[7] * d[9] * d[10] * d[26] + std::pow(d[2], 2) * std::pow(d[10], 2) * d[26] - std::pow(d[7], 2) * std::pow(d[10], 2) * d[26] + 4 * d[0] * d[2] * d[9] * d[11] * d[26] + 2 * d[3] * d[5] * d[9] * d[11] * d[26] + 4 * d[1] * d[2] * d[10] * d[11] * d[26] + 2 * d[4] * d[5] * d[10] * d[11] * d[26] + std::pow(d[0], 2) * std::pow(d[11], 2) * d[26] + std::pow(d[1], 2) * std::pow(d[11], 2) * d[26] + 2 * d[2] * d[5] * d[9] * d[12] * d[26] + 2 * d[0] * d[5] * d[11] * d[12] * d[26] + std::pow(d[5], 2) * std::pow(d[12], 2) * d[26] - std::pow(d[6], 2) * std::pow(d[12], 2) * d[26] + 2 * d[2] * d[5] * d[10] * d[13] * d[26] + 2 * d[1] * d[5] * d[11] * d[13] * d[26] - 2 * d[6] * d[7] * d[12] * d[13] * d[26] + std::pow(d[5], 2) * std::pow(d[13], 2) * d[26] - std::pow(d[7], 2) * std::pow(d[13], 2) * d[26] + 2 * d[2] * d[3] * d[9] * d[14] * d[26] + 2 * d[2] * d[4] * d[10] * d[14] * d[26] + 2 * d[0] * d[3] * d[11] * d[14] * d[26] + 2 * d[1] * d[4] * d[11] * d[14] * d[26] + 2 * d[0] * d[2] * d[12] * d[14] * d[26] + 4 * d[3] * d[5] * d[12] * d[14] * d[26] + 2 * d[1] * d[2] * d[13] * d[14] * d[26] + 4 * d[4] * d[5] * d[13] * d[14] * d[26] + std::pow(d[3], 2) * std::pow(d[14], 2) * d[26] + std::pow(d[4], 2) * std::pow(d[14], 2) * d[26] - 4 * d[0] * d[6] * d[9] * d[15] * d[26] - 2 * d[1] * d[7] * d[9] * d[15] * d[26] - 2 * d[0] * d[7] * d[10] * d[15] * d[26] - 4 * d[3] * d[6] * d[12] * d[15] * d[26] - 2 * d[4] * d[7] * d[12] * d[15] * d[26] - 2 * d[3] * d[7] * d[13] * d[15] * d[26] - std::pow(d[0], 2) * std::pow(d[15], 2) * d[26] - std::pow(d[3], 2) * std::pow(d[15], 2) * d[26] - 2 * d[1] * d[6] * d[9] * d[16] * d[26] - 2 * d[0] * d[6] * d[10] * d[16] * d[26] - 4 * d[1] * d[7] * d[10] * d[16] * d[26] - 2 * d[4] * d[6] * d[12] * d[16] * d[26] - 2 * d[3] * d[6] * d[13] * d[16] * d[26] - 4 * d[4] * d[7] * d[13] * d[16] * d[26] - 2 * d[0] * d[1] * d[15] * d[16] * d[26] - 2 * d[3] * d[4] * d[15] * d[16] * d[26] - std::pow(d[1], 2) * std::pow(d[16], 2) * d[26] - std::pow(d[4], 2) * std::pow(d[16], 2) * d[26];
				coeffs[19] = 2 * d[8] * d[9] * std::pow(d[11], 2) * d[18] - d[6] * std::pow(d[11], 3) * d[18] + 2 * d[8] * d[11] * d[12] * d[14] * d[18] - d[6] * d[11] * std::pow(d[14], 2) * d[18] - 3 * d[2] * std::pow(d[11], 2) * d[15] * d[18] - 2 * d[5] * d[11] * d[14] * d[15] * d[18] - d[2] * std::pow(d[14], 2) * d[15] * d[18] - 2 * d[8] * d[9] * std::pow(d[15], 2) * d[18] + 3 * d[6] * d[11] * std::pow(d[15], 2) * d[18] + d[2] * std::pow(d[15], 3) * d[18] - 2 * d[8] * d[10] * d[15] * d[16] * d[18] + 2 * d[7] * d[11] * d[15] * d[16] * d[18] + d[6] * d[11] * std::pow(d[16], 2) * d[18] + d[2] * d[15] * std::pow(d[16], 2) * d[18] + 4 * d[2] * d[9] * d[11] * d[17] * d[18] + 2 * d[0] * std::pow(d[11], 2) * d[17] * d[18] + 2 * d[5] * d[11] * d[12] * d[17] * d[18] + 2 * d[3] * d[11] * d[14] * d[17] * d[18] + 2 * d[2] * d[12] * d[14] * d[17] * d[18] - 4 * d[6] * d[9] * d[15] * d[17] * d[18] - 2 * d[7] * d[10] * d[15] * d[17] * d[18] - 2 * d[0] * std::pow(d[15], 2) * d[17] * d[18] - 2 * d[6] * d[10] * d[16] * d[17] * d[18] - 2 * d[1] * d[15] * d[16] * d[17] * d[18] + 2 * d[8] * d[10] * std::pow(d[11], 2) * d[19] - d[7] * std::pow(d[11], 3) * d[19] + 2 * d[8] * d[11] * d[13] * d[14] * d[19] - d[7] * d[11] * std::pow(d[14], 2) * d[19] + d[7] * d[11] * std::pow(d[15], 2) * d[19] - 3 * d[2] * std::pow(d[11], 2) * d[16] * d[19] - 2 * d[5] * d[11] * d[14] * d[16] * d[19] - d[2] * std::pow(d[14], 2) * d[16] * d[19] - 2 * d[8] * d[9] * d[15] * d[16] * d[19] + 2 * d[6] * d[11] * d[15] * d[16] * d[19] + d[2] * std::pow(d[15], 2) * d[16] * d[19] - 2 * d[8] * d[10] * std::pow(d[16], 2) * d[19] + 3 * d[7] * d[11] * std::pow(d[16], 2) * d[19] + d[2] * std::pow(d[16], 3) * d[19] + 4 * d[2] * d[10] * d[11] * d[17] * d[19] + 2 * d[1] * std::pow(d[11], 2) * d[17] * d[19] + 2 * d[5] * d[11] * d[13] * d[17] * d[19] + 2 * d[4] * d[11] * d[14] * d[17] * d[19] + 2 * d[2] * d[13] * d[14] * d[17] * d[19] - 2 * d[7] * d[9] * d[15] * d[17] * d[19] - 2 * d[6] * d[9] * d[16] * d[17] * d[19] - 4 * d[7] * d[10] * d[16] * d[17] * d[19] - 2 * d[0] * d[15] * d[16] * d[17] * d[19] - 2 * d[1] * std::pow(d[16], 2) * d[17] * d[19] + 2 * d[8] * std::pow(d[9], 2) * d[11] * d[20] + 2 * d[8] * std::pow(d[10], 2) * d[11] * d[20] - 3 * d[6] * d[9] * std::pow(d[11], 2) * d[20] - 3 * d[7] * d[10] * std::pow(d[11], 2) * d[20] + 2 * d[8] * d[9] * d[12] * d[14] * d[20] - 2 * d[6] * d[11] * d[12] * d[14] * d[20] + 2 * d[8] * d[10] * d[13] * d[14] * d[20] - 2 * d[7] * d[11] * d[13] * d[14] * d[20] - d[6] * d[9] * std::pow(d[14], 2) * d[20] - d[7] * d[10] * std::pow(d[14], 2) * d[20] - 6 * d[2] * d[9] * d[11] * d[15] * d[20] - 3 * d[0] * std::pow(d[11], 2) * d[15] * d[20] - 2 * d[5] * d[11] * d[12] * d[15] * d[20] - 2 * d[5] * d[9] * d[14] * d[15] * d[20] - 2 * d[3] * d[11] * d[14] * d[15] * d[20] - 2 * d[2] * d[12] * d[14] * d[15] * d[20] - d[0] * std::pow(d[14], 2) * d[15] * d[20] + 3 * d[6] * d[9] * std::pow(d[15], 2) * d[20] + d[7] * d[10] * std::pow(d[15], 2) * d[20] + d[0] * std::pow(d[15], 3) * d[20] - 6 * d[2] * d[10] * d[11] * d[16] * d[20] - 3 * d[1] * std::pow(d[11], 2) * d[16] * d[20] - 2 * d[5] * d[11] * d[13] * d[16] * d[20] - 2 * d[5] * d[10] * d[14] * d[16] * d[20] - 2 * d[4] * d[11] * d[14] * d[16] * d[20] - 2 * d[2] * d[13] * d[14] * d[16] * d[20] - d[1] * std::pow(d[14], 2) * d[16] * d[20] + 2 * d[7] * d[9] * d[15] * d[16] * d[20] + 2 * d[6] * d[10] * d[15] * d[16] * d[20] + d[1] * std::pow(d[15], 2) * d[16] * d[20] + d[6] * d[9] * std::pow(d[16], 2) * d[20] + 3 * d[7] * d[10] * std::pow(d[16], 2) * d[20] + d[0] * d[15] * std::pow(d[16], 2) * d[20] + d[1] * std::pow(d[16], 3) * d[20] + 2 * d[2] * std::pow(d[9], 2) * d[17] * d[20] + 2 * d[2] * std::pow(d[10], 2) * d[17] * d[20] + 4 * d[0] * d[9] * d[11] * d[17] * d[20] + 4 * d[1] * d[10] * d[11] * d[17] * d[20] + 2 * d[5] * d[9] * d[12] * d[17] * d[20] + 2 * d[5] * d[10] * d[13] * d[17] * d[20] + 2 * d[3] * d[9] * d[14] * d[17] * d[20] + 2 * d[4] * d[10] * d[14] * d[17] * d[20] + 2 * d[0] * d[12] * d[14] * d[17] * d[20] + 2 * d[1] * d[13] * d[14] * d[17] * d[20] + 2 * d[8] * d[9] * d[11] * d[14] * d[21] - d[6] * std::pow(d[11], 2) * d[14] * d[21] + 2 * d[8] * d[12] * std::pow(d[14], 2) * d[21] - d[6] * std::pow(d[14], 3) * d[21] - d[5] * std::pow(d[11], 2) * d[15] * d[21] - 2 * d[2] * d[11] * d[14] * d[15] * d[21] - 3 * d[5] * std::pow(d[14], 2) * d[15] * d[21] - 2 * d[8] * d[12] * std::pow(d[15], 2) * d[21] + 3 * d[6] * d[14] * std::pow(d[15], 2) * d[21] + d[5] * std::pow(d[15], 3) * d[21] - 2 * d[8] * d[13] * d[15] * d[16] * d[21] + 2 * d[7] * d[14] * d[15] * d[16] * d[21] + d[6] * d[14] * std::pow(d[16], 2) * d[21] + d[5] * d[15] * std::pow(d[16], 2) * d[21] + 2 * d[5] * d[9] * d[11] * d[17] * d[21] + 2 * d[2] * d[9] * d[14] * d[17] * d[21] + 2 * d[0] * d[11] * d[14] * d[17] * d[21] + 4 * d[5] * d[12] * d[14] * d[17] * d[21] + 2 * d[3] * std::pow(d[14], 2) * d[17] * d[21] - 4 * d[6] * d[12] * d[15] * d[17] * d[21] - 2 * d[7] * d[13] * d[15] * d[17] * d[21] - 2 * d[3] * std::pow(d[15], 2) * d[17] * d[21] - 2 * d[6] * d[13] * d[16] * d[17] * d[21] - 2 * d[4] * d[15] * d[16] * d[17] * d[21] + 2 * d[8] * d[10] * d[11] * d[14] * d[22] - d[7] * std::pow(d[11], 2) * d[14] * d[22] + 2 * d[8] * d[13] * std::pow(d[14], 2) * d[22] - d[7] * std::pow(d[14], 3) * d[22] + d[7] * d[14] * std::pow(d[15], 2) * d[22] - d[5] * std::pow(d[11], 2) * d[16] * d[22] - 2 * d[2] * d[11] * d[14] * d[16] * d[22] - 3 * d[5] * std::pow(d[14], 2) * d[16] * d[22] - 2 * d[8] * d[12] * d[15] * d[16] * d[22] + 2 * d[6] * d[14] * d[15] * d[16] * d[22] + d[5] * std::pow(d[15], 2) * d[16] * d[22] - 2 * d[8] * d[13] * std::pow(d[16], 2) * d[22] + 3 * d[7] * d[14] * std::pow(d[16], 2) * d[22] + d[5] * std::pow(d[16], 3) * d[22] + 2 * d[5] * d[10] * d[11] * d[17] * d[22] + 2 * d[2] * d[10] * d[14] * d[17] * d[22] + 2 * d[1] * d[11] * d[14] * d[17] * d[22] + 4 * d[5] * d[13] * d[14] * d[17] * d[22] + 2 * d[4] * std::pow(d[14], 2) * d[17] * d[22] - 2 * d[7] * d[12] * d[15] * d[17] * d[22] - 2 * d[6] * d[12] * d[16] * d[17] * d[22] - 4 * d[7] * d[13] * d[16] * d[17] * d[22] - 2 * d[3] * d[15] * d[16] * d[17] * d[22] - 2 * d[4] * std::pow(d[16], 2) * d[17] * d[22] + 2 * d[8] * d[9] * d[11] * d[12] * d[23] - d[6] * std::pow(d[11], 2) * d[12] * d[23] + 2 * d[8] * d[10] * d[11] * d[13] * d[23] - d[7] * std::pow(d[11], 2) * d[13] * d[23] - 2 * d[6] * d[9] * d[11] * d[14] * d[23] - 2 * d[7] * d[10] * d[11] * d[14] * d[23] + 2 * d[8] * std::pow(d[12], 2) * d[14] * d[23] + 2 * d[8] * std::pow(d[13], 2) * d[14] * d[23] - 3 * d[6] * d[12] * std::pow(d[14], 2) * d[23] - 3 * d[7] * d[13] * std::pow(d[14], 2) * d[23] - 2 * d[5] * d[9] * d[11] * d[15] * d[23] - d[3] * std::pow(d[11], 2) * d[15] * d[23] - 2 * d[2] * d[11] * d[12] * d[15] * d[23] - 2 * d[2] * d[9] * d[14] * d[15] * d[23] - 2 * d[0] * d[11] * d[14] * d[15] * d[23] - 6 * d[5] * d[12] * d[14] * d[15] * d[23] - 3 * d[3] * std::pow(d[14], 2) * d[15] * d[23] + 3 * d[6] * d[12] * std::pow(d[15], 2) * d[23] + d[7] * d[13] * std::pow(d[15], 2) * d[23] + d[3] * std::pow(d[15], 3) * d[23] - 2 * d[5] * d[10] * d[11] * d[16] * d[23] - d[4] * std::pow(d[11], 2) * d[16] * d[23] - 2 * d[2] * d[11] * d[13] * d[16] * d[23] - 2 * d[2] * d[10] * d[14] * d[16] * d[23] - 2 * d[1] * d[11] * d[14] * d[16] * d[23] - 6 * d[5] * d[13] * d[14] * d[16] * d[23] - 3 * d[4] * std::pow(d[14], 2) * d[16] * d[23] + 2 * d[7] * d[12] * d[15] * d[16] * d[23] + 2 * d[6] * d[13] * d[15] * d[16] * d[23] + d[4] * std::pow(d[15], 2) * d[16] * d[23] + d[6] * d[12] * std::pow(d[16], 2) * d[23] + 3 * d[7] * d[13] * std::pow(d[16], 2) * d[23] + d[3] * d[15] * std::pow(d[16], 2) * d[23] + d[4] * std::pow(d[16], 3) * d[23] + 2 * d[3] * d[9] * d[11] * d[17] * d[23] + 2 * d[4] * d[10] * d[11] * d[17] * d[23] + 2 * d[2] * d[9] * d[12] * d[17] * d[23] + 2 * d[0] * d[11] * d[12] * d[17] * d[23] + 2 * d[5] * std::pow(d[12], 2) * d[17] * d[23] + 2 * d[2] * d[10] * d[13] * d[17] * d[23] + 2 * d[1] * d[11] * d[13] * d[17] * d[23] + 2 * d[5] * std::pow(d[13], 2) * d[17] * d[23] + 4 * d[3] * d[12] * d[14] * d[17] * d[23] + 4 * d[4] * d[13] * d[14] * d[17] * d[23] - 3 * d[2] * d[9] * std::pow(d[11], 2) * d[24] - d[0] * std::pow(d[11], 3) * d[24] - d[5] * std::pow(d[11], 2) * d[12] * d[24] - 2 * d[5] * d[9] * d[11] * d[14] * d[24] - d[3] * std::pow(d[11], 2) * d[14] * d[24] - 2 * d[2] * d[11] * d[12] * d[14] * d[24] - d[2] * d[9] * std::pow(d[14], 2) * d[24] - d[0] * d[11] * std::pow(d[14], 2) * d[24] - 3 * d[5] * d[12] * std::pow(d[14], 2) * d[24] - d[3] * std::pow(d[14], 3) * d[24] - 2 * d[8] * std::pow(d[9], 2) * d[15] * d[24] + 6 * d[6] * d[9] * d[11] * d[15] * d[24] + 2 * d[7] * d[10] * d[11] * d[15] * d[24] - 2 * d[8] * std::pow(d[12], 2) * d[15] * d[24] + 6 * d[6] * d[12] * d[14] * d[15] * d[24] + 2 * d[7] * d[13] * d[14] * d[15] * d[24] + 3 * d[2] * d[9] * std::pow(d[15], 2) * d[24] + 3 * d[0] * d[11] * std::pow(d[15], 2) * d[24] + 3 * d[5] * d[12] * std::pow(d[15], 2) * d[24] + 3 * d[3] * d[14] * std::pow(d[15], 2) * d[24] - 2 * d[8] * d[9] * d[10] * d[16] * d[24] + 2 * d[7] * d[9] * d[11] * d[16] * d[24] + 2 * d[6] * d[10] * d[11] * d[16] * d[24] - 2 * d[8] * d[12] * d[13] * d[16] * d[24] + 2 * d[7] * d[12] * d[14] * d[16] * d[24] + 2 * d[6] * d[13] * d[14] * d[16] * d[24] + 2 * d[2] * d[10] * d[15] * d[16] * d[24] + 2 * d[1] * d[11] * d[15] * d[16] * d[24] + 2 * d[5] * d[13] * d[15] * d[16] * d[24] + 2 * d[4] * d[14] * d[15] * d[16] * d[24] + d[2] * d[9] * std::pow(d[16], 2) * d[24] + d[0] * d[11] * std::pow(d[16], 2) * d[24] + d[5] * d[12] * std::pow(d[16], 2) * d[24] + d[3] * d[14] * std::pow(d[16], 2) * d[24] - 2 * d[6] * std::pow(d[9], 2) * d[17] * d[24] - 2 * d[7] * d[9] * d[10] * d[17] * d[24] - 2 * d[6] * std::pow(d[12], 2) * d[17] * d[24] - 2 * d[7] * d[12] * d[13] * d[17] * d[24] - 4 * d[0] * d[9] * d[15] * d[17] * d[24] - 4 * d[3] * d[12] * d[15] * d[17] * d[24] - 2 * d[1] * d[9] * d[16] * d[17] * d[24] - 2 * d[0] * d[10] * d[16] * d[17] * d[24] - 2 * d[4] * d[12] * d[16] * d[17] * d[24] - 2 * d[3] * d[13] * d[16] * d[17] * d[24] - 3 * d[2] * d[10] * std::pow(d[11], 2) * d[25] - d[1] * std::pow(d[11], 3) * d[25] - d[5] * std::pow(d[11], 2) * d[13] * d[25] - 2 * d[5] * d[10] * d[11] * d[14] * d[25] - d[4] * std::pow(d[11], 2) * d[14] * d[25] - 2 * d[2] * d[11] * d[13] * d[14] * d[25] - d[2] * d[10] * std::pow(d[14], 2) * d[25] - d[1] * d[11] * std::pow(d[14], 2) * d[25] - 3 * d[5] * d[13] * std::pow(d[14], 2) * d[25] - d[4] * std::pow(d[14], 3) * d[25] - 2 * d[8] * d[9] * d[10] * d[15] * d[25] + 2 * d[7] * d[9] * d[11] * d[15] * d[25] + 2 * d[6] * d[10] * d[11] * d[15] * d[25] - 2 * d[8] * d[12] * d[13] * d[15] * d[25] + 2 * d[7] * d[12] * d[14] * d[15] * d[25] + 2 * d[6] * d[13] * d[14] * d[15] * d[25] + d[2] * d[10] * std::pow(d[15], 2) * d[25] + d[1] * d[11] * std::pow(d[15], 2) * d[25] + d[5] * d[13] * std::pow(d[15], 2) * d[25] + d[4] * d[14] * std::pow(d[15], 2) * d[25] - 2 * d[8] * std::pow(d[10], 2) * d[16] * d[25] + 2 * d[6] * d[9] * d[11] * d[16] * d[25] + 6 * d[7] * d[10] * d[11] * d[16] * d[25] - 2 * d[8] * std::pow(d[13], 2) * d[16] * d[25] + 2 * d[6] * d[12] * d[14] * d[16] * d[25] + 6 * d[7] * d[13] * d[14] * d[16] * d[25] + 2 * d[2] * d[9] * d[15] * d[16] * d[25] + 2 * d[0] * d[11] * d[15] * d[16] * d[25] + 2 * d[5] * d[12] * d[15] * d[16] * d[25] + 2 * d[3] * d[14] * d[15] * d[16] * d[25] + 3 * d[2] * d[10] * std::pow(d[16], 2) * d[25] + 3 * d[1] * d[11] * std::pow(d[16], 2) * d[25] + 3 * d[5] * d[13] * std::pow(d[16], 2) * d[25] + 3 * d[4] * d[14] * std::pow(d[16], 2) * d[25] - 2 * d[6] * d[9] * d[10] * d[17] * d[25] - 2 * d[7] * std::pow(d[10], 2) * d[17] * d[25] - 2 * d[6] * d[12] * d[13] * d[17] * d[25] - 2 * d[7] * std::pow(d[13], 2) * d[17] * d[25] - 2 * d[1] * d[9] * d[15] * d[17] * d[25] - 2 * d[0] * d[10] * d[15] * d[17] * d[25] - 2 * d[4] * d[12] * d[15] * d[17] * d[25] - 2 * d[3] * d[13] * d[15] * d[17] * d[25] - 4 * d[1] * d[10] * d[16] * d[17] * d[25] - 4 * d[4] * d[13] * d[16] * d[17] * d[25] + 2 * d[2] * std::pow(d[9], 2) * d[11] * d[26] + 2 * d[2] * std::pow(d[10], 2) * d[11] * d[26] + 2 * d[0] * d[9] * std::pow(d[11], 2) * d[26] + 2 * d[1] * d[10] * std::pow(d[11], 2) * d[26] + 2 * d[5] * d[9] * d[11] * d[12] * d[26] + 2 * d[5] * d[10] * d[11] * d[13] * d[26] + 2 * d[3] * d[9] * d[11] * d[14] * d[26] + 2 * d[4] * d[10] * d[11] * d[14] * d[26] + 2 * d[2] * d[9] * d[12] * d[14] * d[26] + 2 * d[0] * d[11] * d[12] * d[14] * d[26] + 2 * d[5] * std::pow(d[12], 2) * d[14] * d[26] + 2 * d[2] * d[10] * d[13] * d[14] * d[26] + 2 * d[1] * d[11] * d[13] * d[14] * d[26] + 2 * d[5] * std::pow(d[13], 2) * d[14] * d[26] + 2 * d[3] * d[12] * std::pow(d[14], 2) * d[26] + 2 * d[4] * d[13] * std::pow(d[14], 2) * d[26] - 2 * d[6] * std::pow(d[9], 2) * d[15] * d[26] - 2 * d[7] * d[9] * d[10] * d[15] * d[26] - 2 * d[6] * std::pow(d[12], 2) * d[15] * d[26] - 2 * d[7] * d[12] * d[13] * d[15] * d[26] - 2 * d[0] * d[9] * std::pow(d[15], 2) * d[26] - 2 * d[3] * d[12] * std::pow(d[15], 2) * d[26] - 2 * d[6] * d[9] * d[10] * d[16] * d[26] - 2 * d[7] * std::pow(d[10], 2) * d[16] * d[26] - 2 * d[6] * d[12] * d[13] * d[16] * d[26] - 2 * d[7] * std::pow(d[13], 2) * d[16] * d[26] - 2 * d[1] * d[9] * d[15] * d[16] * d[26] - 2 * d[0] * d[10] * d[15] * d[16] * d[26] - 2 * d[4] * d[12] * d[15] * d[16] * d[26] - 2 * d[3] * d[13] * d[15] * d[16] * d[26] - 2 * d[1] * d[10] * std::pow(d[16], 2) * d[26] - 2 * d[4] * d[13] * std::pow(d[16], 2) * d[26];
				coeffs[20] = -std::pow(d[11], 3) * d[15] * d[18] - d[11] * std::pow(d[14], 2) * d[15] * d[18] + d[11] * std::pow(d[15], 3) * d[18] + d[11] * d[15] * std::pow(d[16], 2) * d[18] + 2 * d[9] * std::pow(d[11], 2) * d[17] * d[18] + 2 * d[11] * d[12] * d[14] * d[17] * d[18] - 2 * d[9] * std::pow(d[15], 2) * d[17] * d[18] - 2 * d[10] * d[15] * d[16] * d[17] * d[18] - std::pow(d[11], 3) * d[16] * d[19] - d[11] * std::pow(d[14], 2) * d[16] * d[19] + d[11] * std::pow(d[15], 2) * d[16] * d[19] + d[11] * std::pow(d[16], 3) * d[19] + 2 * d[10] * std::pow(d[11], 2) * d[17] * d[19] + 2 * d[11] * d[13] * d[14] * d[17] * d[19] - 2 * d[9] * d[15] * d[16] * d[17] * d[19] - 2 * d[10] * std::pow(d[16], 2) * d[17] * d[19] - 3 * d[9] * std::pow(d[11], 2) * d[15] * d[20] - 2 * d[11] * d[12] * d[14] * d[15] * d[20] - d[9] * std::pow(d[14], 2) * d[15] * d[20] + d[9] * std::pow(d[15], 3) * d[20] - 3 * d[10] * std::pow(d[11], 2) * d[16] * d[20] - 2 * d[11] * d[13] * d[14] * d[16] * d[20] - d[10] * std::pow(d[14], 2) * d[16] * d[20] + d[10] * std::pow(d[15], 2) * d[16] * d[20] + d[9] * d[15] * std::pow(d[16], 2) * d[20] + d[10] * std::pow(d[16], 3) * d[20] + 2 * std::pow(d[9], 2) * d[11] * d[17] * d[20] + 2 * std::pow(d[10], 2) * d[11] * d[17] * d[20] + 2 * d[9] * d[12] * d[14] * d[17] * d[20] + 2 * d[10] * d[13] * d[14] * d[17] * d[20] - std::pow(d[11], 2) * d[14] * d[15] * d[21] - std::pow(d[14], 3) * d[15] * d[21] + d[14] * std::pow(d[15], 3) * d[21] + d[14] * d[15] * std::pow(d[16], 2) * d[21] + 2 * d[9] * d[11] * d[14] * d[17] * d[21] + 2 * d[12] * std::pow(d[14], 2) * d[17] * d[21] - 2 * d[12] * std::pow(d[15], 2) * d[17] * d[21] - 2 * d[13] * d[15] * d[16] * d[17] * d[21] - std::pow(d[11], 2) * d[14] * d[16] * d[22] - std::pow(d[14], 3) * d[16] * d[22] + d[14] * std::pow(d[15], 2) * d[16] * d[22] + d[14] * std::pow(d[16], 3) * d[22] + 2 * d[10] * d[11] * d[14] * d[17] * d[22] + 2 * d[13] * std::pow(d[14], 2) * d[17] * d[22] - 2 * d[12] * d[15] * d[16] * d[17] * d[22] - 2 * d[13] * std::pow(d[16], 2) * d[17] * d[22] - std::pow(d[11], 2) * d[12] * d[15] * d[23] - 2 * d[9] * d[11] * d[14] * d[15] * d[23] - 3 * d[12] * std::pow(d[14], 2) * d[15] * d[23] + d[12] * std::pow(d[15], 3) * d[23] - std::pow(d[11], 2) * d[13] * d[16] * d[23] - 2 * d[10] * d[11] * d[14] * d[16] * d[23] - 3 * d[13] * std::pow(d[14], 2) * d[16] * d[23] + d[13] * std::pow(d[15], 2) * d[16] * d[23] + d[12] * d[15] * std::pow(d[16], 2) * d[23] + d[13] * std::pow(d[16], 3) * d[23] + 2 * d[9] * d[11] * d[12] * d[17] * d[23] + 2 * d[10] * d[11] * d[13] * d[17] * d[23] + 2 * std::pow(d[12], 2) * d[14] * d[17] * d[23] + 2 * std::pow(d[13], 2) * d[14] * d[17] * d[23] - d[9] * std::pow(d[11], 3) * d[24] - std::pow(d[11], 2) * d[12] * d[14] * d[24] - d[9] * d[11] * std::pow(d[14], 2) * d[24] - d[12] * std::pow(d[14], 3) * d[24] + 3 * d[9] * d[11] * std::pow(d[15], 2) * d[24] + 3 * d[12] * d[14] * std::pow(d[15], 2) * d[24] + 2 * d[10] * d[11] * d[15] * d[16] * d[24] + 2 * d[13] * d[14] * d[15] * d[16] * d[24] + d[9] * d[11] * std::pow(d[16], 2) * d[24] + d[12] * d[14] * std::pow(d[16], 2) * d[24] - 2 * std::pow(d[9], 2) * d[15] * d[17] * d[24] - 2 * std::pow(d[12], 2) * d[15] * d[17] * d[24] - 2 * d[9] * d[10] * d[16] * d[17] * d[24] - 2 * d[12] * d[13] * d[16] * d[17] * d[24] - d[10] * std::pow(d[11], 3) * d[25] - std::pow(d[11], 2) * d[13] * d[14] * d[25] - d[10] * d[11] * std::pow(d[14], 2) * d[25] - d[13] * std::pow(d[14], 3) * d[25] + d[10] * d[11] * std::pow(d[15], 2) * d[25] + d[13] * d[14] * std::pow(d[15], 2) * d[25] + 2 * d[9] * d[11] * d[15] * d[16] * d[25] + 2 * d[12] * d[14] * d[15] * d[16] * d[25] + 3 * d[10] * d[11] * std::pow(d[16], 2) * d[25] + 3 * d[13] * d[14] * std::pow(d[16], 2) * d[25] - 2 * d[9] * d[10] * d[15] * d[17] * d[25] - 2 * d[12] * d[13] * d[15] * d[17] * d[25] - 2 * std::pow(d[10], 2) * d[16] * d[17] * d[25] - 2 * std::pow(d[13], 2) * d[16] * d[17] * d[25] + std::pow(d[9], 2) * std::pow(d[11], 2) * d[26] + std::pow(d[10], 2) * std::pow(d[11], 2) * d[26] + 2 * d[9] * d[11] * d[12] * d[14] * d[26] + 2 * d[10] * d[11] * d[13] * d[14] * d[26] + std::pow(d[12], 2) * std::pow(d[14], 2) * d[26] + std::pow(d[13], 2) * std::pow(d[14], 2) * d[26] - std::pow(d[9], 2) * std::pow(d[15], 2) * d[26] - std::pow(d[12], 2) * std::pow(d[15], 2) * d[26] - 2 * d[9] * d[10] * d[15] * d[16] * d[26] - 2 * d[12] * d[13] * d[15] * d[16] * d[26] - std::pow(d[10], 2) * std::pow(d[16], 2) * d[26] - std::pow(d[13], 2) * std::pow(d[16], 2) * d[26];
				coeffs[21] = std::pow(d[2], 2) * d[8] * std::pow(d[18], 2) - std::pow(d[6], 2) * d[8] * std::pow(d[18], 2) - 2 * d[6] * d[7] * d[8] * d[18] * d[19] + std::pow(d[2], 2) * d[8] * std::pow(d[19], 2) - std::pow(d[7], 2) * d[8] * std::pow(d[19], 2) - 3 * std::pow(d[2], 2) * d[6] * d[18] * d[20] - std::pow(d[5], 2) * d[6] * d[18] * d[20] + std::pow(d[6], 3) * d[18] * d[20] + d[6] * std::pow(d[7], 2) * d[18] * d[20] + 4 * d[0] * d[2] * d[8] * d[18] * d[20] + 2 * d[3] * d[5] * d[8] * d[18] * d[20] - 3 * std::pow(d[2], 2) * d[7] * d[19] * d[20] - std::pow(d[5], 2) * d[7] * d[19] * d[20] + std::pow(d[6], 2) * d[7] * d[19] * d[20] + std::pow(d[7], 3) * d[19] * d[20] + 4 * d[1] * d[2] * d[8] * d[19] * d[20] + 2 * d[4] * d[5] * d[8] * d[19] * d[20] - 3 * d[0] * d[2] * d[6] * std::pow(d[20], 2) - d[3] * d[5] * d[6] * std::pow(d[20], 2) - 3 * d[1] * d[2] * d[7] * std::pow(d[20], 2) - d[4] * d[5] * d[7] * std::pow(d[20], 2) + std::pow(d[0], 2) * d[8] * std::pow(d[20], 2) + std::pow(d[1], 2) * d[8] * std::pow(d[20], 2) + 2 * d[2] * d[5] * d[8] * d[18] * d[21] - 2 * d[2] * d[5] * d[6] * d[20] * d[21] + 2 * d[0] * d[5] * d[8] * d[20] * d[21] + std::pow(d[5], 2) * d[8] * std::pow(d[21], 2) - std::pow(d[6], 2) * d[8] * std::pow(d[21], 2) + 2 * d[2] * d[5] * d[8] * d[19] * d[22] - 2 * d[2] * d[5] * d[7] * d[20] * d[22] + 2 * d[1] * d[5] * d[8] * d[20] * d[22] - 2 * d[6] * d[7] * d[8] * d[21] * d[22] + std::pow(d[5], 2) * d[8] * std::pow(d[22], 2) - std::pow(d[7], 2) * d[8] * std::pow(d[22], 2) - 2 * d[2] * d[5] * d[6] * d[18] * d[23] + 2 * d[2] * d[3] * d[8] * d[18] * d[23] - 2 * d[2] * d[5] * d[7] * d[19] * d[23] + 2 * d[2] * d[4] * d[8] * d[19] * d[23] - 2 * d[2] * d[3] * d[6] * d[20] * d[23] - 2 * d[0] * d[5] * d[6] * d[20] * d[23] - 2 * d[2] * d[4] * d[7] * d[20] * d[23] - 2 * d[1] * d[5] * d[7] * d[20] * d[23] + 2 * d[0] * d[3] * d[8] * d[20] * d[23] + 2 * d[1] * d[4] * d[8] * d[20] * d[23] - std::pow(d[2], 2) * d[6] * d[21] * d[23] - 3 * std::pow(d[5], 2) * d[6] * d[21] * d[23] + std::pow(d[6], 3) * d[21] * d[23] + d[6] * std::pow(d[7], 2) * d[21] * d[23] + 2 * d[0] * d[2] * d[8] * d[21] * d[23] + 4 * d[3] * d[5] * d[8] * d[21] * d[23] - std::pow(d[2], 2) * d[7] * d[22] * d[23] - 3 * std::pow(d[5], 2) * d[7] * d[22] * d[23] + std::pow(d[6], 2) * d[7] * d[22] * d[23] + std::pow(d[7], 3) * d[22] * d[23] + 2 * d[1] * d[2] * d[8] * d[22] * d[23] + 4 * d[4] * d[5] * d[8] * d[22] * d[23] - d[0] * d[2] * d[6] * std::pow(d[23], 2) - 3 * d[3] * d[5] * d[6] * std::pow(d[23], 2) - d[1] * d[2] * d[7] * std::pow(d[23], 2) - 3 * d[4] * d[5] * d[7] * std::pow(d[23], 2) + std::pow(d[3], 2) * d[8] * std::pow(d[23], 2) + std::pow(d[4], 2) * d[8] * std::pow(d[23], 2) - std::pow(d[2], 3) * d[18] * d[24] - d[2] * std::pow(d[5], 2) * d[18] * d[24] + 3 * d[2] * std::pow(d[6], 2) * d[18] * d[24] + d[2] * std::pow(d[7], 2) * d[18] * d[24] - 4 * d[0] * d[6] * d[8] * d[18] * d[24] - 2 * d[1] * d[7] * d[8] * d[18] * d[24] + 2 * d[2] * d[6] * d[7] * d[19] * d[24] - 2 * d[0] * d[7] * d[8] * d[19] * d[24] - 3 * d[0] * std::pow(d[2], 2) * d[20] * d[24] - 2 * d[2] * d[3] * d[5] * d[20] * d[24] - d[0] * std::pow(d[5], 2) * d[20] * d[24] + 3 * d[0] * std::pow(d[6], 2) * d[20] * d[24] + 2 * d[1] * d[6] * d[7] * d[20] * d[24] + d[0] * std::pow(d[7], 2) * d[20] * d[24] - std::pow(d[2], 2) * d[5] * d[21] * d[24] - std::pow(d[5], 3) * d[21] * d[24] + 3 * d[5] * std::pow(d[6], 2) * d[21] * d[24] + d[5] * std::pow(d[7], 2) * d[21] * d[24] - 4 * d[3] * d[6] * d[8] * d[21] * d[24] - 2 * d[4] * d[7] * d[8] * d[21] * d[24] + 2 * d[5] * d[6] * d[7] * d[22] * d[24] - 2 * d[3] * d[7] * d[8] * d[22] * d[24] - std::pow(d[2], 2) * d[3] * d[23] * d[24] - 2 * d[0] * d[2] * d[5] * d[23] * d[24] - 3 * d[3] * std::pow(d[5], 2) * d[23] * d[24] + 3 * d[3] * std::pow(d[6], 2) * d[23] * d[24] + 2 * d[4] * d[6] * d[7] * d[23] * d[24] + d[3] * std::pow(d[7], 2) * d[23] * d[24] + 3 * d[0] * d[2] * d[6] * std::pow(d[24], 2) + 3 * d[3] * d[5] * d[6] * std::pow(d[24], 2) + d[1] * d[2] * d[7] * std::pow(d[24], 2) + d[4] * d[5] * d[7] * std::pow(d[24], 2) - std::pow(d[0], 2) * d[8] * std::pow(d[24], 2) - std::pow(d[3], 2) * d[8] * std::pow(d[24], 2) + 2 * d[2] * d[6] * d[7] * d[18] * d[25] - 2 * d[1] * d[6] * d[8] * d[18] * d[25] - std::pow(d[2], 3) * d[19] * d[25] - d[2] * std::pow(d[5], 2) * d[19] * d[25] + d[2] * std::pow(d[6], 2) * d[19] * d[25] + 3 * d[2] * std::pow(d[7], 2) * d[19] * d[25] - 2 * d[0] * d[6] * d[8] * d[19] * d[25] - 4 * d[1] * d[7] * d[8] * d[19] * d[25] - 3 * d[1] * std::pow(d[2], 2) * d[20] * d[25] - 2 * d[2] * d[4] * d[5] * d[20] * d[25] - d[1] * std::pow(d[5], 2) * d[20] * d[25] + d[1] * std::pow(d[6], 2) * d[20] * d[25] + 2 * d[0] * d[6] * d[7] * d[20] * d[25] + 3 * d[1] * std::pow(d[7], 2) * d[20] * d[25] + 2 * d[5] * d[6] * d[7] * d[21] * d[25] - 2 * d[4] * d[6] * d[8] * d[21] * d[25] - std::pow(d[2], 2) * d[5] * d[22] * d[25] - std::pow(d[5], 3) * d[22] * d[25] + d[5] * std::pow(d[6], 2) * d[22] * d[25] + 3 * d[5] * std::pow(d[7], 2) * d[22] * d[25] - 2 * d[3] * d[6] * d[8] * d[22] * d[25] - 4 * d[4] * d[7] * d[8] * d[22] * d[25] - std::pow(d[2], 2) * d[4] * d[23] * d[25] - 2 * d[1] * d[2] * d[5] * d[23] * d[25] - 3 * d[4] * std::pow(d[5], 2) * d[23] * d[25] + d[4] * std::pow(d[6], 2) * d[23] * d[25] + 2 * d[3] * d[6] * d[7] * d[23] * d[25] + 3 * d[4] * std::pow(d[7], 2) * d[23] * d[25] + 2 * d[1] * d[2] * d[6] * d[24] * d[25] + 2 * d[4] * d[5] * d[6] * d[24] * d[25] + 2 * d[0] * d[2] * d[7] * d[24] * d[25] + 2 * d[3] * d[5] * d[7] * d[24] * d[25] - 2 * d[0] * d[1] * d[8] * d[24] * d[25] - 2 * d[3] * d[4] * d[8] * d[24] * d[25] + d[0] * d[2] * d[6] * std::pow(d[25], 2) + d[3] * d[5] * d[6] * std::pow(d[25], 2) + 3 * d[1] * d[2] * d[7] * std::pow(d[25], 2) + 3 * d[4] * d[5] * d[7] * std::pow(d[25], 2) - std::pow(d[1], 2) * d[8] * std::pow(d[25], 2) - std::pow(d[4], 2) * d[8] * std::pow(d[25], 2) + 2 * d[0] * std::pow(d[2], 2) * d[18] * d[26] + 2 * d[2] * d[3] * d[5] * d[18] * d[26] - 2 * d[0] * std::pow(d[6], 2) * d[18] * d[26] - 2 * d[1] * d[6] * d[7] * d[18] * d[26] + 2 * d[1] * std::pow(d[2], 2) * d[19] * d[26] + 2 * d[2] * d[4] * d[5] * d[19] * d[26] - 2 * d[0] * d[6] * d[7] * d[19] * d[26] - 2 * d[1] * std::pow(d[7], 2) * d[19] * d[26] + 2 * std::pow(d[0], 2) * d[2] * d[20] * d[26] + 2 * std::pow(d[1], 2) * d[2] * d[20] * d[26] + 2 * d[0] * d[3] * d[5] * d[20] * d[26] + 2 * d[1] * d[4] * d[5] * d[20] * d[26] + 2 * d[0] * d[2] * d[5] * d[21] * d[26] + 2 * d[3] * std::pow(d[5], 2) * d[21] * d[26] - 2 * d[3] * std::pow(d[6], 2) * d[21] * d[26] - 2 * d[4] * d[6] * d[7] * d[21] * d[26] + 2 * d[1] * d[2] * d[5] * d[22] * d[26] + 2 * d[4] * std::pow(d[5], 2) * d[22] * d[26] - 2 * d[3] * d[6] * d[7] * d[22] * d[26] - 2 * d[4] * std::pow(d[7], 2) * d[22] * d[26] + 2 * d[0] * d[2] * d[3] * d[23] * d[26] + 2 * d[1] * d[2] * d[4] * d[23] * d[26] + 2 * std::pow(d[3], 2) * d[5] * d[23] * d[26] + 2 * std::pow(d[4], 2) * d[5] * d[23] * d[26] - 2 * std::pow(d[0], 2) * d[6] * d[24] * d[26] - 2 * std::pow(d[3], 2) * d[6] * d[24] * d[26] - 2 * d[0] * d[1] * d[7] * d[24] * d[26] - 2 * d[3] * d[4] * d[7] * d[24] * d[26] - 2 * d[0] * d[1] * d[6] * d[25] * d[26] - 2 * d[3] * d[4] * d[6] * d[25] * d[26] - 2 * std::pow(d[1], 2) * d[7] * d[25] * d[26] - 2 * std::pow(d[4], 2) * d[7] * d[25] * d[26];
				coeffs[22] = 2 * d[2] * d[8] * d[11] * std::pow(d[18], 2) - 2 * d[6] * d[8] * d[15] * std::pow(d[18], 2) + std::pow(d[2], 2) * d[17] * std::pow(d[18], 2) - std::pow(d[6], 2) * d[17] * std::pow(d[18], 2) - 2 * d[7] * d[8] * d[15] * d[18] * d[19] - 2 * d[6] * d[8] * d[16] * d[18] * d[19] - 2 * d[6] * d[7] * d[17] * d[18] * d[19] + 2 * d[2] * d[8] * d[11] * std::pow(d[19], 2) - 2 * d[7] * d[8] * d[16] * std::pow(d[19], 2) + std::pow(d[2], 2) * d[17] * std::pow(d[19], 2) - std::pow(d[7], 2) * d[17] * std::pow(d[19], 2) + 4 * d[2] * d[8] * d[9] * d[18] * d[20] - 6 * d[2] * d[6] * d[11] * d[18] * d[20] + 4 * d[0] * d[8] * d[11] * d[18] * d[20] + 2 * d[5] * d[8] * d[12] * d[18] * d[20] - 2 * d[5] * d[6] * d[14] * d[18] * d[20] + 2 * d[3] * d[8] * d[14] * d[18] * d[20] - 3 * std::pow(d[2], 2) * d[15] * d[18] * d[20] - std::pow(d[5], 2) * d[15] * d[18] * d[20] + 3 * std::pow(d[6], 2) * d[15] * d[18] * d[20] + std::pow(d[7], 2) * d[15] * d[18] * d[20] + 2 * d[6] * d[7] * d[16] * d[18] * d[20] + 4 * d[0] * d[2] * d[17] * d[18] * d[20] + 2 * d[3] * d[5] * d[17] * d[18] * d[20] + 4 * d[2] * d[8] * d[10] * d[19] * d[20] - 6 * d[2] * d[7] * d[11] * d[19] * d[20] + 4 * d[1] * d[8] * d[11] * d[19] * d[20] + 2 * d[5] * d[8] * d[13] * d[19] * d[20] - 2 * d[5] * d[7] * d[14] * d[19] * d[20] + 2 * d[4] * d[8] * d[14] * d[19] * d[20] + 2 * d[6] * d[7] * d[15] * d[19] * d[20] - 3 * std::pow(d[2], 2) * d[16] * d[19] * d[20] - std::pow(d[5], 2) * d[16] * d[19] * d[20] + std::pow(d[6], 2) * d[16] * d[19] * d[20] + 3 * std::pow(d[7], 2) * d[16] * d[19] * d[20] + 4 * d[1] * d[2] * d[17] * d[19] * d[20] + 2 * d[4] * d[5] * d[17] * d[19] * d[20] - 3 * d[2] * d[6] * d[9] * std::pow(d[20], 2) + 2 * d[0] * d[8] * d[9] * std::pow(d[20], 2) - 3 * d[2] * d[7] * d[10] * std::pow(d[20], 2) + 2 * d[1] * d[8] * d[10] * std::pow(d[20], 2) - 3 * d[0] * d[6] * d[11] * std::pow(d[20], 2) - 3 * d[1] * d[7] * d[11] * std::pow(d[20], 2) - d[5] * d[6] * d[12] * std::pow(d[20], 2) - d[5] * d[7] * d[13] * std::pow(d[20], 2) - d[3] * d[6] * d[14] * std::pow(d[20], 2) - d[4] * d[7] * d[14] * std::pow(d[20], 2) - 3 * d[0] * d[2] * d[15] * std::pow(d[20], 2) - d[3] * d[5] * d[15] * std::pow(d[20], 2) - 3 * d[1] * d[2] * d[16] * std::pow(d[20], 2) - d[4] * d[5] * d[16] * std::pow(d[20], 2) + std::pow(d[0], 2) * d[17] * std::pow(d[20], 2) + std::pow(d[1], 2) * d[17] * std::pow(d[20], 2) + 2 * d[5] * d[8] * d[11] * d[18] * d[21] + 2 * d[2] * d[8] * d[14] * d[18] * d[21] + 2 * d[2] * d[5] * d[17] * d[18] * d[21] + 2 * d[5] * d[8] * d[9] * d[20] * d[21] - 2 * d[5] * d[6] * d[11] * d[20] * d[21] - 2 * d[2] * d[6] * d[14] * d[20] * d[21] + 2 * d[0] * d[8] * d[14] * d[20] * d[21] - 2 * d[2] * d[5] * d[15] * d[20] * d[21] + 2 * d[0] * d[5] * d[17] * d[20] * d[21] + 2 * d[5] * d[8] * d[14] * std::pow(d[21], 2) - 2 * d[6] * d[8] * d[15] * std::pow(d[21], 2) + std::pow(d[5], 2) * d[17] * std::pow(d[21], 2) - std::pow(d[6], 2) * d[17] * std::pow(d[21], 2) + 2 * d[5] * d[8] * d[11] * d[19] * d[22] + 2 * d[2] * d[8] * d[14] * d[19] * d[22] + 2 * d[2] * d[5] * d[17] * d[19] * d[22] + 2 * d[5] * d[8] * d[10] * d[20] * d[22] - 2 * d[5] * d[7] * d[11] * d[20] * d[22] - 2 * d[2] * d[7] * d[14] * d[20] * d[22] + 2 * d[1] * d[8] * d[14] * d[20] * d[22] - 2 * d[2] * d[5] * d[16] * d[20] * d[22] + 2 * d[1] * d[5] * d[17] * d[20] * d[22] - 2 * d[7] * d[8] * d[15] * d[21] * d[22] - 2 * d[6] * d[8] * d[16] * d[21] * d[22] - 2 * d[6] * d[7] * d[17] * d[21] * d[22] + 2 * d[5] * d[8] * d[14] * std::pow(d[22], 2) - 2 * d[7] * d[8] * d[16] * std::pow(d[22], 2) + std::pow(d[5], 2) * d[17] * std::pow(d[22], 2) - std::pow(d[7], 2) * d[17] * std::pow(d[22], 2) - 2 * d[5] * d[6] * d[11] * d[18] * d[23] + 2 * d[3] * d[8] * d[11] * d[18] * d[23] + 2 * d[2] * d[8] * d[12] * d[18] * d[23] - 2 * d[2] * d[6] * d[14] * d[18] * d[23] - 2 * d[2] * d[5] * d[15] * d[18] * d[23] + 2 * d[2] * d[3] * d[17] * d[18] * d[23] - 2 * d[5] * d[7] * d[11] * d[19] * d[23] + 2 * d[4] * d[8] * d[11] * d[19] * d[23] + 2 * d[2] * d[8] * d[13] * d[19] * d[23] - 2 * d[2] * d[7] * d[14] * d[19] * d[23] - 2 * d[2] * d[5] * d[16] * d[19] * d[23] + 2 * d[2] * d[4] * d[17] * d[19] * d[23] - 2 * d[5] * d[6] * d[9] * d[20] * d[23] + 2 * d[3] * d[8] * d[9] * d[20] * d[23] - 2 * d[5] * d[7] * d[10] * d[20] * d[23] + 2 * d[4] * d[8] * d[10] * d[20] * d[23] - 2 * d[3] * d[6] * d[11] * d[20] * d[23] - 2 * d[4] * d[7] * d[11] * d[20] * d[23] - 2 * d[2] * d[6] * d[12] * d[20] * d[23] + 2 * d[0] * d[8] * d[12] * d[20] * d[23] - 2 * d[2] * d[7] * d[13] * d[20] * d[23] + 2 * d[1] * d[8] * d[13] * d[20] * d[23] - 2 * d[0] * d[6] * d[14] * d[20] * d[23] - 2 * d[1] * d[7] * d[14] * d[20] * d[23] - 2 * d[2] * d[3] * d[15] * d[20] * d[23] - 2 * d[0] * d[5] * d[15] * d[20] * d[23] - 2 * d[2] * d[4] * d[16] * d[20] * d[23] - 2 * d[1] * d[5] * d[16] * d[20] * d[23] + 2 * d[0] * d[3] * d[17] * d[20] * d[23] + 2 * d[1] * d[4] * d[17] * d[20] * d[23] + 2 * d[2] * d[8] * d[9] * d[21] * d[23] - 2 * d[2] * d[6] * d[11] * d[21] * d[23] + 2 * d[0] * d[8] * d[11] * d[21] * d[23] + 4 * d[5] * d[8] * d[12] * d[21] * d[23] - 6 * d[5] * d[6] * d[14] * d[21] * d[23] + 4 * d[3] * d[8] * d[14] * d[21] * d[23] - std::pow(d[2], 2) * d[15] * d[21] * d[23] - 3 * std::pow(d[5], 2) * d[15] * d[21] * d[23] + 3 * std::pow(d[6], 2) * d[15] * d[21] * d[23] + std::pow(d[7], 2) * d[15] * d[21] * d[23] + 2 * d[6] * d[7] * d[16] * d[21] * d[23] + 2 * d[0] * d[2] * d[17] * d[21] * d[23] + 4 * d[3] * d[5] * d[17] * d[21] * d[23] + 2 * d[2] * d[8] * d[10] * d[22] * d[23] - 2 * d[2] * d[7] * d[11] * d[22] * d[23] + 2 * d[1] * d[8] * d[11] * d[22] * d[23] + 4 * d[5] * d[8] * d[13] * d[22] * d[23] - 6 * d[5] * d[7] * d[14] * d[22] * d[23] + 4 * d[4] * d[8] * d[14] * d[22] * d[23] + 2 * d[6] * d[7] * d[15] * d[22] * d[23] - std::pow(d[2], 2) * d[16] * d[22] * d[23] - 3 * std::pow(d[5], 2) * d[16] * d[22] * d[23] + std::pow(d[6], 2) * d[16] * d[22] * d[23] + 3 * std::pow(d[7], 2) * d[16] * d[22] * d[23] + 2 * d[1] * d[2] * d[17] * d[22] * d[23] + 4 * d[4] * d[5] * d[17] * d[22] * d[23] - d[2] * d[6] * d[9] * std::pow(d[23], 2) - d[2] * d[7] * d[10] * std::pow(d[23], 2) - d[0] * d[6] * d[11] * std::pow(d[23], 2) - d[1] * d[7] * d[11] * std::pow(d[23], 2) - 3 * d[5] * d[6] * d[12] * std::pow(d[23], 2) + 2 * d[3] * d[8] * d[12] * std::pow(d[23], 2) - 3 * d[5] * d[7] * d[13] * std::pow(d[23], 2) + 2 * d[4] * d[8] * d[13] * std::pow(d[23], 2) - 3 * d[3] * d[6] * d[14] * std::pow(d[23], 2) - 3 * d[4] * d[7] * d[14] * std::pow(d[23], 2) - d[0] * d[2] * d[15] * std::pow(d[23], 2) - 3 * d[3] * d[5] * d[15] * std::pow(d[23], 2) - d[1] * d[2] * d[16] * std::pow(d[23], 2) - 3 * d[4] * d[5] * d[16] * std::pow(d[23], 2) + std::pow(d[3], 2) * d[17] * std::pow(d[23], 2) + std::pow(d[4], 2) * d[17] * std::pow(d[23], 2) - 4 * d[6] * d[8] * d[9] * d[18] * d[24] - 2 * d[7] * d[8] * d[10] * d[18] * d[24] - 3 * std::pow(d[2], 2) * d[11] * d[18] * d[24] - std::pow(d[5], 2) * d[11] * d[18] * d[24] + 3 * std::pow(d[6], 2) * d[11] * d[18] * d[24] + std::pow(d[7], 2) * d[11] * d[18] * d[24] - 2 * d[2] * d[5] * d[14] * d[18] * d[24] + 6 * d[2] * d[6] * d[15] * d[18] * d[24] - 4 * d[0] * d[8] * d[15] * d[18] * d[24] + 2 * d[2] * d[7] * d[16] * d[18] * d[24] - 2 * d[1] * d[8] * d[16] * d[18] * d[24] - 4 * d[0] * d[6] * d[17] * d[18] * d[24] - 2 * d[1] * d[7] * d[17] * d[18] * d[24] - 2 * d[7] * d[8] * d[9] * d[19] * d[24] + 2 * d[6] * d[7] * d[11] * d[19] * d[24] + 2 * d[2] * d[7] * d[15] * d[19] * d[24] + 2 * d[2] * d[6] * d[16] * d[19] * d[24] - 2 * d[0] * d[8] * d[16] * d[19] * d[24] - 2 * d[0] * d[7] * d[17] * d[19] * d[24] - 3 * std::pow(d[2], 2) * d[9] * d[20] * d[24] - std::pow(d[5], 2) * d[9] * d[20] * d[24] + 3 * std::pow(d[6], 2) * d[9] * d[20] * d[24] + std::pow(d[7], 2) * d[9] * d[20] * d[24] + 2 * d[6] * d[7] * d[10] * d[20] * d[24] - 6 * d[0] * d[2] * d[11] * d[20] * d[24] - 2 * d[3] * d[5] * d[11] * d[20] * d[24] - 2 * d[2] * d[5] * d[12] * d[20] * d[24] - 2 * d[2] * d[3] * d[14] * d[20] * d[24] - 2 * d[0] * d[5] * d[14] * d[20] * d[24] + 6 * d[0] * d[6] * d[15] * d[20] * d[24] + 2 * d[1] * d[7] * d[15] * d[20] * d[24] + 2 * d[1] * d[6] * d[16] * d[20] * d[24] + 2 * d[0] * d[7] * d[16] * d[20] * d[24] - 2 * d[2] * d[5] * d[11] * d[21] * d[24] - 4 * d[6] * d[8] * d[12] * d[21] * d[24] - 2 * d[7] * d[8] * d[13] * d[21] * d[24] - std::pow(d[2], 2) * d[14] * d[21] * d[24] - 3 * std::pow(d[5], 2) * d[14] * d[21] * d[24] + 3 * std::pow(d[6], 2) * d[14] * d[21] * d[24] + std::pow(d[7], 2) * d[14] * d[21] * d[24] + 6 * d[5] * d[6] * d[15] * d[21] * d[24] - 4 * d[3] * d[8] * d[15] * d[21] * d[24] + 2 * d[5] * d[7] * d[16] * d[21] * d[24] - 2 * d[4] * d[8] * d[16] * d[21] * d[24] - 4 * d[3] * d[6] * d[17] * d[21] * d[24] - 2 * d[4] * d[7] * d[17] * d[21] * d[24] - 2 * d[7] * d[8] * d[12] * d[22] * d[24] + 2 * d[6] * d[7] * d[14] * d[22] * d[24] + 2 * d[5] * d[7] * d[15] * d[22] * d[24] + 2 * d[5] * d[6] * d[16] * d[22] * d[24] - 2 * d[3] * d[8] * d[16] * d[22] * d[24] - 2 * d[3] * d[7] * d[17] * d[22] * d[24] - 2 * d[2] * d[5] * d[9] * d[23] * d[24] - 2 * d[2] * d[3] * d[11] * d[23] * d[24] - 2 * d[0] * d[5] * d[11] * d[23] * d[24] - std::pow(d[2], 2) * d[12] * d[23] * d[24] - 3 * std::pow(d[5], 2) * d[12] * d[23] * d[24] + 3 * std::pow(d[6], 2) * d[12] * d[23] * d[24] + std::pow(d[7], 2) * d[12] * d[23] * d[24] + 2 * d[6] * d[7] * d[13] * d[23] * d[24] - 2 * d[0] * d[2] * d[14] * d[23] * d[24] - 6 * d[3] * d[5] * d[14] * d[23] * d[24] + 6 * d[3] * d[6] * d[15] * d[23] * d[24] + 2 * d[4] * d[7] * d[15] * d[23] * d[24] + 2 * d[4] * d[6] * d[16] * d[23] * d[24] + 2 * d[3] * d[7] * d[16] * d[23] * d[24] + 3 * d[2] * d[6] * d[9] * std::pow(d[24], 2) - 2 * d[0] * d[8] * d[9] * std::pow(d[24], 2) + d[2] * d[7] * d[10] * std::pow(d[24], 2) + 3 * d[0] * d[6] * d[11] * std::pow(d[24], 2) + d[1] * d[7] * d[11] * std::pow(d[24], 2) + 3 * d[5] * d[6] * d[12] * std::pow(d[24], 2) - 2 * d[3] * d[8] * d[12] * std::pow(d[24], 2) + d[5] * d[7] * d[13] * std::pow(d[24], 2) + 3 * d[3] * d[6] * d[14] * std::pow(d[24], 2) + d[4] * d[7] * d[14] * std::pow(d[24], 2) + 3 * d[0] * d[2] * d[15] * std::pow(d[24], 2) + 3 * d[3] * d[5] * d[15] * std::pow(d[24], 2) + d[1] * d[2] * d[16] * std::pow(d[24], 2) + d[4] * d[5] * d[16] * std::pow(d[24], 2) - std::pow(d[0], 2) * d[17] * std::pow(d[24], 2) - std::pow(d[3], 2) * d[17] * std::pow(d[24], 2) - 2 * d[6] * d[8] * d[10] * d[18] * d[25] + 2 * d[6] * d[7] * d[11] * d[18] * d[25] + 2 * d[2] * d[7] * d[15] * d[18] * d[25] - 2 * d[1] * d[8] * d[15] * d[18] * d[25] + 2 * d[2] * d[6] * d[16] * d[18] * d[25] - 2 * d[1] * d[6] * d[17] * d[18] * d[25] - 2 * d[6] * d[8] * d[9] * d[19] * d[25] - 4 * d[7] * d[8] * d[10] * d[19] * d[25] - 3 * std::pow(d[2], 2) * d[11] * d[19] * d[25] - std::pow(d[5], 2) * d[11] * d[19] * d[25] + std::pow(d[6], 2) * d[11] * d[19] * d[25] + 3 * std::pow(d[7], 2) * d[11] * d[19] * d[25] - 2 * d[2] * d[5] * d[14] * d[19] * d[25] + 2 * d[2] * d[6] * d[15] * d[19] * d[25] - 2 * d[0] * d[8] * d[15] * d[19] * d[25] + 6 * d[2] * d[7] * d[16] * d[19] * d[25] - 4 * d[1] * d[8] * d[16] * d[19] * d[25] - 2 * d[0] * d[6] * d[17] * d[19] * d[25] - 4 * d[1] * d[7] * d[17] * d[19] * d[25] + 2 * d[6] * d[7] * d[9] * d[20] * d[25] - 3 * std::pow(d[2], 2) * d[10] * d[20] * d[25] - std::pow(d[5], 2) * d[10] * d[20] * d[25] + std::pow(d[6], 2) * d[10] * d[20] * d[25] + 3 * std::pow(d[7], 2) * d[10] * d[20] * d[25] - 6 * d[1] * d[2] * d[11] * d[20] * d[25] - 2 * d[4] * d[5] * d[11] * d[20] * d[25] - 2 * d[2] * d[5] * d[13] * d[20] * d[25] - 2 * d[2] * d[4] * d[14] * d[20] * d[25] - 2 * d[1] * d[5] * d[14] * d[20] * d[25] + 2 * d[1] * d[6] * d[15] * d[20] * d[25] + 2 * d[0] * d[7] * d[15] * d[20] * d[25] + 2 * d[0] * d[6] * d[16] * d[20] * d[25] + 6 * d[1] * d[7] * d[16] * d[20] * d[25] - 2 * d[6] * d[8] * d[13] * d[21] * d[25] + 2 * d[6] * d[7] * d[14] * d[21] * d[25] + 2 * d[5] * d[7] * d[15] * d[21] * d[25] - 2 * d[4] * d[8] * d[15] * d[21] * d[25] + 2 * d[5] * d[6] * d[16] * d[21] * d[25] - 2 * d[4] * d[6] * d[17] * d[21] * d[25] - 2 * d[2] * d[5] * d[11] * d[22] * d[25] - 2 * d[6] * d[8] * d[12] * d[22] * d[25] - 4 * d[7] * d[8] * d[13] * d[22] * d[25] - std::pow(d[2], 2) * d[14] * d[22] * d[25] - 3 * std::pow(d[5], 2) * d[14] * d[22] * d[25] + std::pow(d[6], 2) * d[14] * d[22] * d[25] + 3 * std::pow(d[7], 2) * d[14] * d[22] * d[25] + 2 * d[5] * d[6] * d[15] * d[22] * d[25] - 2 * d[3] * d[8] * d[15] * d[22] * d[25] + 6 * d[5] * d[7] * d[16] * d[22] * d[25] - 4 * d[4] * d[8] * d[16] * d[22] * d[25] - 2 * d[3] * d[6] * d[17] * d[22] * d[25] - 4 * d[4] * d[7] * d[17] * d[22] * d[25] - 2 * d[2] * d[5] * d[10] * d[23] * d[25] - 2 * d[2] * d[4] * d[11] * d[23] * d[25] - 2 * d[1] * d[5] * d[11] * d[23] * d[25] + 2 * d[6] * d[7] * d[12] * d[23] * d[25] - std::pow(d[2], 2) * d[13] * d[23] * d[25] - 3 * std::pow(d[5], 2) * d[13] * d[23] * d[25] + std::pow(d[6], 2) * d[13] * d[23] * d[25] + 3 * std::pow(d[7], 2) * d[13] * d[23] * d[25] - 2 * d[1] * d[2] * d[14] * d[23] * d[25] - 6 * d[4] * d[5] * d[14] * d[23] * d[25] + 2 * d[4] * d[6] * d[15] * d[23] * d[25] + 2 * d[3] * d[7] * d[15] * d[23] * d[25] + 2 * d[3] * d[6] * d[16] * d[23] * d[25] + 6 * d[4] * d[7] * d[16] * d[23] * d[25] + 2 * d[2] * d[7] * d[9] * d[24] * d[25] - 2 * d[1] * d[8] * d[9] * d[24] * d[25] + 2 * d[2] * d[6] * d[10] * d[24] * d[25] - 2 * d[0] * d[8] * d[10] * d[24] * d[25] + 2 * d[1] * d[6] * d[11] * d[24] * d[25] + 2 * d[0] * d[7] * d[11] * d[24] * d[25] + 2 * d[5] * d[7] * d[12] * d[24] * d[25] - 2 * d[4] * d[8] * d[12] * d[24] * d[25] + 2 * d[5] * d[6] * d[13] * d[24] * d[25] - 2 * d[3] * d[8] * d[13] * d[24] * d[25] + 2 * d[4] * d[6] * d[14] * d[24] * d[25] + 2 * d[3] * d[7] * d[14] * d[24] * d[25] + 2 * d[1] * d[2] * d[15] * d[24] * d[25] + 2 * d[4] * d[5] * d[15] * d[24] * d[25] + 2 * d[0] * d[2] * d[16] * d[24] * d[25] + 2 * d[3] * d[5] * d[16] * d[24] * d[25] - 2 * d[0] * d[1] * d[17] * d[24] * d[25] - 2 * d[3] * d[4] * d[17] * d[24] * d[25] + d[2] * d[6] * d[9] * std::pow(d[25], 2) + 3 * d[2] * d[7] * d[10] * std::pow(d[25], 2) - 2 * d[1] * d[8] * d[10] * std::pow(d[25], 2) + d[0] * d[6] * d[11] * std::pow(d[25], 2) + 3 * d[1] * d[7] * d[11] * std::pow(d[25], 2) + d[5] * d[6] * d[12] * std::pow(d[25], 2) + 3 * d[5] * d[7] * d[13] * std::pow(d[25], 2) - 2 * d[4] * d[8] * d[13] * std::pow(d[25], 2) + d[3] * d[6] * d[14] * std::pow(d[25], 2) + 3 * d[4] * d[7] * d[14] * std::pow(d[25], 2) + d[0] * d[2] * d[15] * std::pow(d[25], 2) + d[3] * d[5] * d[15] * std::pow(d[25], 2) + 3 * d[1] * d[2] * d[16] * std::pow(d[25], 2) + 3 * d[4] * d[5] * d[16] * std::pow(d[25], 2) - std::pow(d[1], 2) * d[17] * std::pow(d[25], 2) - std::pow(d[4], 2) * d[17] * std::pow(d[25], 2) + 2 * std::pow(d[2], 2) * d[9] * d[18] * d[26] - 2 * std::pow(d[6], 2) * d[9] * d[18] * d[26] - 2 * d[6] * d[7] * d[10] * d[18] * d[26] + 4 * d[0] * d[2] * d[11] * d[18] * d[26] + 2 * d[3] * d[5] * d[11] * d[18] * d[26] + 2 * d[2] * d[5] * d[12] * d[18] * d[26] + 2 * d[2] * d[3] * d[14] * d[18] * d[26] - 4 * d[0] * d[6] * d[15] * d[18] * d[26] - 2 * d[1] * d[7] * d[15] * d[18] * d[26] - 2 * d[1] * d[6] * d[16] * d[18] * d[26] - 2 * d[6] * d[7] * d[9] * d[19] * d[26] + 2 * std::pow(d[2], 2) * d[10] * d[19] * d[26] - 2 * std::pow(d[7], 2) * d[10] * d[19] * d[26] + 4 * d[1] * d[2] * d[11] * d[19] * d[26] + 2 * d[4] * d[5] * d[11] * d[19] * d[26] + 2 * d[2] * d[5] * d[13] * d[19] * d[26] + 2 * d[2] * d[4] * d[14] * d[19] * d[26] - 2 * d[0] * d[7] * d[15] * d[19] * d[26] - 2 * d[0] * d[6] * d[16] * d[19] * d[26] - 4 * d[1] * d[7] * d[16] * d[19] * d[26] + 4 * d[0] * d[2] * d[9] * d[20] * d[26] + 2 * d[3] * d[5] * d[9] * d[20] * d[26] + 4 * d[1] * d[2] * d[10] * d[20] * d[26] + 2 * d[4] * d[5] * d[10] * d[20] * d[26] + 2 * std::pow(d[0], 2) * d[11] * d[20] * d[26] + 2 * std::pow(d[1], 2) * d[11] * d[20] * d[26] + 2 * d[0] * d[5] * d[12] * d[20] * d[26] + 2 * d[1] * d[5] * d[13] * d[20] * d[26] + 2 * d[0] * d[3] * d[14] * d[20] * d[26] + 2 * d[1] * d[4] * d[14] * d[20] * d[26] + 2 * d[2] * d[5] * d[9] * d[21] * d[26] + 2 * d[0] * d[5] * d[11] * d[21] * d[26] + 2 * std::pow(d[5], 2) * d[12] * d[21] * d[26] - 2 * std::pow(d[6], 2) * d[12] * d[21] * d[26] - 2 * d[6] * d[7] * d[13] * d[21] * d[26] + 2 * d[0] * d[2] * d[14] * d[21] * d[26] + 4 * d[3] * d[5] * d[14] * d[21] * d[26] - 4 * d[3] * d[6] * d[15] * d[21] * d[26] - 2 * d[4] * d[7] * d[15] * d[21] * d[26] - 2 * d[4] * d[6] * d[16] * d[21] * d[26] + 2 * d[2] * d[5] * d[10] * d[22] * d[26] + 2 * d[1] * d[5] * d[11] * d[22] * d[26] - 2 * d[6] * d[7] * d[12] * d[22] * d[26] + 2 * std::pow(d[5], 2) * d[13] * d[22] * d[26] - 2 * std::pow(d[7], 2) * d[13] * d[22] * d[26] + 2 * d[1] * d[2] * d[14] * d[22] * d[26] + 4 * d[4] * d[5] * d[14] * d[22] * d[26] - 2 * d[3] * d[7] * d[15] * d[22] * d[26] - 2 * d[3] * d[6] * d[16] * d[22] * d[26] - 4 * d[4] * d[7] * d[16] * d[22] * d[26] + 2 * d[2] * d[3] * d[9] * d[23] * d[26] + 2 * d[2] * d[4] * d[10] * d[23] * d[26] + 2 * d[0] * d[3] * d[11] * d[23] * d[26] + 2 * d[1] * d[4] * d[11] * d[23] * d[26] + 2 * d[0] * d[2] * d[12] * d[23] * d[26] + 4 * d[3] * d[5] * d[12] * d[23] * d[26] + 2 * d[1] * d[2] * d[13] * d[23] * d[26] + 4 * d[4] * d[5] * d[13] * d[23] * d[26] + 2 * std::pow(d[3], 2) * d[14] * d[23] * d[26] + 2 * std::pow(d[4], 2) * d[14] * d[23] * d[26] - 4 * d[0] * d[6] * d[9] * d[24] * d[26] - 2 * d[1] * d[7] * d[9] * d[24] * d[26] - 2 * d[0] * d[7] * d[10] * d[24] * d[26] - 4 * d[3] * d[6] * d[12] * d[24] * d[26] - 2 * d[4] * d[7] * d[12] * d[24] * d[26] - 2 * d[3] * d[7] * d[13] * d[24] * d[26] - 2 * std::pow(d[0], 2) * d[15] * d[24] * d[26] - 2 * std::pow(d[3], 2) * d[15] * d[24] * d[26] - 2 * d[0] * d[1] * d[16] * d[24] * d[26] - 2 * d[3] * d[4] * d[16] * d[24] * d[26] - 2 * d[1] * d[6] * d[9] * d[25] * d[26] - 2 * d[0] * d[6] * d[10] * d[25] * d[26] - 4 * d[1] * d[7] * d[10] * d[25] * d[26] - 2 * d[4] * d[6] * d[12] * d[25] * d[26] - 2 * d[3] * d[6] * d[13] * d[25] * d[26] - 4 * d[4] * d[7] * d[13] * d[25] * d[26] - 2 * d[0] * d[1] * d[15] * d[25] * d[26] - 2 * d[3] * d[4] * d[15] * d[25] * d[26] - 2 * std::pow(d[1], 2) * d[16] * d[25] * d[26] - 2 * std::pow(d[4], 2) * d[16] * d[25] * d[26];
				coeffs[23] = d[8] * std::pow(d[11], 2) * std::pow(d[18], 2) - d[8] * std::pow(d[15], 2) * std::pow(d[18], 2) + 2 * d[2] * d[11] * d[17] * std::pow(d[18], 2) - 2 * d[6] * d[15] * d[17] * std::pow(d[18], 2) - 2 * d[8] * d[15] * d[16] * d[18] * d[19] - 2 * d[7] * d[15] * d[17] * d[18] * d[19] - 2 * d[6] * d[16] * d[17] * d[18] * d[19] + d[8] * std::pow(d[11], 2) * std::pow(d[19], 2) - d[8] * std::pow(d[16], 2) * std::pow(d[19], 2) + 2 * d[2] * d[11] * d[17] * std::pow(d[19], 2) - 2 * d[7] * d[16] * d[17] * std::pow(d[19], 2) + 4 * d[8] * d[9] * d[11] * d[18] * d[20] - 3 * d[6] * std::pow(d[11], 2) * d[18] * d[20] + 2 * d[8] * d[12] * d[14] * d[18] * d[20] - d[6] * std::pow(d[14], 2) * d[18] * d[20] - 6 * d[2] * d[11] * d[15] * d[18] * d[20] - 2 * d[5] * d[14] * d[15] * d[18] * d[20] + 3 * d[6] * std::pow(d[15], 2) * d[18] * d[20] + 2 * d[7] * d[15] * d[16] * d[18] * d[20] + d[6] * std::pow(d[16], 2) * d[18] * d[20] + 4 * d[2] * d[9] * d[17] * d[18] * d[20] + 4 * d[0] * d[11] * d[17] * d[18] * d[20] + 2 * d[5] * d[12] * d[17] * d[18] * d[20] + 2 * d[3] * d[14] * d[17] * d[18] * d[20] + 4 * d[8] * d[10] * d[11] * d[19] * d[20] - 3 * d[7] * std::pow(d[11], 2) * d[19] * d[20] + 2 * d[8] * d[13] * d[14] * d[19] * d[20] - d[7] * std::pow(d[14], 2) * d[19] * d[20] + d[7] * std::pow(d[15], 2) * d[19] * d[20] - 6 * d[2] * d[11] * d[16] * d[19] * d[20] - 2 * d[5] * d[14] * d[16] * d[19] * d[20] + 2 * d[6] * d[15] * d[16] * d[19] * d[20] + 3 * d[7] * std::pow(d[16], 2) * d[19] * d[20] + 4 * d[2] * d[10] * d[17] * d[19] * d[20] + 4 * d[1] * d[11] * d[17] * d[19] * d[20] + 2 * d[5] * d[13] * d[17] * d[19] * d[20] + 2 * d[4] * d[14] * d[17] * d[19] * d[20] + d[8] * std::pow(d[9], 2) * std::pow(d[20], 2) + d[8] * std::pow(d[10], 2) * std::pow(d[20], 2) - 3 * d[6] * d[9] * d[11] * std::pow(d[20], 2) - 3 * d[7] * d[10] * d[11] * std::pow(d[20], 2) - d[6] * d[12] * d[14] * std::pow(d[20], 2) - d[7] * d[13] * d[14] * std::pow(d[20], 2) - 3 * d[2] * d[9] * d[15] * std::pow(d[20], 2) - 3 * d[0] * d[11] * d[15] * std::pow(d[20], 2) - d[5] * d[12] * d[15] * std::pow(d[20], 2) - d[3] * d[14] * d[15] * std::pow(d[20], 2) - 3 * d[2] * d[10] * d[16] * std::pow(d[20], 2) - 3 * d[1] * d[11] * d[16] * std::pow(d[20], 2) - d[5] * d[13] * d[16] * std::pow(d[20], 2) - d[4] * d[14] * d[16] * std::pow(d[20], 2) + 2 * d[0] * d[9] * d[17] * std::pow(d[20], 2) + 2 * d[1] * d[10] * d[17] * std::pow(d[20], 2) + 2 * d[8] * d[11] * d[14] * d[18] * d[21] + 2 * d[5] * d[11] * d[17] * d[18] * d[21] + 2 * d[2] * d[14] * d[17] * d[18] * d[21] + 2 * d[8] * d[9] * d[14] * d[20] * d[21] - 2 * d[6] * d[11] * d[14] * d[20] * d[21] - 2 * d[5] * d[11] * d[15] * d[20] * d[21] - 2 * d[2] * d[14] * d[15] * d[20] * d[21] + 2 * d[5] * d[9] * d[17] * d[20] * d[21] + 2 * d[0] * d[14] * d[17] * d[20] * d[21] + d[8] * std::pow(d[14], 2) * std::pow(d[21], 2) - d[8] * std::pow(d[15], 2) * std::pow(d[21], 2) + 2 * d[5] * d[14] * d[17] * std::pow(d[21], 2) - 2 * d[6] * d[15] * d[17] * std::pow(d[21], 2) + 2 * d[8] * d[11] * d[14] * d[19] * d[22] + 2 * d[5] * d[11] * d[17] * d[19] * d[22] + 2 * d[2] * d[14] * d[17] * d[19] * d[22] + 2 * d[8] * d[10] * d[14] * d[20] * d[22] - 2 * d[7] * d[11] * d[14] * d[20] * d[22] - 2 * d[5] * d[11] * d[16] * d[20] * d[22] - 2 * d[2] * d[14] * d[16] * d[20] * d[22] + 2 * d[5] * d[10] * d[17] * d[20] * d[22] + 2 * d[1] * d[14] * d[17] * d[20] * d[22] - 2 * d[8] * d[15] * d[16] * d[21] * d[22] - 2 * d[7] * d[15] * d[17] * d[21] * d[22] - 2 * d[6] * d[16] * d[17] * d[21] * d[22] + d[8] * std::pow(d[14], 2) * std::pow(d[22], 2) - d[8] * std::pow(d[16], 2) * std::pow(d[22], 2) + 2 * d[5] * d[14] * d[17] * std::pow(d[22], 2) - 2 * d[7] * d[16] * d[17] * std::pow(d[22], 2) + 2 * d[8] * d[11] * d[12] * d[18] * d[23] - 2 * d[6] * d[11] * d[14] * d[18] * d[23] - 2 * d[5] * d[11] * d[15] * d[18] * d[23] - 2 * d[2] * d[14] * d[15] * d[18] * d[23] + 2 * d[3] * d[11] * d[17] * d[18] * d[23] + 2 * d[2] * d[12] * d[17] * d[18] * d[23] + 2 * d[8] * d[11] * d[13] * d[19] * d[23] - 2 * d[7] * d[11] * d[14] * d[19] * d[23] - 2 * d[5] * d[11] * d[16] * d[19] * d[23] - 2 * d[2] * d[14] * d[16] * d[19] * d[23] + 2 * d[4] * d[11] * d[17] * d[19] * d[23] + 2 * d[2] * d[13] * d[17] * d[19] * d[23] + 2 * d[8] * d[9] * d[12] * d[20] * d[23] - 2 * d[6] * d[11] * d[12] * d[20] * d[23] + 2 * d[8] * d[10] * d[13] * d[20] * d[23] - 2 * d[7] * d[11] * d[13] * d[20] * d[23] - 2 * d[6] * d[9] * d[14] * d[20] * d[23] - 2 * d[7] * d[10] * d[14] * d[20] * d[23] - 2 * d[5] * d[9] * d[15] * d[20] * d[23] - 2 * d[3] * d[11] * d[15] * d[20] * d[23] - 2 * d[2] * d[12] * d[15] * d[20] * d[23] - 2 * d[0] * d[14] * d[15] * d[20] * d[23] - 2 * d[5] * d[10] * d[16] * d[20] * d[23] - 2 * d[4] * d[11] * d[16] * d[20] * d[23] - 2 * d[2] * d[13] * d[16] * d[20] * d[23] - 2 * d[1] * d[14] * d[16] * d[20] * d[23] + 2 * d[3] * d[9] * d[17] * d[20] * d[23] + 2 * d[4] * d[10] * d[17] * d[20] * d[23] + 2 * d[0] * d[12] * d[17] * d[20] * d[23] + 2 * d[1] * d[13] * d[17] * d[20] * d[23] + 2 * d[8] * d[9] * d[11] * d[21] * d[23] - d[6] * std::pow(d[11], 2) * d[21] * d[23] + 4 * d[8] * d[12] * d[14] * d[21] * d[23] - 3 * d[6] * std::pow(d[14], 2) * d[21] * d[23] - 2 * d[2] * d[11] * d[15] * d[21] * d[23] - 6 * d[5] * d[14] * d[15] * d[21] * d[23] + 3 * d[6] * std::pow(d[15], 2) * d[21] * d[23] + 2 * d[7] * d[15] * d[16] * d[21] * d[23] + d[6] * std::pow(d[16], 2) * d[21] * d[23] + 2 * d[2] * d[9] * d[17] * d[21] * d[23] + 2 * d[0] * d[11] * d[17] * d[21] * d[23] + 4 * d[5] * d[12] * d[17] * d[21] * d[23] + 4 * d[3] * d[14] * d[17] * d[21] * d[23] + 2 * d[8] * d[10] * d[11] * d[22] * d[23] - d[7] * std::pow(d[11], 2) * d[22] * d[23] + 4 * d[8] * d[13] * d[14] * d[22] * d[23] - 3 * d[7] * std::pow(d[14], 2) * d[22] * d[23] + d[7] * std::pow(d[15], 2) * d[22] * d[23] - 2 * d[2] * d[11] * d[16] * d[22] * d[23] - 6 * d[5] * d[14] * d[16] * d[22] * d[23] + 2 * d[6] * d[15] * d[16] * d[22] * d[23] + 3 * d[7] * std::pow(d[16], 2) * d[22] * d[23] + 2 * d[2] * d[10] * d[17] * d[22] * d[23] + 2 * d[1] * d[11] * d[17] * d[22] * d[23] + 4 * d[5] * d[13] * d[17] * d[22] * d[23] + 4 * d[4] * d[14] * d[17] * d[22] * d[23] - d[6] * d[9] * d[11] * std::pow(d[23], 2) - d[7] * d[10] * d[11] * std::pow(d[23], 2) + d[8] * std::pow(d[12], 2) * std::pow(d[23], 2) + d[8] * std::pow(d[13], 2) * std::pow(d[23], 2) - 3 * d[6] * d[12] * d[14] * std::pow(d[23], 2) - 3 * d[7] * d[13] * d[14] * std::pow(d[23], 2) - d[2] * d[9] * d[15] * std::pow(d[23], 2) - d[0] * d[11] * d[15] * std::pow(d[23], 2) - 3 * d[5] * d[12] * d[15] * std::pow(d[23], 2) - 3 * d[3] * d[14] * d[15] * std::pow(d[23], 2) - d[2] * d[10] * d[16] * std::pow(d[23], 2) - d[1] * d[11] * d[16] * std::pow(d[23], 2) - 3 * d[5] * d[13] * d[16] * std::pow(d[23], 2) - 3 * d[4] * d[14] * d[16] * std::pow(d[23], 2) + 2 * d[3] * d[12] * d[17] * std::pow(d[23], 2) + 2 * d[4] * d[13] * d[17] * std::pow(d[23], 2) - 3 * d[2] * std::pow(d[11], 2) * d[18] * d[24] - 2 * d[5] * d[11] * d[14] * d[18] * d[24] - d[2] * std::pow(d[14], 2) * d[18] * d[24] - 4 * d[8] * d[9] * d[15] * d[18] * d[24] + 6 * d[6] * d[11] * d[15] * d[18] * d[24] + 3 * d[2] * std::pow(d[15], 2) * d[18] * d[24] - 2 * d[8] * d[10] * d[16] * d[18] * d[24] + 2 * d[7] * d[11] * d[16] * d[18] * d[24] + d[2] * std::pow(d[16], 2) * d[18] * d[24] - 4 * d[6] * d[9] * d[17] * d[18] * d[24] - 2 * d[7] * d[10] * d[17] * d[18] * d[24] - 4 * d[0] * d[15] * d[17] * d[18] * d[24] - 2 * d[1] * d[16] * d[17] * d[18] * d[24] + 2 * d[7] * d[11] * d[15] * d[19] * d[24] - 2 * d[8] * d[9] * d[16] * d[19] * d[24] + 2 * d[6] * d[11] * d[16] * d[19] * d[24] + 2 * d[2] * d[15] * d[16] * d[19] * d[24] - 2 * d[7] * d[9] * d[17] * d[19] * d[24] - 2 * d[0] * d[16] * d[17] * d[19] * d[24] - 6 * d[2] * d[9] * d[11] * d[20] * d[24] - 3 * d[0] * std::pow(d[11], 2) * d[20] * d[24] - 2 * d[5] * d[11] * d[12] * d[20] * d[24] - 2 * d[5] * d[9] * d[14] * d[20] * d[24] - 2 * d[3] * d[11] * d[14] * d[20] * d[24] - 2 * d[2] * d[12] * d[14] * d[20] * d[24] - d[0] * std::pow(d[14], 2) * d[20] * d[24] + 6 * d[6] * d[9] * d[15] * d[20] * d[24] + 2 * d[7] * d[10] * d[15] * d[20] * d[24] + 3 * d[0] * std::pow(d[15], 2) * d[20] * d[24] + 2 * d[7] * d[9] * d[16] * d[20] * d[24] + 2 * d[6] * d[10] * d[16] * d[20] * d[24] + 2 * d[1] * d[15] * d[16] * d[20] * d[24] + d[0] * std::pow(d[16], 2) * d[20] * d[24] - d[5] * std::pow(d[11], 2) * d[21] * d[24] - 2 * d[2] * d[11] * d[14] * d[21] * d[24] - 3 * d[5] * std::pow(d[14], 2) * d[21] * d[24] - 4 * d[8] * d[12] * d[15] * d[21] * d[24] + 6 * d[6] * d[14] * d[15] * d[21] * d[24] + 3 * d[5] * std::pow(d[15], 2) * d[21] * d[24] - 2 * d[8] * d[13] * d[16] * d[21] * d[24] + 2 * d[7] * d[14] * d[16] * d[21] * d[24] + d[5] * std::pow(d[16], 2) * d[21] * d[24] - 4 * d[6] * d[12] * d[17] * d[21] * d[24] - 2 * d[7] * d[13] * d[17] * d[21] * d[24] - 4 * d[3] * d[15] * d[17] * d[21] * d[24] - 2 * d[4] * d[16] * d[17] * d[21] * d[24] + 2 * d[7] * d[14] * d[15] * d[22] * d[24] - 2 * d[8] * d[12] * d[16] * d[22] * d[24] + 2 * d[6] * d[14] * d[16] * d[22] * d[24] + 2 * d[5] * d[15] * d[16] * d[22] * d[24] - 2 * d[7] * d[12] * d[17] * d[22] * d[24] - 2 * d[3] * d[16] * d[17] * d[22] * d[24] - 2 * d[5] * d[9] * d[11] * d[23] * d[24] - d[3] * std::pow(d[11], 2) * d[23] * d[24] - 2 * d[2] * d[11] * d[12] * d[23] * d[24] - 2 * d[2] * d[9] * d[14] * d[23] * d[24] - 2 * d[0] * d[11] * d[14] * d[23] * d[24] - 6 * d[5] * d[12] * d[14] * d[23] * d[24] - 3 * d[3] * std::pow(d[14], 2) * d[23] * d[24] + 6 * d[6] * d[12] * d[15] * d[23] * d[24] + 2 * d[7] * d[13] * d[15] * d[23] * d[24] + 3 * d[3] * std::pow(d[15], 2) * d[23] * d[24] + 2 * d[7] * d[12] * d[16] * d[23] * d[24] + 2 * d[6] * d[13] * d[16] * d[23] * d[24] + 2 * d[4] * d[15] * d[16] * d[23] * d[24] + d[3] * std::pow(d[16], 2) * d[23] * d[24] - d[8] * std::pow(d[9], 2) * std::pow(d[24], 2) + 3 * d[6] * d[9] * d[11] * std::pow(d[24], 2) + d[7] * d[10] * d[11] * std::pow(d[24], 2) - d[8] * std::pow(d[12], 2) * std::pow(d[24], 2) + 3 * d[6] * d[12] * d[14] * std::pow(d[24], 2) + d[7] * d[13] * d[14] * std::pow(d[24], 2) + 3 * d[2] * d[9] * d[15] * std::pow(d[24], 2) + 3 * d[0] * d[11] * d[15] * std::pow(d[24], 2) + 3 * d[5] * d[12] * d[15] * std::pow(d[24], 2) + 3 * d[3] * d[14] * d[15] * std::pow(d[24], 2) + d[2] * d[10] * d[16] * std::pow(d[24], 2) + d[1] * d[11] * d[16] * std::pow(d[24], 2) + d[5] * d[13] * d[16] * std::pow(d[24], 2) + d[4] * d[14] * d[16] * std::pow(d[24], 2) - 2 * d[0] * d[9] * d[17] * std::pow(d[24], 2) - 2 * d[3] * d[12] * d[17] * std::pow(d[24], 2) - 2 * d[8] * d[10] * d[15] * d[18] * d[25] + 2 * d[7] * d[11] * d[15] * d[18] * d[25] + 2 * d[6] * d[11] * d[16] * d[18] * d[25] + 2 * d[2] * d[15] * d[16] * d[18] * d[25] - 2 * d[6] * d[10] * d[17] * d[18] * d[25] - 2 * d[1] * d[15] * d[17] * d[18] * d[25] - 3 * d[2] * std::pow(d[11], 2) * d[19] * d[25] - 2 * d[5] * d[11] * d[14] * d[19] * d[25] - d[2] * std::pow(d[14], 2) * d[19] * d[25] - 2 * d[8] * d[9] * d[15] * d[19] * d[25] + 2 * d[6] * d[11] * d[15] * d[19] * d[25] + d[2] * std::pow(d[15], 2) * d[19] * d[25] - 4 * d[8] * d[10] * d[16] * d[19] * d[25] + 6 * d[7] * d[11] * d[16] * d[19] * d[25] + 3 * d[2] * std::pow(d[16], 2) * d[19] * d[25] - 2 * d[6] * d[9] * d[17] * d[19] * d[25] - 4 * d[7] * d[10] * d[17] * d[19] * d[25] - 2 * d[0] * d[15] * d[17] * d[19] * d[25] - 4 * d[1] * d[16] * d[17] * d[19] * d[25] - 6 * d[2] * d[10] * d[11] * d[20] * d[25] - 3 * d[1] * std::pow(d[11], 2) * d[20] * d[25] - 2 * d[5] * d[11] * d[13] * d[20] * d[25] - 2 * d[5] * d[10] * d[14] * d[20] * d[25] - 2 * d[4] * d[11] * d[14] * d[20] * d[25] - 2 * d[2] * d[13] * d[14] * d[20] * d[25] - d[1] * std::pow(d[14], 2) * d[20] * d[25] + 2 * d[7] * d[9] * d[15] * d[20] * d[25] + 2 * d[6] * d[10] * d[15] * d[20] * d[25] + d[1] * std::pow(d[15], 2) * d[20] * d[25] + 2 * d[6] * d[9] * d[16] * d[20] * d[25] + 6 * d[7] * d[10] * d[16] * d[20] * d[25] + 2 * d[0] * d[15] * d[16] * d[20] * d[25] + 3 * d[1] * std::pow(d[16], 2) * d[20] * d[25] - 2 * d[8] * d[13] * d[15] * d[21] * d[25] + 2 * d[7] * d[14] * d[15] * d[21] * d[25] + 2 * d[6] * d[14] * d[16] * d[21] * d[25] + 2 * d[5] * d[15] * d[16] * d[21] * d[25] - 2 * d[6] * d[13] * d[17] * d[21] * d[25] - 2 * d[4] * d[15] * d[17] * d[21] * d[25] - d[5] * std::pow(d[11], 2) * d[22] * d[25] - 2 * d[2] * d[11] * d[14] * d[22] * d[25] - 3 * d[5] * std::pow(d[14], 2) * d[22] * d[25] - 2 * d[8] * d[12] * d[15] * d[22] * d[25] + 2 * d[6] * d[14] * d[15] * d[22] * d[25] + d[5] * std::pow(d[15], 2) * d[22] * d[25] - 4 * d[8] * d[13] * d[16] * d[22] * d[25] + 6 * d[7] * d[14] * d[16] * d[22] * d[25] + 3 * d[5] * std::pow(d[16], 2) * d[22] * d[25] - 2 * d[6] * d[12] * d[17] * d[22] * d[25] - 4 * d[7] * d[13] * d[17] * d[22] * d[25] - 2 * d[3] * d[15] * d[17] * d[22] * d[25] - 4 * d[4] * d[16] * d[17] * d[22] * d[25] - 2 * d[5] * d[10] * d[11] * d[23] * d[25] - d[4] * std::pow(d[11], 2) * d[23] * d[25] - 2 * d[2] * d[11] * d[13] * d[23] * d[25] - 2 * d[2] * d[10] * d[14] * d[23] * d[25] - 2 * d[1] * d[11] * d[14] * d[23] * d[25] - 6 * d[5] * d[13] * d[14] * d[23] * d[25] - 3 * d[4] * std::pow(d[14], 2) * d[23] * d[25] + 2 * d[7] * d[12] * d[15] * d[23] * d[25] + 2 * d[6] * d[13] * d[15] * d[23] * d[25] + d[4] * std::pow(d[15], 2) * d[23] * d[25] + 2 * d[6] * d[12] * d[16] * d[23] * d[25] + 6 * d[7] * d[13] * d[16] * d[23] * d[25] + 2 * d[3] * d[15] * d[16] * d[23] * d[25] + 3 * d[4] * std::pow(d[16], 2) * d[23] * d[25] - 2 * d[8] * d[9] * d[10] * d[24] * d[25] + 2 * d[7] * d[9] * d[11] * d[24] * d[25] + 2 * d[6] * d[10] * d[11] * d[24] * d[25] - 2 * d[8] * d[12] * d[13] * d[24] * d[25] + 2 * d[7] * d[12] * d[14] * d[24] * d[25] + 2 * d[6] * d[13] * d[14] * d[24] * d[25] + 2 * d[2] * d[10] * d[15] * d[24] * d[25] + 2 * d[1] * d[11] * d[15] * d[24] * d[25] + 2 * d[5] * d[13] * d[15] * d[24] * d[25] + 2 * d[4] * d[14] * d[15] * d[24] * d[25] + 2 * d[2] * d[9] * d[16] * d[24] * d[25] + 2 * d[0] * d[11] * d[16] * d[24] * d[25] + 2 * d[5] * d[12] * d[16] * d[24] * d[25] + 2 * d[3] * d[14] * d[16] * d[24] * d[25] - 2 * d[1] * d[9] * d[17] * d[24] * d[25] - 2 * d[0] * d[10] * d[17] * d[24] * d[25] - 2 * d[4] * d[12] * d[17] * d[24] * d[25] - 2 * d[3] * d[13] * d[17] * d[24] * d[25] - d[8] * std::pow(d[10], 2) * std::pow(d[25], 2) + d[6] * d[9] * d[11] * std::pow(d[25], 2) + 3 * d[7] * d[10] * d[11] * std::pow(d[25], 2) - d[8] * std::pow(d[13], 2) * std::pow(d[25], 2) + d[6] * d[12] * d[14] * std::pow(d[25], 2) + 3 * d[7] * d[13] * d[14] * std::pow(d[25], 2) + d[2] * d[9] * d[15] * std::pow(d[25], 2) + d[0] * d[11] * d[15] * std::pow(d[25], 2) + d[5] * d[12] * d[15] * std::pow(d[25], 2) + d[3] * d[14] * d[15] * std::pow(d[25], 2) + 3 * d[2] * d[10] * d[16] * std::pow(d[25], 2) + 3 * d[1] * d[11] * d[16] * std::pow(d[25], 2) + 3 * d[5] * d[13] * d[16] * std::pow(d[25], 2) + 3 * d[4] * d[14] * d[16] * std::pow(d[25], 2) - 2 * d[1] * d[10] * d[17] * std::pow(d[25], 2) - 2 * d[4] * d[13] * d[17] * std::pow(d[25], 2) + 4 * d[2] * d[9] * d[11] * d[18] * d[26] + 2 * d[0] * std::pow(d[11], 2) * d[18] * d[26] + 2 * d[5] * d[11] * d[12] * d[18] * d[26] + 2 * d[3] * d[11] * d[14] * d[18] * d[26] + 2 * d[2] * d[12] * d[14] * d[18] * d[26] - 4 * d[6] * d[9] * d[15] * d[18] * d[26] - 2 * d[7] * d[10] * d[15] * d[18] * d[26] - 2 * d[0] * std::pow(d[15], 2) * d[18] * d[26] - 2 * d[6] * d[10] * d[16] * d[18] * d[26] - 2 * d[1] * d[15] * d[16] * d[18] * d[26] + 4 * d[2] * d[10] * d[11] * d[19] * d[26] + 2 * d[1] * std::pow(d[11], 2) * d[19] * d[26] + 2 * d[5] * d[11] * d[13] * d[19] * d[26] + 2 * d[4] * d[11] * d[14] * d[19] * d[26] + 2 * d[2] * d[13] * d[14] * d[19] * d[26] - 2 * d[7] * d[9] * d[15] * d[19] * d[26] - 2 * d[6] * d[9] * d[16] * d[19] * d[26] - 4 * d[7] * d[10] * d[16] * d[19] * d[26] - 2 * d[0] * d[15] * d[16] * d[19] * d[26] - 2 * d[1] * std::pow(d[16], 2) * d[19] * d[26] + 2 * d[2] * std::pow(d[9], 2) * d[20] * d[26] + 2 * d[2] * std::pow(d[10], 2) * d[20] * d[26] + 4 * d[0] * d[9] * d[11] * d[20] * d[26] + 4 * d[1] * d[10] * d[11] * d[20] * d[26] + 2 * d[5] * d[9] * d[12] * d[20] * d[26] + 2 * d[5] * d[10] * d[13] * d[20] * d[26] + 2 * d[3] * d[9] * d[14] * d[20] * d[26] + 2 * d[4] * d[10] * d[14] * d[20] * d[26] + 2 * d[0] * d[12] * d[14] * d[20] * d[26] + 2 * d[1] * d[13] * d[14] * d[20] * d[26] + 2 * d[5] * d[9] * d[11] * d[21] * d[26] + 2 * d[2] * d[9] * d[14] * d[21] * d[26] + 2 * d[0] * d[11] * d[14] * d[21] * d[26] + 4 * d[5] * d[12] * d[14] * d[21] * d[26] + 2 * d[3] * std::pow(d[14], 2) * d[21] * d[26] - 4 * d[6] * d[12] * d[15] * d[21] * d[26] - 2 * d[7] * d[13] * d[15] * d[21] * d[26] - 2 * d[3] * std::pow(d[15], 2) * d[21] * d[26] - 2 * d[6] * d[13] * d[16] * d[21] * d[26] - 2 * d[4] * d[15] * d[16] * d[21] * d[26] + 2 * d[5] * d[10] * d[11] * d[22] * d[26] + 2 * d[2] * d[10] * d[14] * d[22] * d[26] + 2 * d[1] * d[11] * d[14] * d[22] * d[26] + 4 * d[5] * d[13] * d[14] * d[22] * d[26] + 2 * d[4] * std::pow(d[14], 2) * d[22] * d[26] - 2 * d[7] * d[12] * d[15] * d[22] * d[26] - 2 * d[6] * d[12] * d[16] * d[22] * d[26] - 4 * d[7] * d[13] * d[16] * d[22] * d[26] - 2 * d[3] * d[15] * d[16] * d[22] * d[26] - 2 * d[4] * std::pow(d[16], 2) * d[22] * d[26] + 2 * d[3] * d[9] * d[11] * d[23] * d[26] + 2 * d[4] * d[10] * d[11] * d[23] * d[26] + 2 * d[2] * d[9] * d[12] * d[23] * d[26] + 2 * d[0] * d[11] * d[12] * d[23] * d[26] + 2 * d[5] * std::pow(d[12], 2) * d[23] * d[26] + 2 * d[2] * d[10] * d[13] * d[23] * d[26] + 2 * d[1] * d[11] * d[13] * d[23] * d[26] + 2 * d[5] * std::pow(d[13], 2) * d[23] * d[26] + 4 * d[3] * d[12] * d[14] * d[23] * d[26] + 4 * d[4] * d[13] * d[14] * d[23] * d[26] - 2 * d[6] * std::pow(d[9], 2) * d[24] * d[26] - 2 * d[7] * d[9] * d[10] * d[24] * d[26] - 2 * d[6] * std::pow(d[12], 2) * d[24] * d[26] - 2 * d[7] * d[12] * d[13] * d[24] * d[26] - 4 * d[0] * d[9] * d[15] * d[24] * d[26] - 4 * d[3] * d[12] * d[15] * d[24] * d[26] - 2 * d[1] * d[9] * d[16] * d[24] * d[26] - 2 * d[0] * d[10] * d[16] * d[24] * d[26] - 2 * d[4] * d[12] * d[16] * d[24] * d[26] - 2 * d[3] * d[13] * d[16] * d[24] * d[26] - 2 * d[6] * d[9] * d[10] * d[25] * d[26] - 2 * d[7] * std::pow(d[10], 2) * d[25] * d[26] - 2 * d[6] * d[12] * d[13] * d[25] * d[26] - 2 * d[7] * std::pow(d[13], 2) * d[25] * d[26] - 2 * d[1] * d[9] * d[15] * d[25] * d[26] - 2 * d[0] * d[10] * d[15] * d[25] * d[26] - 2 * d[4] * d[12] * d[15] * d[25] * d[26] - 2 * d[3] * d[13] * d[15] * d[25] * d[26] - 4 * d[1] * d[10] * d[16] * d[25] * d[26] - 4 * d[4] * d[13] * d[16] * d[25] * d[26];
				coeffs[24] = std::pow(d[11], 2) * d[17] * std::pow(d[18], 2) - std::pow(d[15], 2) * d[17] * std::pow(d[18], 2) - 2 * d[15] * d[16] * d[17] * d[18] * d[19] + std::pow(d[11], 2) * d[17] * std::pow(d[19], 2) - std::pow(d[16], 2) * d[17] * std::pow(d[19], 2) - 3 * std::pow(d[11], 2) * d[15] * d[18] * d[20] - std::pow(d[14], 2) * d[15] * d[18] * d[20] + std::pow(d[15], 3) * d[18] * d[20] + d[15] * std::pow(d[16], 2) * d[18] * d[20] + 4 * d[9] * d[11] * d[17] * d[18] * d[20] + 2 * d[12] * d[14] * d[17] * d[18] * d[20] - 3 * std::pow(d[11], 2) * d[16] * d[19] * d[20] - std::pow(d[14], 2) * d[16] * d[19] * d[20] + std::pow(d[15], 2) * d[16] * d[19] * d[20] + std::pow(d[16], 3) * d[19] * d[20] + 4 * d[10] * d[11] * d[17] * d[19] * d[20] + 2 * d[13] * d[14] * d[17] * d[19] * d[20] - 3 * d[9] * d[11] * d[15] * std::pow(d[20], 2) - d[12] * d[14] * d[15] * std::pow(d[20], 2) - 3 * d[10] * d[11] * d[16] * std::pow(d[20], 2) - d[13] * d[14] * d[16] * std::pow(d[20], 2) + std::pow(d[9], 2) * d[17] * std::pow(d[20], 2) + std::pow(d[10], 2) * d[17] * std::pow(d[20], 2) + 2 * d[11] * d[14] * d[17] * d[18] * d[21] - 2 * d[11] * d[14] * d[15] * d[20] * d[21] + 2 * d[9] * d[14] * d[17] * d[20] * d[21] + std::pow(d[14], 2) * d[17] * std::pow(d[21], 2) - std::pow(d[15], 2) * d[17] * std::pow(d[21], 2) + 2 * d[11] * d[14] * d[17] * d[19] * d[22] - 2 * d[11] * d[14] * d[16] * d[20] * d[22] + 2 * d[10] * d[14] * d[17] * d[20] * d[22] - 2 * d[15] * d[16] * d[17] * d[21] * d[22] + std::pow(d[14], 2) * d[17] * std::pow(d[22], 2) - std::pow(d[16], 2) * d[17] * std::pow(d[22], 2) - 2 * d[11] * d[14] * d[15] * d[18] * d[23] + 2 * d[11] * d[12] * d[17] * d[18] * d[23] - 2 * d[11] * d[14] * d[16] * d[19] * d[23] + 2 * d[11] * d[13] * d[17] * d[19] * d[23] - 2 * d[11] * d[12] * d[15] * d[20] * d[23] - 2 * d[9] * d[14] * d[15] * d[20] * d[23] - 2 * d[11] * d[13] * d[16] * d[20] * d[23] - 2 * d[10] * d[14] * d[16] * d[20] * d[23] + 2 * d[9] * d[12] * d[17] * d[20] * d[23] + 2 * d[10] * d[13] * d[17] * d[20] * d[23] - std::pow(d[11], 2) * d[15] * d[21] * d[23] - 3 * std::pow(d[14], 2) * d[15] * d[21] * d[23] + std::pow(d[15], 3) * d[21] * d[23] + d[15] * std::pow(d[16], 2) * d[21] * d[23] + 2 * d[9] * d[11] * d[17] * d[21] * d[23] + 4 * d[12] * d[14] * d[17] * d[21] * d[23] - std::pow(d[11], 2) * d[16] * d[22] * d[23] - 3 * std::pow(d[14], 2) * d[16] * d[22] * d[23] + std::pow(d[15], 2) * d[16] * d[22] * d[23] + std::pow(d[16], 3) * d[22] * d[23] + 2 * d[10] * d[11] * d[17] * d[22] * d[23] + 4 * d[13] * d[14] * d[17] * d[22] * d[23] - d[9] * d[11] * d[15] * std::pow(d[23], 2) - 3 * d[12] * d[14] * d[15] * std::pow(d[23], 2) - d[10] * d[11] * d[16] * std::pow(d[23], 2) - 3 * d[13] * d[14] * d[16] * std::pow(d[23], 2) + std::pow(d[12], 2) * d[17] * std::pow(d[23], 2) + std::pow(d[13], 2) * d[17] * std::pow(d[23], 2) - std::pow(d[11], 3) * d[18] * d[24] - d[11] * std::pow(d[14], 2) * d[18] * d[24] + 3 * d[11] * std::pow(d[15], 2) * d[18] * d[24] + d[11] * std::pow(d[16], 2) * d[18] * d[24] - 4 * d[9] * d[15] * d[17] * d[18] * d[24] - 2 * d[10] * d[16] * d[17] * d[18] * d[24] + 2 * d[11] * d[15] * d[16] * d[19] * d[24] - 2 * d[9] * d[16] * d[17] * d[19] * d[24] - 3 * d[9] * std::pow(d[11], 2) * d[20] * d[24] - 2 * d[11] * d[12] * d[14] * d[20] * d[24] - d[9] * std::pow(d[14], 2) * d[20] * d[24] + 3 * d[9] * std::pow(d[15], 2) * d[20] * d[24] + 2 * d[10] * d[15] * d[16] * d[20] * d[24] + d[9] * std::pow(d[16], 2) * d[20] * d[24] - std::pow(d[11], 2) * d[14] * d[21] * d[24] - std::pow(d[14], 3) * d[21] * d[24] + 3 * d[14] * std::pow(d[15], 2) * d[21] * d[24] + d[14] * std::pow(d[16], 2) * d[21] * d[24] - 4 * d[12] * d[15] * d[17] * d[21] * d[24] - 2 * d[13] * d[16] * d[17] * d[21] * d[24] + 2 * d[14] * d[15] * d[16] * d[22] * d[24] - 2 * d[12] * d[16] * d[17] * d[22] * d[24] - std::pow(d[11], 2) * d[12] * d[23] * d[24] - 2 * d[9] * d[11] * d[14] * d[23] * d[24] - 3 * d[12] * std::pow(d[14], 2) * d[23] * d[24] + 3 * d[12] * std::pow(d[15], 2) * d[23] * d[24] + 2 * d[13] * d[15] * d[16] * d[23] * d[24] + d[12] * std::pow(d[16], 2) * d[23] * d[24] + 3 * d[9] * d[11] * d[15] * std::pow(d[24], 2) + 3 * d[12] * d[14] * d[15] * std::pow(d[24], 2) + d[10] * d[11] * d[16] * std::pow(d[24], 2) + d[13] * d[14] * d[16] * std::pow(d[24], 2) - std::pow(d[9], 2) * d[17] * std::pow(d[24], 2) - std::pow(d[12], 2) * d[17] * std::pow(d[24], 2) + 2 * d[11] * d[15] * d[16] * d[18] * d[25] - 2 * d[10] * d[15] * d[17] * d[18] * d[25] - std::pow(d[11], 3) * d[19] * d[25] - d[11] * std::pow(d[14], 2) * d[19] * d[25] + d[11] * std::pow(d[15], 2) * d[19] * d[25] + 3 * d[11] * std::pow(d[16], 2) * d[19] * d[25] - 2 * d[9] * d[15] * d[17] * d[19] * d[25] - 4 * d[10] * d[16] * d[17] * d[19] * d[25] - 3 * d[10] * std::pow(d[11], 2) * d[20] * d[25] - 2 * d[11] * d[13] * d[14] * d[20] * d[25] - d[10] * std::pow(d[14], 2) * d[20] * d[25] + d[10] * std::pow(d[15], 2) * d[20] * d[25] + 2 * d[9] * d[15] * d[16] * d[20] * d[25] + 3 * d[10] * std::pow(d[16], 2) * d[20] * d[25] + 2 * d[14] * d[15] * d[16] * d[21] * d[25] - 2 * d[13] * d[15] * d[17] * d[21] * d[25] - std::pow(d[11], 2) * d[14] * d[22] * d[25] - std::pow(d[14], 3) * d[22] * d[25] + d[14] * std::pow(d[15], 2) * d[22] * d[25] + 3 * d[14] * std::pow(d[16], 2) * d[22] * d[25] - 2 * d[12] * d[15] * d[17] * d[22] * d[25] - 4 * d[13] * d[16] * d[17] * d[22] * d[25] - std::pow(d[11], 2) * d[13] * d[23] * d[25] - 2 * d[10] * d[11] * d[14] * d[23] * d[25] - 3 * d[13] * std::pow(d[14], 2) * d[23] * d[25] + d[13] * std::pow(d[15], 2) * d[23] * d[25] + 2 * d[12] * d[15] * d[16] * d[23] * d[25] + 3 * d[13] * std::pow(d[16], 2) * d[23] * d[25] + 2 * d[10] * d[11] * d[15] * d[24] * d[25] + 2 * d[13] * d[14] * d[15] * d[24] * d[25] + 2 * d[9] * d[11] * d[16] * d[24] * d[25] + 2 * d[12] * d[14] * d[16] * d[24] * d[25] - 2 * d[9] * d[10] * d[17] * d[24] * d[25] - 2 * d[12] * d[13] * d[17] * d[24] * d[25] + d[9] * d[11] * d[15] * std::pow(d[25], 2) + d[12] * d[14] * d[15] * std::pow(d[25], 2) + 3 * d[10] * d[11] * d[16] * std::pow(d[25], 2) + 3 * d[13] * d[14] * d[16] * std::pow(d[25], 2) - std::pow(d[10], 2) * d[17] * std::pow(d[25], 2) - std::pow(d[13], 2) * d[17] * std::pow(d[25], 2) + 2 * d[9] * std::pow(d[11], 2) * d[18] * d[26] + 2 * d[11] * d[12] * d[14] * d[18] * d[26] - 2 * d[9] * std::pow(d[15], 2) * d[18] * d[26] - 2 * d[10] * d[15] * d[16] * d[18] * d[26] + 2 * d[10] * std::pow(d[11], 2) * d[19] * d[26] + 2 * d[11] * d[13] * d[14] * d[19] * d[26] - 2 * d[9] * d[15] * d[16] * d[19] * d[26] - 2 * d[10] * std::pow(d[16], 2) * d[19] * d[26] + 2 * std::pow(d[9], 2) * d[11] * d[20] * d[26] + 2 * std::pow(d[10], 2) * d[11] * d[20] * d[26] + 2 * d[9] * d[12] * d[14] * d[20] * d[26] + 2 * d[10] * d[13] * d[14] * d[20] * d[26] + 2 * d[9] * d[11] * d[14] * d[21] * d[26] + 2 * d[12] * std::pow(d[14], 2) * d[21] * d[26] - 2 * d[12] * std::pow(d[15], 2) * d[21] * d[26] - 2 * d[13] * d[15] * d[16] * d[21] * d[26] + 2 * d[10] * d[11] * d[14] * d[22] * d[26] + 2 * d[13] * std::pow(d[14], 2) * d[22] * d[26] - 2 * d[12] * d[15] * d[16] * d[22] * d[26] - 2 * d[13] * std::pow(d[16], 2) * d[22] * d[26] + 2 * d[9] * d[11] * d[12] * d[23] * d[26] + 2 * d[10] * d[11] * d[13] * d[23] * d[26] + 2 * std::pow(d[12], 2) * d[14] * d[23] * d[26] + 2 * std::pow(d[13], 2) * d[14] * d[23] * d[26] - 2 * std::pow(d[9], 2) * d[15] * d[24] * d[26] - 2 * std::pow(d[12], 2) * d[15] * d[24] * d[26] - 2 * d[9] * d[10] * d[16] * d[24] * d[26] - 2 * d[12] * d[13] * d[16] * d[24] * d[26] - 2 * d[9] * d[10] * d[15] * d[25] * d[26] - 2 * d[12] * d[13] * d[15] * d[25] * d[26] - 2 * std::pow(d[10], 2) * d[16] * d[25] * d[26] - 2 * std::pow(d[13], 2) * d[16] * d[25] * d[26];
				coeffs[25] = 2 * d[2] * d[8] * std::pow(d[18], 2) * d[20] + 2 * d[2] * d[8] * std::pow(d[19], 2) * d[20] - 3 * d[2] * d[6] * d[18] * std::pow(d[20], 2) + 2 * d[0] * d[8] * d[18] * std::pow(d[20], 2) - 3 * d[2] * d[7] * d[19] * std::pow(d[20], 2) + 2 * d[1] * d[8] * d[19] * std::pow(d[20], 2) - d[0] * d[6] * std::pow(d[20], 3) - d[1] * d[7] * std::pow(d[20], 3) + 2 * d[5] * d[8] * d[18] * d[20] * d[21] - d[5] * d[6] * std::pow(d[20], 2) * d[21] + 2 * d[5] * d[8] * d[19] * d[20] * d[22] - d[5] * d[7] * std::pow(d[20], 2) * d[22] - 2 * d[5] * d[6] * d[18] * d[20] * d[23] + 2 * d[3] * d[8] * d[18] * d[20] * d[23] - 2 * d[5] * d[7] * d[19] * d[20] * d[23] + 2 * d[4] * d[8] * d[19] * d[20] * d[23] - d[3] * d[6] * std::pow(d[20], 2) * d[23] - d[4] * d[7] * std::pow(d[20], 2) * d[23] + 2 * d[2] * d[8] * d[18] * d[21] * d[23] - 2 * d[2] * d[6] * d[20] * d[21] * d[23] + 2 * d[0] * d[8] * d[20] * d[21] * d[23] + 2 * d[5] * d[8] * std::pow(d[21], 2) * d[23] + 2 * d[2] * d[8] * d[19] * d[22] * d[23] - 2 * d[2] * d[7] * d[20] * d[22] * d[23] + 2 * d[1] * d[8] * d[20] * d[22] * d[23] + 2 * d[5] * d[8] * std::pow(d[22], 2) * d[23] - d[2] * d[6] * d[18] * std::pow(d[23], 2) - d[2] * d[7] * d[19] * std::pow(d[23], 2) - d[0] * d[6] * d[20] * std::pow(d[23], 2) - d[1] * d[7] * d[20] * std::pow(d[23], 2) - 3 * d[5] * d[6] * d[21] * std::pow(d[23], 2) + 2 * d[3] * d[8] * d[21] * std::pow(d[23], 2) - 3 * d[5] * d[7] * d[22] * std::pow(d[23], 2) + 2 * d[4] * d[8] * d[22] * std::pow(d[23], 2) - d[3] * d[6] * std::pow(d[23], 3) - d[4] * d[7] * std::pow(d[23], 3) - 2 * d[6] * d[8] * std::pow(d[18], 2) * d[24] - 2 * d[7] * d[8] * d[18] * d[19] * d[24] - 3 * std::pow(d[2], 2) * d[18] * d[20] * d[24] - std::pow(d[5], 2) * d[18] * d[20] * d[24] + 3 * std::pow(d[6], 2) * d[18] * d[20] * d[24] + std::pow(d[7], 2) * d[18] * d[20] * d[24] + 2 * d[6] * d[7] * d[19] * d[20] * d[24] - 3 * d[0] * d[2] * std::pow(d[20], 2) * d[24] - d[3] * d[5] * std::pow(d[20], 2) * d[24] - 2 * d[2] * d[5] * d[20] * d[21] * d[24] - 2 * d[6] * d[8] * std::pow(d[21], 2) * d[24] - 2 * d[7] * d[8] * d[21] * d[22] * d[24] - 2 * d[2] * d[5] * d[18] * d[23] * d[24] - 2 * d[2] * d[3] * d[20] * d[23] * d[24] - 2 * d[0] * d[5] * d[20] * d[23] * d[24] - std::pow(d[2], 2) * d[21] * d[23] * d[24] - 3 * std::pow(d[5], 2) * d[21] * d[23] * d[24] + 3 * std::pow(d[6], 2) * d[21] * d[23] * d[24] + std::pow(d[7], 2) * d[21] * d[23] * d[24] + 2 * d[6] * d[7] * d[22] * d[23] * d[24] - d[0] * d[2] * std::pow(d[23], 2) * d[24] - 3 * d[3] * d[5] * std::pow(d[23], 2) * d[24] + 3 * d[2] * d[6] * d[18] * std::pow(d[24], 2) - 2 * d[0] * d[8] * d[18] * std::pow(d[24], 2) + d[2] * d[7] * d[19] * std::pow(d[24], 2) + 3 * d[0] * d[6] * d[20] * std::pow(d[24], 2) + d[1] * d[7] * d[20] * std::pow(d[24], 2) + 3 * d[5] * d[6] * d[21] * std::pow(d[24], 2) - 2 * d[3] * d[8] * d[21] * std::pow(d[24], 2) + d[5] * d[7] * d[22] * std::pow(d[24], 2) + 3 * d[3] * d[6] * d[23] * std::pow(d[24], 2) + d[4] * d[7] * d[23] * std::pow(d[24], 2) + d[0] * d[2] * std::pow(d[24], 3) + d[3] * d[5] * std::pow(d[24], 3) - 2 * d[6] * d[8] * d[18] * d[19] * d[25] - 2 * d[7] * d[8] * std::pow(d[19], 2) * d[25] + 2 * d[6] * d[7] * d[18] * d[20] * d[25] - 3 * std::pow(d[2], 2) * d[19] * d[20] * d[25] - std::pow(d[5], 2) * d[19] * d[20] * d[25] + std::pow(d[6], 2) * d[19] * d[20] * d[25] + 3 * std::pow(d[7], 2) * d[19] * d[20] * d[25] - 3 * d[1] * d[2] * std::pow(d[20], 2) * d[25] - d[4] * d[5] * std::pow(d[20], 2) * d[25] - 2 * d[2] * d[5] * d[20] * d[22] * d[25] - 2 * d[6] * d[8] * d[21] * d[22] * d[25] - 2 * d[7] * d[8] * std::pow(d[22], 2) * d[25] - 2 * d[2] * d[5] * d[19] * d[23] * d[25] - 2 * d[2] * d[4] * d[20] * d[23] * d[25] - 2 * d[1] * d[5] * d[20] * d[23] * d[25] + 2 * d[6] * d[7] * d[21] * d[23] * d[25] - std::pow(d[2], 2) * d[22] * d[23] * d[25] - 3 * std::pow(d[5], 2) * d[22] * d[23] * d[25] + std::pow(d[6], 2) * d[22] * d[23] * d[25] + 3 * std::pow(d[7], 2) * d[22] * d[23] * d[25] - d[1] * d[2] * std::pow(d[23], 2) * d[25] - 3 * d[4] * d[5] * std::pow(d[23], 2) * d[25] + 2 * d[2] * d[7] * d[18] * d[24] * d[25] - 2 * d[1] * d[8] * d[18] * d[24] * d[25] + 2 * d[2] * d[6] * d[19] * d[24] * d[25] - 2 * d[0] * d[8] * d[19] * d[24] * d[25] + 2 * d[1] * d[6] * d[20] * d[24] * d[25] + 2 * d[0] * d[7] * d[20] * d[24] * d[25] + 2 * d[5] * d[7] * d[21] * d[24] * d[25] - 2 * d[4] * d[8] * d[21] * d[24] * d[25] + 2 * d[5] * d[6] * d[22] * d[24] * d[25] - 2 * d[3] * d[8] * d[22] * d[24] * d[25] + 2 * d[4] * d[6] * d[23] * d[24] * d[25] + 2 * d[3] * d[7] * d[23] * d[24] * d[25] + d[1] * d[2] * std::pow(d[24], 2) * d[25] + d[4] * d[5] * std::pow(d[24], 2) * d[25] + d[2] * d[6] * d[18] * std::pow(d[25], 2) + 3 * d[2] * d[7] * d[19] * std::pow(d[25], 2) - 2 * d[1] * d[8] * d[19] * std::pow(d[25], 2) + d[0] * d[6] * d[20] * std::pow(d[25], 2) + 3 * d[1] * d[7] * d[20] * std::pow(d[25], 2) + d[5] * d[6] * d[21] * std::pow(d[25], 2) + 3 * d[5] * d[7] * d[22] * std::pow(d[25], 2) - 2 * d[4] * d[8] * d[22] * std::pow(d[25], 2) + d[3] * d[6] * d[23] * std::pow(d[25], 2) + 3 * d[4] * d[7] * d[23] * std::pow(d[25], 2) + d[0] * d[2] * d[24] * std::pow(d[25], 2) + d[3] * d[5] * d[24] * std::pow(d[25], 2) + d[1] * d[2] * std::pow(d[25], 3) + d[4] * d[5] * std::pow(d[25], 3) + std::pow(d[2], 2) * std::pow(d[18], 2) * d[26] - std::pow(d[6], 2) * std::pow(d[18], 2) * d[26] - 2 * d[6] * d[7] * d[18] * d[19] * d[26] + std::pow(d[2], 2) * std::pow(d[19], 2) * d[26] - std::pow(d[7], 2) * std::pow(d[19], 2) * d[26] + 4 * d[0] * d[2] * d[18] * d[20] * d[26] + 2 * d[3] * d[5] * d[18] * d[20] * d[26] + 4 * d[1] * d[2] * d[19] * d[20] * d[26] + 2 * d[4] * d[5] * d[19] * d[20] * d[26] + std::pow(d[0], 2) * std::pow(d[20], 2) * d[26] + std::pow(d[1], 2) * std::pow(d[20], 2) * d[26] + 2 * d[2] * d[5] * d[18] * d[21] * d[26] + 2 * d[0] * d[5] * d[20] * d[21] * d[26] + std::pow(d[5], 2) * std::pow(d[21], 2) * d[26] - std::pow(d[6], 2) * std::pow(d[21], 2) * d[26] + 2 * d[2] * d[5] * d[19] * d[22] * d[26] + 2 * d[1] * d[5] * d[20] * d[22] * d[26] - 2 * d[6] * d[7] * d[21] * d[22] * d[26] + std::pow(d[5], 2) * std::pow(d[22], 2) * d[26] - std::pow(d[7], 2) * std::pow(d[22], 2) * d[26] + 2 * d[2] * d[3] * d[18] * d[23] * d[26] + 2 * d[2] * d[4] * d[19] * d[23] * d[26] + 2 * d[0] * d[3] * d[20] * d[23] * d[26] + 2 * d[1] * d[4] * d[20] * d[23] * d[26] + 2 * d[0] * d[2] * d[21] * d[23] * d[26] + 4 * d[3] * d[5] * d[21] * d[23] * d[26] + 2 * d[1] * d[2] * d[22] * d[23] * d[26] + 4 * d[4] * d[5] * d[22] * d[23] * d[26] + std::pow(d[3], 2) * std::pow(d[23], 2) * d[26] + std::pow(d[4], 2) * std::pow(d[23], 2) * d[26] - 4 * d[0] * d[6] * d[18] * d[24] * d[26] - 2 * d[1] * d[7] * d[18] * d[24] * d[26] - 2 * d[0] * d[7] * d[19] * d[24] * d[26] - 4 * d[3] * d[6] * d[21] * d[24] * d[26] - 2 * d[4] * d[7] * d[21] * d[24] * d[26] - 2 * d[3] * d[7] * d[22] * d[24] * d[26] - std::pow(d[0], 2) * std::pow(d[24], 2) * d[26] - std::pow(d[3], 2) * std::pow(d[24], 2) * d[26] - 2 * d[1] * d[6] * d[18] * d[25] * d[26] - 2 * d[0] * d[6] * d[19] * d[25] * d[26] - 4 * d[1] * d[7] * d[19] * d[25] * d[26] - 2 * d[4] * d[6] * d[21] * d[25] * d[26] - 2 * d[3] * d[6] * d[22] * d[25] * d[26] - 4 * d[4] * d[7] * d[22] * d[25] * d[26] - 2 * d[0] * d[1] * d[24] * d[25] * d[26] - 2 * d[3] * d[4] * d[24] * d[25] * d[26] - std::pow(d[1], 2) * std::pow(d[25], 2) * d[26] - std::pow(d[4], 2) * std::pow(d[25], 2) * d[26];
				coeffs[26] = 2 * d[8] * d[11] * std::pow(d[18], 2) * d[20] + 2 * d[2] * d[17] * std::pow(d[18], 2) * d[20] + 2 * d[8] * d[11] * std::pow(d[19], 2) * d[20] + 2 * d[2] * d[17] * std::pow(d[19], 2) * d[20] + 2 * d[8] * d[9] * d[18] * std::pow(d[20], 2) - 3 * d[6] * d[11] * d[18] * std::pow(d[20], 2) - 3 * d[2] * d[15] * d[18] * std::pow(d[20], 2) + 2 * d[0] * d[17] * d[18] * std::pow(d[20], 2) + 2 * d[8] * d[10] * d[19] * std::pow(d[20], 2) - 3 * d[7] * d[11] * d[19] * std::pow(d[20], 2) - 3 * d[2] * d[16] * d[19] * std::pow(d[20], 2) + 2 * d[1] * d[17] * d[19] * std::pow(d[20], 2) - d[6] * d[9] * std::pow(d[20], 3) - d[7] * d[10] * std::pow(d[20], 3) - d[0] * d[15] * std::pow(d[20], 3) - d[1] * d[16] * std::pow(d[20], 3) + 2 * d[8] * d[14] * d[18] * d[20] * d[21] + 2 * d[5] * d[17] * d[18] * d[20] * d[21] - d[6] * d[14] * std::pow(d[20], 2) * d[21] - d[5] * d[15] * std::pow(d[20], 2) * d[21] + 2 * d[8] * d[14] * d[19] * d[20] * d[22] + 2 * d[5] * d[17] * d[19] * d[20] * d[22] - d[7] * d[14] * std::pow(d[20], 2) * d[22] - d[5] * d[16] * std::pow(d[20], 2) * d[22] + 2 * d[8] * d[12] * d[18] * d[20] * d[23] - 2 * d[6] * d[14] * d[18] * d[20] * d[23] - 2 * d[5] * d[15] * d[18] * d[20] * d[23] + 2 * d[3] * d[17] * d[18] * d[20] * d[23] + 2 * d[8] * d[13] * d[19] * d[20] * d[23] - 2 * d[7] * d[14] * d[19] * d[20] * d[23] - 2 * d[5] * d[16] * d[19] * d[20] * d[23] + 2 * d[4] * d[17] * d[19] * d[20] * d[23] - d[6] * d[12] * std::pow(d[20], 2) * d[23] - d[7] * d[13] * std::pow(d[20], 2) * d[23] - d[3] * d[15] * std::pow(d[20], 2) * d[23] - d[4] * d[16] * std::pow(d[20], 2) * d[23] + 2 * d[8] * d[11] * d[18] * d[21] * d[23] + 2 * d[2] * d[17] * d[18] * d[21] * d[23] + 2 * d[8] * d[9] * d[20] * d[21] * d[23] - 2 * d[6] * d[11] * d[20] * d[21] * d[23] - 2 * d[2] * d[15] * d[20] * d[21] * d[23] + 2 * d[0] * d[17] * d[20] * d[21] * d[23] + 2 * d[8] * d[14] * std::pow(d[21], 2) * d[23] + 2 * d[5] * d[17] * std::pow(d[21], 2) * d[23] + 2 * d[8] * d[11] * d[19] * d[22] * d[23] + 2 * d[2] * d[17] * d[19] * d[22] * d[23] + 2 * d[8] * d[10] * d[20] * d[22] * d[23] - 2 * d[7] * d[11] * d[20] * d[22] * d[23] - 2 * d[2] * d[16] * d[20] * d[22] * d[23] + 2 * d[1] * d[17] * d[20] * d[22] * d[23] + 2 * d[8] * d[14] * std::pow(d[22], 2) * d[23] + 2 * d[5] * d[17] * std::pow(d[22], 2) * d[23] - d[6] * d[11] * d[18] * std::pow(d[23], 2) - d[2] * d[15] * d[18] * std::pow(d[23], 2) - d[7] * d[11] * d[19] * std::pow(d[23], 2) - d[2] * d[16] * d[19] * std::pow(d[23], 2) - d[6] * d[9] * d[20] * std::pow(d[23], 2) - d[7] * d[10] * d[20] * std::pow(d[23], 2) - d[0] * d[15] * d[20] * std::pow(d[23], 2) - d[1] * d[16] * d[20] * std::pow(d[23], 2) + 2 * d[8] * d[12] * d[21] * std::pow(d[23], 2) - 3 * d[6] * d[14] * d[21] * std::pow(d[23], 2) - 3 * d[5] * d[15] * d[21] * std::pow(d[23], 2) + 2 * d[3] * d[17] * d[21] * std::pow(d[23], 2) + 2 * d[8] * d[13] * d[22] * std::pow(d[23], 2) - 3 * d[7] * d[14] * d[22] * std::pow(d[23], 2) - 3 * d[5] * d[16] * d[22] * std::pow(d[23], 2) + 2 * d[4] * d[17] * d[22] * std::pow(d[23], 2) - d[6] * d[12] * std::pow(d[23], 3) - d[7] * d[13] * std::pow(d[23], 3) - d[3] * d[15] * std::pow(d[23], 3) - d[4] * d[16] * std::pow(d[23], 3) - 2 * d[8] * d[15] * std::pow(d[18], 2) * d[24] - 2 * d[6] * d[17] * std::pow(d[18], 2) * d[24] - 2 * d[8] * d[16] * d[18] * d[19] * d[24] - 2 * d[7] * d[17] * d[18] * d[19] * d[24] - 6 * d[2] * d[11] * d[18] * d[20] * d[24] - 2 * d[5] * d[14] * d[18] * d[20] * d[24] + 6 * d[6] * d[15] * d[18] * d[20] * d[24] + 2 * d[7] * d[16] * d[18] * d[20] * d[24] + 2 * d[7] * d[15] * d[19] * d[20] * d[24] + 2 * d[6] * d[16] * d[19] * d[20] * d[24] - 3 * d[2] * d[9] * std::pow(d[20], 2) * d[24] - 3 * d[0] * d[11] * std::pow(d[20], 2) * d[24] - d[5] * d[12] * std::pow(d[20], 2) * d[24] - d[3] * d[14] * std::pow(d[20], 2) * d[24] - 2 * d[5] * d[11] * d[20] * d[21] * d[24] - 2 * d[2] * d[14] * d[20] * d[21] * d[24] - 2 * d[8] * d[15] * std::pow(d[21], 2) * d[24] - 2 * d[6] * d[17] * std::pow(d[21], 2) * d[24] - 2 * d[8] * d[16] * d[21] * d[22] * d[24] - 2 * d[7] * d[17] * d[21] * d[22] * d[24] - 2 * d[5] * d[11] * d[18] * d[23] * d[24] - 2 * d[2] * d[14] * d[18] * d[23] * d[24] - 2 * d[5] * d[9] * d[20] * d[23] * d[24] - 2 * d[3] * d[11] * d[20] * d[23] * d[24] - 2 * d[2] * d[12] * d[20] * d[23] * d[24] - 2 * d[0] * d[14] * d[20] * d[23] * d[24] - 2 * d[2] * d[11] * d[21] * d[23] * d[24] - 6 * d[5] * d[14] * d[21] * d[23] * d[24] + 6 * d[6] * d[15] * d[21] * d[23] * d[24] + 2 * d[7] * d[16] * d[21] * d[23] * d[24] + 2 * d[7] * d[15] * d[22] * d[23] * d[24] + 2 * d[6] * d[16] * d[22] * d[23] * d[24] - d[2] * d[9] * std::pow(d[23], 2) * d[24] - d[0] * d[11] * std::pow(d[23], 2) * d[24] - 3 * d[5] * d[12] * std::pow(d[23], 2) * d[24] - 3 * d[3] * d[14] * std::pow(d[23], 2) * d[24] - 2 * d[8] * d[9] * d[18] * std::pow(d[24], 2) + 3 * d[6] * d[11] * d[18] * std::pow(d[24], 2) + 3 * d[2] * d[15] * d[18] * std::pow(d[24], 2) - 2 * d[0] * d[17] * d[18] * std::pow(d[24], 2) + d[7] * d[11] * d[19] * std::pow(d[24], 2) + d[2] * d[16] * d[19] * std::pow(d[24], 2) + 3 * d[6] * d[9] * d[20] * std::pow(d[24], 2) + d[7] * d[10] * d[20] * std::pow(d[24], 2) + 3 * d[0] * d[15] * d[20] * std::pow(d[24], 2) + d[1] * d[16] * d[20] * std::pow(d[24], 2) - 2 * d[8] * d[12] * d[21] * std::pow(d[24], 2) + 3 * d[6] * d[14] * d[21] * std::pow(d[24], 2) + 3 * d[5] * d[15] * d[21] * std::pow(d[24], 2) - 2 * d[3] * d[17] * d[21] * std::pow(d[24], 2) + d[7] * d[14] * d[22] * std::pow(d[24], 2) + d[5] * d[16] * d[22] * std::pow(d[24], 2) + 3 * d[6] * d[12] * d[23] * std::pow(d[24], 2) + d[7] * d[13] * d[23] * std::pow(d[24], 2) + 3 * d[3] * d[15] * d[23] * std::pow(d[24], 2) + d[4] * d[16] * d[23] * std::pow(d[24], 2) + d[2] * d[9] * std::pow(d[24], 3) + d[0] * d[11] * std::pow(d[24], 3) + d[5] * d[12] * std::pow(d[24], 3) + d[3] * d[14] * std::pow(d[24], 3) - 2 * d[8] * d[15] * d[18] * d[19] * d[25] - 2 * d[6] * d[17] * d[18] * d[19] * d[25] - 2 * d[8] * d[16] * std::pow(d[19], 2) * d[25] - 2 * d[7] * d[17] * std::pow(d[19], 2) * d[25] + 2 * d[7] * d[15] * d[18] * d[20] * d[25] + 2 * d[6] * d[16] * d[18] * d[20] * d[25] - 6 * d[2] * d[11] * d[19] * d[20] * d[25] - 2 * d[5] * d[14] * d[19] * d[20] * d[25] + 2 * d[6] * d[15] * d[19] * d[20] * d[25] + 6 * d[7] * d[16] * d[19] * d[20] * d[25] - 3 * d[2] * d[10] * std::pow(d[20], 2) * d[25] - 3 * d[1] * d[11] * std::pow(d[20], 2) * d[25] - d[5] * d[13] * std::pow(d[20], 2) * d[25] - d[4] * d[14] * std::pow(d[20], 2) * d[25] - 2 * d[5] * d[11] * d[20] * d[22] * d[25] - 2 * d[2] * d[14] * d[20] * d[22] * d[25] - 2 * d[8] * d[15] * d[21] * d[22] * d[25] - 2 * d[6] * d[17] * d[21] * d[22] * d[25] - 2 * d[8] * d[16] * std::pow(d[22], 2) * d[25] - 2 * d[7] * d[17] * std::pow(d[22], 2) * d[25] - 2 * d[5] * d[11] * d[19] * d[23] * d[25] - 2 * d[2] * d[14] * d[19] * d[23] * d[25] - 2 * d[5] * d[10] * d[20] * d[23] * d[25] - 2 * d[4] * d[11] * d[20] * d[23] * d[25] - 2 * d[2] * d[13] * d[20] * d[23] * d[25] - 2 * d[1] * d[14] * d[20] * d[23] * d[25] + 2 * d[7] * d[15] * d[21] * d[23] * d[25] + 2 * d[6] * d[16] * d[21] * d[23] * d[25] - 2 * d[2] * d[11] * d[22] * d[23] * d[25] - 6 * d[5] * d[14] * d[22] * d[23] * d[25] + 2 * d[6] * d[15] * d[22] * d[23] * d[25] + 6 * d[7] * d[16] * d[22] * d[23] * d[25] - d[2] * d[10] * std::pow(d[23], 2) * d[25] - d[1] * d[11] * std::pow(d[23], 2) * d[25] - 3 * d[5] * d[13] * std::pow(d[23], 2) * d[25] - 3 * d[4] * d[14] * std::pow(d[23], 2) * d[25] - 2 * d[8] * d[10] * d[18] * d[24] * d[25] + 2 * d[7] * d[11] * d[18] * d[24] * d[25] + 2 * d[2] * d[16] * d[18] * d[24] * d[25] - 2 * d[1] * d[17] * d[18] * d[24] * d[25] - 2 * d[8] * d[9] * d[19] * d[24] * d[25] + 2 * d[6] * d[11] * d[19] * d[24] * d[25] + 2 * d[2] * d[15] * d[19] * d[24] * d[25] - 2 * d[0] * d[17] * d[19] * d[24] * d[25] + 2 * d[7] * d[9] * d[20] * d[24] * d[25] + 2 * d[6] * d[10] * d[20] * d[24] * d[25] + 2 * d[1] * d[15] * d[20] * d[24] * d[25] + 2 * d[0] * d[16] * d[20] * d[24] * d[25] - 2 * d[8] * d[13] * d[21] * d[24] * d[25] + 2 * d[7] * d[14] * d[21] * d[24] * d[25] + 2 * d[5] * d[16] * d[21] * d[24] * d[25] - 2 * d[4] * d[17] * d[21] * d[24] * d[25] - 2 * d[8] * d[12] * d[22] * d[24] * d[25] + 2 * d[6] * d[14] * d[22] * d[24] * d[25] + 2 * d[5] * d[15] * d[22] * d[24] * d[25] - 2 * d[3] * d[17] * d[22] * d[24] * d[25] + 2 * d[7] * d[12] * d[23] * d[24] * d[25] + 2 * d[6] * d[13] * d[23] * d[24] * d[25] + 2 * d[4] * d[15] * d[23] * d[24] * d[25] + 2 * d[3] * d[16] * d[23] * d[24] * d[25] + d[2] * d[10] * std::pow(d[24], 2) * d[25] + d[1] * d[11] * std::pow(d[24], 2) * d[25] + d[5] * d[13] * std::pow(d[24], 2) * d[25] + d[4] * d[14] * std::pow(d[24], 2) * d[25] + d[6] * d[11] * d[18] * std::pow(d[25], 2) + d[2] * d[15] * d[18] * std::pow(d[25], 2) - 2 * d[8] * d[10] * d[19] * std::pow(d[25], 2) + 3 * d[7] * d[11] * d[19] * std::pow(d[25], 2) + 3 * d[2] * d[16] * d[19] * std::pow(d[25], 2) - 2 * d[1] * d[17] * d[19] * std::pow(d[25], 2) + d[6] * d[9] * d[20] * std::pow(d[25], 2) + 3 * d[7] * d[10] * d[20] * std::pow(d[25], 2) + d[0] * d[15] * d[20] * std::pow(d[25], 2) + 3 * d[1] * d[16] * d[20] * std::pow(d[25], 2) + d[6] * d[14] * d[21] * std::pow(d[25], 2) + d[5] * d[15] * d[21] * std::pow(d[25], 2) - 2 * d[8] * d[13] * d[22] * std::pow(d[25], 2) + 3 * d[7] * d[14] * d[22] * std::pow(d[25], 2) + 3 * d[5] * d[16] * d[22] * std::pow(d[25], 2) - 2 * d[4] * d[17] * d[22] * std::pow(d[25], 2) + d[6] * d[12] * d[23] * std::pow(d[25], 2) + 3 * d[7] * d[13] * d[23] * std::pow(d[25], 2) + d[3] * d[15] * d[23] * std::pow(d[25], 2) + 3 * d[4] * d[16] * d[23] * std::pow(d[25], 2) + d[2] * d[9] * d[24] * std::pow(d[25], 2) + d[0] * d[11] * d[24] * std::pow(d[25], 2) + d[5] * d[12] * d[24] * std::pow(d[25], 2) + d[3] * d[14] * d[24] * std::pow(d[25], 2) + d[2] * d[10] * std::pow(d[25], 3) + d[1] * d[11] * std::pow(d[25], 3) + d[5] * d[13] * std::pow(d[25], 3) + d[4] * d[14] * std::pow(d[25], 3) + 2 * d[2] * d[11] * std::pow(d[18], 2) * d[26] - 2 * d[6] * d[15] * std::pow(d[18], 2) * d[26] - 2 * d[7] * d[15] * d[18] * d[19] * d[26] - 2 * d[6] * d[16] * d[18] * d[19] * d[26] + 2 * d[2] * d[11] * std::pow(d[19], 2) * d[26] - 2 * d[7] * d[16] * std::pow(d[19], 2) * d[26] + 4 * d[2] * d[9] * d[18] * d[20] * d[26] + 4 * d[0] * d[11] * d[18] * d[20] * d[26] + 2 * d[5] * d[12] * d[18] * d[20] * d[26] + 2 * d[3] * d[14] * d[18] * d[20] * d[26] + 4 * d[2] * d[10] * d[19] * d[20] * d[26] + 4 * d[1] * d[11] * d[19] * d[20] * d[26] + 2 * d[5] * d[13] * d[19] * d[20] * d[26] + 2 * d[4] * d[14] * d[19] * d[20] * d[26] + 2 * d[0] * d[9] * std::pow(d[20], 2) * d[26] + 2 * d[1] * d[10] * std::pow(d[20], 2) * d[26] + 2 * d[5] * d[11] * d[18] * d[21] * d[26] + 2 * d[2] * d[14] * d[18] * d[21] * d[26] + 2 * d[5] * d[9] * d[20] * d[21] * d[26] + 2 * d[0] * d[14] * d[20] * d[21] * d[26] + 2 * d[5] * d[14] * std::pow(d[21], 2) * d[26] - 2 * d[6] * d[15] * std::pow(d[21], 2) * d[26] + 2 * d[5] * d[11] * d[19] * d[22] * d[26] + 2 * d[2] * d[14] * d[19] * d[22] * d[26] + 2 * d[5] * d[10] * d[20] * d[22] * d[26] + 2 * d[1] * d[14] * d[20] * d[22] * d[26] - 2 * d[7] * d[15] * d[21] * d[22] * d[26] - 2 * d[6] * d[16] * d[21] * d[22] * d[26] + 2 * d[5] * d[14] * std::pow(d[22], 2) * d[26] - 2 * d[7] * d[16] * std::pow(d[22], 2) * d[26] + 2 * d[3] * d[11] * d[18] * d[23] * d[26] + 2 * d[2] * d[12] * d[18] * d[23] * d[26] + 2 * d[4] * d[11] * d[19] * d[23] * d[26] + 2 * d[2] * d[13] * d[19] * d[23] * d[26] + 2 * d[3] * d[9] * d[20] * d[23] * d[26] + 2 * d[4] * d[10] * d[20] * d[23] * d[26] + 2 * d[0] * d[12] * d[20] * d[23] * d[26] + 2 * d[1] * d[13] * d[20] * d[23] * d[26] + 2 * d[2] * d[9] * d[21] * d[23] * d[26] + 2 * d[0] * d[11] * d[21] * d[23] * d[26] + 4 * d[5] * d[12] * d[21] * d[23] * d[26] + 4 * d[3] * d[14] * d[21] * d[23] * d[26] + 2 * d[2] * d[10] * d[22] * d[23] * d[26] + 2 * d[1] * d[11] * d[22] * d[23] * d[26] + 4 * d[5] * d[13] * d[22] * d[23] * d[26] + 4 * d[4] * d[14] * d[22] * d[23] * d[26] + 2 * d[3] * d[12] * std::pow(d[23], 2) * d[26] + 2 * d[4] * d[13] * std::pow(d[23], 2) * d[26] - 4 * d[6] * d[9] * d[18] * d[24] * d[26] - 2 * d[7] * d[10] * d[18] * d[24] * d[26] - 4 * d[0] * d[15] * d[18] * d[24] * d[26] - 2 * d[1] * d[16] * d[18] * d[24] * d[26] - 2 * d[7] * d[9] * d[19] * d[24] * d[26] - 2 * d[0] * d[16] * d[19] * d[24] * d[26] - 4 * d[6] * d[12] * d[21] * d[24] * d[26] - 2 * d[7] * d[13] * d[21] * d[24] * d[26] - 4 * d[3] * d[15] * d[21] * d[24] * d[26] - 2 * d[4] * d[16] * d[21] * d[24] * d[26] - 2 * d[7] * d[12] * d[22] * d[24] * d[26] - 2 * d[3] * d[16] * d[22] * d[24] * d[26] - 2 * d[0] * d[9] * std::pow(d[24], 2) * d[26] - 2 * d[3] * d[12] * std::pow(d[24], 2) * d[26] - 2 * d[6] * d[10] * d[18] * d[25] * d[26] - 2 * d[1] * d[15] * d[18] * d[25] * d[26] - 2 * d[6] * d[9] * d[19] * d[25] * d[26] - 4 * d[7] * d[10] * d[19] * d[25] * d[26] - 2 * d[0] * d[15] * d[19] * d[25] * d[26] - 4 * d[1] * d[16] * d[19] * d[25] * d[26] - 2 * d[6] * d[13] * d[21] * d[25] * d[26] - 2 * d[4] * d[15] * d[21] * d[25] * d[26] - 2 * d[6] * d[12] * d[22] * d[25] * d[26] - 4 * d[7] * d[13] * d[22] * d[25] * d[26] - 2 * d[3] * d[15] * d[22] * d[25] * d[26] - 4 * d[4] * d[16] * d[22] * d[25] * d[26] - 2 * d[1] * d[9] * d[24] * d[25] * d[26] - 2 * d[0] * d[10] * d[24] * d[25] * d[26] - 2 * d[4] * d[12] * d[24] * d[25] * d[26] - 2 * d[3] * d[13] * d[24] * d[25] * d[26] - 2 * d[1] * d[10] * std::pow(d[25], 2) * d[26] - 2 * d[4] * d[13] * std::pow(d[25], 2) * d[26];
				coeffs[27] = 2 * d[11] * d[17] * std::pow(d[18], 2) * d[20] + 2 * d[11] * d[17] * std::pow(d[19], 2) * d[20] - 3 * d[11] * d[15] * d[18] * std::pow(d[20], 2) + 2 * d[9] * d[17] * d[18] * std::pow(d[20], 2) - 3 * d[11] * d[16] * d[19] * std::pow(d[20], 2) + 2 * d[10] * d[17] * d[19] * std::pow(d[20], 2) - d[9] * d[15] * std::pow(d[20], 3) - d[10] * d[16] * std::pow(d[20], 3) + 2 * d[14] * d[17] * d[18] * d[20] * d[21] - d[14] * d[15] * std::pow(d[20], 2) * d[21] + 2 * d[14] * d[17] * d[19] * d[20] * d[22] - d[14] * d[16] * std::pow(d[20], 2) * d[22] - 2 * d[14] * d[15] * d[18] * d[20] * d[23] + 2 * d[12] * d[17] * d[18] * d[20] * d[23] - 2 * d[14] * d[16] * d[19] * d[20] * d[23] + 2 * d[13] * d[17] * d[19] * d[20] * d[23] - d[12] * d[15] * std::pow(d[20], 2) * d[23] - d[13] * d[16] * std::pow(d[20], 2) * d[23] + 2 * d[11] * d[17] * d[18] * d[21] * d[23] - 2 * d[11] * d[15] * d[20] * d[21] * d[23] + 2 * d[9] * d[17] * d[20] * d[21] * d[23] + 2 * d[14] * d[17] * std::pow(d[21], 2) * d[23] + 2 * d[11] * d[17] * d[19] * d[22] * d[23] - 2 * d[11] * d[16] * d[20] * d[22] * d[23] + 2 * d[10] * d[17] * d[20] * d[22] * d[23] + 2 * d[14] * d[17] * std::pow(d[22], 2) * d[23] - d[11] * d[15] * d[18] * std::pow(d[23], 2) - d[11] * d[16] * d[19] * std::pow(d[23], 2) - d[9] * d[15] * d[20] * std::pow(d[23], 2) - d[10] * d[16] * d[20] * std::pow(d[23], 2) - 3 * d[14] * d[15] * d[21] * std::pow(d[23], 2) + 2 * d[12] * d[17] * d[21] * std::pow(d[23], 2) - 3 * d[14] * d[16] * d[22] * std::pow(d[23], 2) + 2 * d[13] * d[17] * d[22] * std::pow(d[23], 2) - d[12] * d[15] * std::pow(d[23], 3) - d[13] * d[16] * std::pow(d[23], 3) - 2 * d[15] * d[17] * std::pow(d[18], 2) * d[24] - 2 * d[16] * d[17] * d[18] * d[19] * d[24] - 3 * std::pow(d[11], 2) * d[18] * d[20] * d[24] - std::pow(d[14], 2) * d[18] * d[20] * d[24] + 3 * std::pow(d[15], 2) * d[18] * d[20] * d[24] + std::pow(d[16], 2) * d[18] * d[20] * d[24] + 2 * d[15] * d[16] * d[19] * d[20] * d[24] - 3 * d[9] * d[11] * std::pow(d[20], 2) * d[24] - d[12] * d[14] * std::pow(d[20], 2) * d[24] - 2 * d[11] * d[14] * d[20] * d[21] * d[24] - 2 * d[15] * d[17] * std::pow(d[21], 2) * d[24] - 2 * d[16] * d[17] * d[21] * d[22] * d[24] - 2 * d[11] * d[14] * d[18] * d[23] * d[24] - 2 * d[11] * d[12] * d[20] * d[23] * d[24] - 2 * d[9] * d[14] * d[20] * d[23] * d[24] - std::pow(d[11], 2) * d[21] * d[23] * d[24] - 3 * std::pow(d[14], 2) * d[21] * d[23] * d[24] + 3 * std::pow(d[15], 2) * d[21] * d[23] * d[24] + std::pow(d[16], 2) * d[21] * d[23] * d[24] + 2 * d[15] * d[16] * d[22] * d[23] * d[24] - d[9] * d[11] * std::pow(d[23], 2) * d[24] - 3 * d[12] * d[14] * std::pow(d[23], 2) * d[24] + 3 * d[11] * d[15] * d[18] * std::pow(d[24], 2) - 2 * d[9] * d[17] * d[18] * std::pow(d[24], 2) + d[11] * d[16] * d[19] * std::pow(d[24], 2) + 3 * d[9] * d[15] * d[20] * std::pow(d[24], 2) + d[10] * d[16] * d[20] * std::pow(d[24], 2) + 3 * d[14] * d[15] * d[21] * std::pow(d[24], 2) - 2 * d[12] * d[17] * d[21] * std::pow(d[24], 2) + d[14] * d[16] * d[22] * std::pow(d[24], 2) + 3 * d[12] * d[15] * d[23] * std::pow(d[24], 2) + d[13] * d[16] * d[23] * std::pow(d[24], 2) + d[9] * d[11] * std::pow(d[24], 3) + d[12] * d[14] * std::pow(d[24], 3) - 2 * d[15] * d[17] * d[18] * d[19] * d[25] - 2 * d[16] * d[17] * std::pow(d[19], 2) * d[25] + 2 * d[15] * d[16] * d[18] * d[20] * d[25] - 3 * std::pow(d[11], 2) * d[19] * d[20] * d[25] - std::pow(d[14], 2) * d[19] * d[20] * d[25] + std::pow(d[15], 2) * d[19] * d[20] * d[25] + 3 * std::pow(d[16], 2) * d[19] * d[20] * d[25] - 3 * d[10] * d[11] * std::pow(d[20], 2) * d[25] - d[13] * d[14] * std::pow(d[20], 2) * d[25] - 2 * d[11] * d[14] * d[20] * d[22] * d[25] - 2 * d[15] * d[17] * d[21] * d[22] * d[25] - 2 * d[16] * d[17] * std::pow(d[22], 2) * d[25] - 2 * d[11] * d[14] * d[19] * d[23] * d[25] - 2 * d[11] * d[13] * d[20] * d[23] * d[25] - 2 * d[10] * d[14] * d[20] * d[23] * d[25] + 2 * d[15] * d[16] * d[21] * d[23] * d[25] - std::pow(d[11], 2) * d[22] * d[23] * d[25] - 3 * std::pow(d[14], 2) * d[22] * d[23] * d[25] + std::pow(d[15], 2) * d[22] * d[23] * d[25] + 3 * std::pow(d[16], 2) * d[22] * d[23] * d[25] - d[10] * d[11] * std::pow(d[23], 2) * d[25] - 3 * d[13] * d[14] * std::pow(d[23], 2) * d[25] + 2 * d[11] * d[16] * d[18] * d[24] * d[25] - 2 * d[10] * d[17] * d[18] * d[24] * d[25] + 2 * d[11] * d[15] * d[19] * d[24] * d[25] - 2 * d[9] * d[17] * d[19] * d[24] * d[25] + 2 * d[10] * d[15] * d[20] * d[24] * d[25] + 2 * d[9] * d[16] * d[20] * d[24] * d[25] + 2 * d[14] * d[16] * d[21] * d[24] * d[25] - 2 * d[13] * d[17] * d[21] * d[24] * d[25] + 2 * d[14] * d[15] * d[22] * d[24] * d[25] - 2 * d[12] * d[17] * d[22] * d[24] * d[25] + 2 * d[13] * d[15] * d[23] * d[24] * d[25] + 2 * d[12] * d[16] * d[23] * d[24] * d[25] + d[10] * d[11] * std::pow(d[24], 2) * d[25] + d[13] * d[14] * std::pow(d[24], 2) * d[25] + d[11] * d[15] * d[18] * std::pow(d[25], 2) + 3 * d[11] * d[16] * d[19] * std::pow(d[25], 2) - 2 * d[10] * d[17] * d[19] * std::pow(d[25], 2) + d[9] * d[15] * d[20] * std::pow(d[25], 2) + 3 * d[10] * d[16] * d[20] * std::pow(d[25], 2) + d[14] * d[15] * d[21] * std::pow(d[25], 2) + 3 * d[14] * d[16] * d[22] * std::pow(d[25], 2) - 2 * d[13] * d[17] * d[22] * std::pow(d[25], 2) + d[12] * d[15] * d[23] * std::pow(d[25], 2) + 3 * d[13] * d[16] * d[23] * std::pow(d[25], 2) + d[9] * d[11] * d[24] * std::pow(d[25], 2) + d[12] * d[14] * d[24] * std::pow(d[25], 2) + d[10] * d[11] * std::pow(d[25], 3) + d[13] * d[14] * std::pow(d[25], 3) + std::pow(d[11], 2) * std::pow(d[18], 2) * d[26] - std::pow(d[15], 2) * std::pow(d[18], 2) * d[26] - 2 * d[15] * d[16] * d[18] * d[19] * d[26] + std::pow(d[11], 2) * std::pow(d[19], 2) * d[26] - std::pow(d[16], 2) * std::pow(d[19], 2) * d[26] + 4 * d[9] * d[11] * d[18] * d[20] * d[26] + 2 * d[12] * d[14] * d[18] * d[20] * d[26] + 4 * d[10] * d[11] * d[19] * d[20] * d[26] + 2 * d[13] * d[14] * d[19] * d[20] * d[26] + std::pow(d[9], 2) * std::pow(d[20], 2) * d[26] + std::pow(d[10], 2) * std::pow(d[20], 2) * d[26] + 2 * d[11] * d[14] * d[18] * d[21] * d[26] + 2 * d[9] * d[14] * d[20] * d[21] * d[26] + std::pow(d[14], 2) * std::pow(d[21], 2) * d[26] - std::pow(d[15], 2) * std::pow(d[21], 2) * d[26] + 2 * d[11] * d[14] * d[19] * d[22] * d[26] + 2 * d[10] * d[14] * d[20] * d[22] * d[26] - 2 * d[15] * d[16] * d[21] * d[22] * d[26] + std::pow(d[14], 2) * std::pow(d[22], 2) * d[26] - std::pow(d[16], 2) * std::pow(d[22], 2) * d[26] + 2 * d[11] * d[12] * d[18] * d[23] * d[26] + 2 * d[11] * d[13] * d[19] * d[23] * d[26] + 2 * d[9] * d[12] * d[20] * d[23] * d[26] + 2 * d[10] * d[13] * d[20] * d[23] * d[26] + 2 * d[9] * d[11] * d[21] * d[23] * d[26] + 4 * d[12] * d[14] * d[21] * d[23] * d[26] + 2 * d[10] * d[11] * d[22] * d[23] * d[26] + 4 * d[13] * d[14] * d[22] * d[23] * d[26] + std::pow(d[12], 2) * std::pow(d[23], 2) * d[26] + std::pow(d[13], 2) * std::pow(d[23], 2) * d[26] - 4 * d[9] * d[15] * d[18] * d[24] * d[26] - 2 * d[10] * d[16] * d[18] * d[24] * d[26] - 2 * d[9] * d[16] * d[19] * d[24] * d[26] - 4 * d[12] * d[15] * d[21] * d[24] * d[26] - 2 * d[13] * d[16] * d[21] * d[24] * d[26] - 2 * d[12] * d[16] * d[22] * d[24] * d[26] - std::pow(d[9], 2) * std::pow(d[24], 2) * d[26] - std::pow(d[12], 2) * std::pow(d[24], 2) * d[26] - 2 * d[10] * d[15] * d[18] * d[25] * d[26] - 2 * d[9] * d[15] * d[19] * d[25] * d[26] - 4 * d[10] * d[16] * d[19] * d[25] * d[26] - 2 * d[13] * d[15] * d[21] * d[25] * d[26] - 2 * d[12] * d[15] * d[22] * d[25] * d[26] - 4 * d[13] * d[16] * d[22] * d[25] * d[26] - 2 * d[9] * d[10] * d[24] * d[25] * d[26] - 2 * d[12] * d[13] * d[24] * d[25] * d[26] - std::pow(d[10], 2) * std::pow(d[25], 2) * d[26] - std::pow(d[13], 2) * std::pow(d[25], 2) * d[26];
				coeffs[28] = d[8] * std::pow(d[18], 2) * std::pow(d[20], 2) + d[8] * std::pow(d[19], 2) * std::pow(d[20], 2) - d[6] * d[18] * std::pow(d[20], 3) - d[7] * d[19] * std::pow(d[20], 3) + 2 * d[8] * d[18] * d[20] * d[21] * d[23] - d[6] * std::pow(d[20], 2) * d[21] * d[23] + 2 * d[8] * d[19] * d[20] * d[22] * d[23] - d[7] * std::pow(d[20], 2) * d[22] * d[23] - d[6] * d[18] * d[20] * std::pow(d[23], 2) - d[7] * d[19] * d[20] * std::pow(d[23], 2) + d[8] * std::pow(d[21], 2) * std::pow(d[23], 2) + d[8] * std::pow(d[22], 2) * std::pow(d[23], 2) - d[6] * d[21] * std::pow(d[23], 3) - d[7] * d[22] * std::pow(d[23], 3) - 3 * d[2] * d[18] * std::pow(d[20], 2) * d[24] - d[0] * std::pow(d[20], 3) * d[24] - d[5] * std::pow(d[20], 2) * d[21] * d[24] - 2 * d[5] * d[18] * d[20] * d[23] * d[24] - d[3] * std::pow(d[20], 2) * d[23] * d[24] - 2 * d[2] * d[20] * d[21] * d[23] * d[24] - d[2] * d[18] * std::pow(d[23], 2) * d[24] - d[0] * d[20] * std::pow(d[23], 2) * d[24] - 3 * d[5] * d[21] * std::pow(d[23], 2) * d[24] - d[3] * std::pow(d[23], 3) * d[24] - d[8] * std::pow(d[18], 2) * std::pow(d[24], 2) + 3 * d[6] * d[18] * d[20] * std::pow(d[24], 2) + d[7] * d[19] * d[20] * std::pow(d[24], 2) - d[8] * std::pow(d[21], 2) * std::pow(d[24], 2) + 3 * d[6] * d[21] * d[23] * std::pow(d[24], 2) + d[7] * d[22] * d[23] * std::pow(d[24], 2) + d[2] * d[18] * std::pow(d[24], 3) + d[0] * d[20] * std::pow(d[24], 3) + d[5] * d[21] * std::pow(d[24], 3) + d[3] * d[23] * std::pow(d[24], 3) - 3 * d[2] * d[19] * std::pow(d[20], 2) * d[25] - d[1] * std::pow(d[20], 3) * d[25] - d[5] * std::pow(d[20], 2) * d[22] * d[25] - 2 * d[5] * d[19] * d[20] * d[23] * d[25] - d[4] * std::pow(d[20], 2) * d[23] * d[25] - 2 * d[2] * d[20] * d[22] * d[23] * d[25] - d[2] * d[19] * std::pow(d[23], 2) * d[25] - d[1] * d[20] * std::pow(d[23], 2) * d[25] - 3 * d[5] * d[22] * std::pow(d[23], 2) * d[25] - d[4] * std::pow(d[23], 3) * d[25] - 2 * d[8] * d[18] * d[19] * d[24] * d[25] + 2 * d[7] * d[18] * d[20] * d[24] * d[25] + 2 * d[6] * d[19] * d[20] * d[24] * d[25] - 2 * d[8] * d[21] * d[22] * d[24] * d[25] + 2 * d[7] * d[21] * d[23] * d[24] * d[25] + 2 * d[6] * d[22] * d[23] * d[24] * d[25] + d[2] * d[19] * std::pow(d[24], 2) * d[25] + d[1] * d[20] * std::pow(d[24], 2) * d[25] + d[5] * d[22] * std::pow(d[24], 2) * d[25] + d[4] * d[23] * std::pow(d[24], 2) * d[25] - d[8] * std::pow(d[19], 2) * std::pow(d[25], 2) + d[6] * d[18] * d[20] * std::pow(d[25], 2) + 3 * d[7] * d[19] * d[20] * std::pow(d[25], 2) - d[8] * std::pow(d[22], 2) * std::pow(d[25], 2) + d[6] * d[21] * d[23] * std::pow(d[25], 2) + 3 * d[7] * d[22] * d[23] * std::pow(d[25], 2) + d[2] * d[18] * d[24] * std::pow(d[25], 2) + d[0] * d[20] * d[24] * std::pow(d[25], 2) + d[5] * d[21] * d[24] * std::pow(d[25], 2) + d[3] * d[23] * d[24] * std::pow(d[25], 2) + d[2] * d[19] * std::pow(d[25], 3) + d[1] * d[20] * std::pow(d[25], 3) + d[5] * d[22] * std::pow(d[25], 3) + d[4] * d[23] * std::pow(d[25], 3) + 2 * d[2] * std::pow(d[18], 2) * d[20] * d[26] + 2 * d[2] * std::pow(d[19], 2) * d[20] * d[26] + 2 * d[0] * d[18] * std::pow(d[20], 2) * d[26] + 2 * d[1] * d[19] * std::pow(d[20], 2) * d[26] + 2 * d[5] * d[18] * d[20] * d[21] * d[26] + 2 * d[5] * d[19] * d[20] * d[22] * d[26] + 2 * d[3] * d[18] * d[20] * d[23] * d[26] + 2 * d[4] * d[19] * d[20] * d[23] * d[26] + 2 * d[2] * d[18] * d[21] * d[23] * d[26] + 2 * d[0] * d[20] * d[21] * d[23] * d[26] + 2 * d[5] * std::pow(d[21], 2) * d[23] * d[26] + 2 * d[2] * d[19] * d[22] * d[23] * d[26] + 2 * d[1] * d[20] * d[22] * d[23] * d[26] + 2 * d[5] * std::pow(d[22], 2) * d[23] * d[26] + 2 * d[3] * d[21] * std::pow(d[23], 2) * d[26] + 2 * d[4] * d[22] * std::pow(d[23], 2) * d[26] - 2 * d[6] * std::pow(d[18], 2) * d[24] * d[26] - 2 * d[7] * d[18] * d[19] * d[24] * d[26] - 2 * d[6] * std::pow(d[21], 2) * d[24] * d[26] - 2 * d[7] * d[21] * d[22] * d[24] * d[26] - 2 * d[0] * d[18] * std::pow(d[24], 2) * d[26] - 2 * d[3] * d[21] * std::pow(d[24], 2) * d[26] - 2 * d[6] * d[18] * d[19] * d[25] * d[26] - 2 * d[7] * std::pow(d[19], 2) * d[25] * d[26] - 2 * d[6] * d[21] * d[22] * d[25] * d[26] - 2 * d[7] * std::pow(d[22], 2) * d[25] * d[26] - 2 * d[1] * d[18] * d[24] * d[25] * d[26] - 2 * d[0] * d[19] * d[24] * d[25] * d[26] - 2 * d[4] * d[21] * d[24] * d[25] * d[26] - 2 * d[3] * d[22] * d[24] * d[25] * d[26] - 2 * d[1] * d[19] * std::pow(d[25], 2) * d[26] - 2 * d[4] * d[22] * std::pow(d[25], 2) * d[26];
				coeffs[29] = d[17] * std::pow(d[18], 2) * std::pow(d[20], 2) + d[17] * std::pow(d[19], 2) * std::pow(d[20], 2) - d[15] * d[18] * std::pow(d[20], 3) - d[16] * d[19] * std::pow(d[20], 3) + 2 * d[17] * d[18] * d[20] * d[21] * d[23] - d[15] * std::pow(d[20], 2) * d[21] * d[23] + 2 * d[17] * d[19] * d[20] * d[22] * d[23] - d[16] * std::pow(d[20], 2) * d[22] * d[23] - d[15] * d[18] * d[20] * std::pow(d[23], 2) - d[16] * d[19] * d[20] * std::pow(d[23], 2) + d[17] * std::pow(d[21], 2) * std::pow(d[23], 2) + d[17] * std::pow(d[22], 2) * std::pow(d[23], 2) - d[15] * d[21] * std::pow(d[23], 3) - d[16] * d[22] * std::pow(d[23], 3) - 3 * d[11] * d[18] * std::pow(d[20], 2) * d[24] - d[9] * std::pow(d[20], 3) * d[24] - d[14] * std::pow(d[20], 2) * d[21] * d[24] - 2 * d[14] * d[18] * d[20] * d[23] * d[24] - d[12] * std::pow(d[20], 2) * d[23] * d[24] - 2 * d[11] * d[20] * d[21] * d[23] * d[24] - d[11] * d[18] * std::pow(d[23], 2) * d[24] - d[9] * d[20] * std::pow(d[23], 2) * d[24] - 3 * d[14] * d[21] * std::pow(d[23], 2) * d[24] - d[12] * std::pow(d[23], 3) * d[24] - d[17] * std::pow(d[18], 2) * std::pow(d[24], 2) + 3 * d[15] * d[18] * d[20] * std::pow(d[24], 2) + d[16] * d[19] * d[20] * std::pow(d[24], 2) - d[17] * std::pow(d[21], 2) * std::pow(d[24], 2) + 3 * d[15] * d[21] * d[23] * std::pow(d[24], 2) + d[16] * d[22] * d[23] * std::pow(d[24], 2) + d[11] * d[18] * std::pow(d[24], 3) + d[9] * d[20] * std::pow(d[24], 3) + d[14] * d[21] * std::pow(d[24], 3) + d[12] * d[23] * std::pow(d[24], 3) - 3 * d[11] * d[19] * std::pow(d[20], 2) * d[25] - d[10] * std::pow(d[20], 3) * d[25] - d[14] * std::pow(d[20], 2) * d[22] * d[25] - 2 * d[14] * d[19] * d[20] * d[23] * d[25] - d[13] * std::pow(d[20], 2) * d[23] * d[25] - 2 * d[11] * d[20] * d[22] * d[23] * d[25] - d[11] * d[19] * std::pow(d[23], 2) * d[25] - d[10] * d[20] * std::pow(d[23], 2) * d[25] - 3 * d[14] * d[22] * std::pow(d[23], 2) * d[25] - d[13] * std::pow(d[23], 3) * d[25] - 2 * d[17] * d[18] * d[19] * d[24] * d[25] + 2 * d[16] * d[18] * d[20] * d[24] * d[25] + 2 * d[15] * d[19] * d[20] * d[24] * d[25] - 2 * d[17] * d[21] * d[22] * d[24] * d[25] + 2 * d[16] * d[21] * d[23] * d[24] * d[25] + 2 * d[15] * d[22] * d[23] * d[24] * d[25] + d[11] * d[19] * std::pow(d[24], 2) * d[25] + d[10] * d[20] * std::pow(d[24], 2) * d[25] + d[14] * d[22] * std::pow(d[24], 2) * d[25] + d[13] * d[23] * std::pow(d[24], 2) * d[25] - d[17] * std::pow(d[19], 2) * std::pow(d[25], 2) + d[15] * d[18] * d[20] * std::pow(d[25], 2) + 3 * d[16] * d[19] * d[20] * std::pow(d[25], 2) - d[17] * std::pow(d[22], 2) * std::pow(d[25], 2) + d[15] * d[21] * d[23] * std::pow(d[25], 2) + 3 * d[16] * d[22] * d[23] * std::pow(d[25], 2) + d[11] * d[18] * d[24] * std::pow(d[25], 2) + d[9] * d[20] * d[24] * std::pow(d[25], 2) + d[14] * d[21] * d[24] * std::pow(d[25], 2) + d[12] * d[23] * d[24] * std::pow(d[25], 2) + d[11] * d[19] * std::pow(d[25], 3) + d[10] * d[20] * std::pow(d[25], 3) + d[14] * d[22] * std::pow(d[25], 3) + d[13] * d[23] * std::pow(d[25], 3) + 2 * d[11] * std::pow(d[18], 2) * d[20] * d[26] + 2 * d[11] * std::pow(d[19], 2) * d[20] * d[26] + 2 * d[9] * d[18] * std::pow(d[20], 2) * d[26] + 2 * d[10] * d[19] * std::pow(d[20], 2) * d[26] + 2 * d[14] * d[18] * d[20] * d[21] * d[26] + 2 * d[14] * d[19] * d[20] * d[22] * d[26] + 2 * d[12] * d[18] * d[20] * d[23] * d[26] + 2 * d[13] * d[19] * d[20] * d[23] * d[26] + 2 * d[11] * d[18] * d[21] * d[23] * d[26] + 2 * d[9] * d[20] * d[21] * d[23] * d[26] + 2 * d[14] * std::pow(d[21], 2) * d[23] * d[26] + 2 * d[11] * d[19] * d[22] * d[23] * d[26] + 2 * d[10] * d[20] * d[22] * d[23] * d[26] + 2 * d[14] * std::pow(d[22], 2) * d[23] * d[26] + 2 * d[12] * d[21] * std::pow(d[23], 2) * d[26] + 2 * d[13] * d[22] * std::pow(d[23], 2) * d[26] - 2 * d[15] * std::pow(d[18], 2) * d[24] * d[26] - 2 * d[16] * d[18] * d[19] * d[24] * d[26] - 2 * d[15] * std::pow(d[21], 2) * d[24] * d[26] - 2 * d[16] * d[21] * d[22] * d[24] * d[26] - 2 * d[9] * d[18] * std::pow(d[24], 2) * d[26] - 2 * d[12] * d[21] * std::pow(d[24], 2) * d[26] - 2 * d[15] * d[18] * d[19] * d[25] * d[26] - 2 * d[16] * std::pow(d[19], 2) * d[25] * d[26] - 2 * d[15] * d[21] * d[22] * d[25] * d[26] - 2 * d[16] * std::pow(d[22], 2) * d[25] * d[26] - 2 * d[10] * d[18] * d[24] * d[25] * d[26] - 2 * d[9] * d[19] * d[24] * d[25] * d[26] - 2 * d[13] * d[21] * d[24] * d[25] * d[26] - 2 * d[12] * d[22] * d[24] * d[25] * d[26] - 2 * d[10] * d[19] * std::pow(d[25], 2) * d[26] - 2 * d[13] * d[22] * std::pow(d[25], 2) * d[26];
				coeffs[30] = -d[18] * std::pow(d[20], 3) * d[24] - std::pow(d[20], 2) * d[21] * d[23] * d[24] - d[18] * d[20] * std::pow(d[23], 2) * d[24] - d[21] * std::pow(d[23], 3) * d[24] + d[18] * d[20] * std::pow(d[24], 3) + d[21] * d[23] * std::pow(d[24], 3) - d[19] * std::pow(d[20], 3) * d[25] - std::pow(d[20], 2) * d[22] * d[23] * d[25] - d[19] * d[20] * std::pow(d[23], 2) * d[25] - d[22] * std::pow(d[23], 3) * d[25] + d[19] * d[20] * std::pow(d[24], 2) * d[25] + d[22] * d[23] * std::pow(d[24], 2) * d[25] + d[18] * d[20] * d[24] * std::pow(d[25], 2) + d[21] * d[23] * d[24] * std::pow(d[25], 2) + d[19] * d[20] * std::pow(d[25], 3) + d[22] * d[23] * std::pow(d[25], 3) + std::pow(d[18], 2) * std::pow(d[20], 2) * d[26] + std::pow(d[19], 2) * std::pow(d[20], 2) * d[26] + 2 * d[18] * d[20] * d[21] * d[23] * d[26] + 2 * d[19] * d[20] * d[22] * d[23] * d[26] + std::pow(d[21], 2) * std::pow(d[23], 2) * d[26] + std::pow(d[22], 2) * std::pow(d[23], 2) * d[26] - std::pow(d[18], 2) * std::pow(d[24], 2) * d[26] - std::pow(d[21], 2) * std::pow(d[24], 2) * d[26] - 2 * d[18] * d[19] * d[24] * d[25] * d[26] - 2 * d[21] * d[22] * d[24] * d[25] * d[26] - std::pow(d[19], 2) * std::pow(d[25], 2) * d[26] - std::pow(d[22], 2) * std::pow(d[25], 2) * d[26];

				static const int coeffs_ind[] = {0, 10, 1, 0, 10, 11, 2, 1, 0, 10, 11, 12, 3, 2, 1, 0, 11, 12, 13, 3, 2, 1, 0, 12, 13, 14, 3, 2, 1, 13, 14, 15, 3, 2, 14, 15, 4, 0, 10, 16, 5, 4, 16, 1, 0, 10, 11, 17, 6, 5,
												 4, 16, 17, 2, 1, 0, 11, 12, 18, 6, 5, 4, 17, 18, 3, 2, 1, 0, 12, 13, 19, 6, 5, 4, 18, 19, 3, 2, 1, 13, 14, 20, 7, 4, 0, 10, 16, 21, 8, 7, 21, 5, 4, 16, 1, 11, 17, 0, 22, 8,
												 7, 21, 22, 6, 5, 4, 17, 2, 12, 0, 18, 1, 23, 9, 7, 4, 16, 0, 21, 25, 9, 25, 8, 7, 21, 5, 17, 1, 0, 22, 4, 26, 9, 7, 21, 4, 0, 25, 28, 8, 7, 22, 23, 6, 5, 4, 18, 3, 13, 1,
												 19, 2, 24, 6, 5, 19, 20, 3, 2, 14, 15, 3, 15, 30, 9, 28, 9, 7, 30, 9, 25, 7, 4, 28, 30, 28, 9, 25, 8, 22, 5, 4, 1, 26, 7, 29, 9, 25, 26, 8, 7, 22, 6, 18, 4, 2, 1, 23, 5, 27,
												 30, 28, 26, 8, 7, 5, 29, 9, 28, 29, 9, 26, 23, 7, 6, 5, 2, 27, 8, 9, 26, 27, 8, 7, 23, 19, 5, 3, 2, 24, 6, 8, 7, 23, 24, 6, 5, 19, 14, 2, 20, 3, 30, 29, 9, 8, 30, 29, 27, 9,
												 8, 6, 29, 9, 27, 24, 8, 6, 3, 9, 27, 8, 24, 20, 6, 3, 8, 24, 6, 20, 15, 3, 6, 20, 3, 15};

				static const int C_ind[] = {0, 20, 21, 22, 27, 41, 42, 43, 44, 47, 48, 62, 63, 64, 65, 66, 68, 69, 83, 85, 86, 87, 88, 89, 90, 104, 107, 108, 109, 110, 111, 125, 129, 130, 131, 132, 147, 154, 165, 167, 168, 169, 174, 175, 176, 179, 186, 188, 189, 190,
											191, 194, 195, 196, 197, 198, 200, 207, 209, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 228, 230, 233, 234, 235, 236, 237, 239, 240, 241, 242, 249, 251, 252, 259, 264, 265, 270, 272, 273, 274, 279, 280, 281, 284, 285, 286, 291, 292, 293, 295,
											296, 299, 300, 301, 302, 303, 305, 306, 307, 308, 312, 313, 314, 315, 322, 327, 328, 330, 333, 335, 337, 342, 343, 344, 347, 348, 349, 351, 352, 354, 355, 356, 364, 369, 370, 372, 374, 375, 377, 380, 381, 383, 384, 386, 387, 388, 389, 390, 391, 392,
											396, 397, 398, 402, 403, 404, 405, 408, 409, 410, 417, 424, 425, 454, 458, 475, 477, 479, 480, 495, 496, 498, 500, 501, 503, 510, 512, 515, 516, 517, 519, 520, 521, 522, 523, 524, 527, 530, 531, 533, 534, 536, 537, 538, 539, 540, 541, 543, 544, 545,
											552, 557, 559, 561, 562, 563, 564, 565, 572, 573, 576, 578, 580, 581, 582, 583, 584, 585, 586, 591, 593, 594, 597, 598, 599, 601, 602, 603, 604, 606, 607, 612, 613, 614, 615, 618, 619, 620, 622, 623, 627, 628, 641, 643, 646, 647, 656, 662, 664, 665,
											667, 668, 677, 682, 683, 685, 686, 688, 689, 697, 698, 703, 704, 706, 707, 709, 718, 719, 724, 725, 727, 728, 739, 740, 745, 746};

				MatrixXd C = MatrixXd::Zero(21, 36);
				for (int i = 0; i < 276; i++)
				{
					C(C_ind[i]) = coeffs(coeffs_ind[i]);
				}

				MatrixXd C0 = C.leftCols(21);
				MatrixXd C1 = C.rightCols(15);
				MatrixXd C12 = C0.fullPivLu().solve(C1);
				MatrixXd RR(18, 15);
				RR << -C12.bottomRows(3), MatrixXd::Identity(15, 15);

				static const int AM_ind[] = {12, 8, 6, 7, 0, 9, 10, 11, 1, 13, 14, 15, 16, 17, 2};
				MatrixXd AM(15, 15);
				for (int i = 0; i < 15; i++)
				{
					AM.row(i) = RR.row(AM_ind[i]);
				}

				EigenSolver<MatrixXd> es(AM);
				ArrayXcd D = es.eigenvalues();
				ArrayXXcd V = es.eigenvectors();
				V = (V / V.row(0).replicate(15, 1)).eval();

				MatrixXcd sols(2, 15);
				sols.row(0) = V.row(1);
				sols.row(1) = D.transpose();
				return sols;
			}

		}
	}
}